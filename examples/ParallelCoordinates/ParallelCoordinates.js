/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 12);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(5)(undefined);
// imports


// module
exports.push([module.i, "/*!\n *  Font Awesome 4.7.0 by @davegandy - http://fontawesome.io - @fontawesome\n *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n */\n/* FONT PATH\n * -------------------------- */\n@font-face {\n  font-family: 'FontAwesome';\n  src: url(" + __webpack_require__(37) + ");\n  src: url(" + __webpack_require__(38) + "?#iefix&v=4.7.0) format('embedded-opentype'), url(" + __webpack_require__(39) + ") format('woff2'), url(" + __webpack_require__(40) + ") format('woff'), url(" + __webpack_require__(41) + ") format('truetype'), url(" + __webpack_require__(42) + "#fontawesomeregular) format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n.font-awesome-fa_3nqz4 {\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n/* makes the font 33% larger relative to the icon container */\n.font-awesome-fa-lg_2uq3c {\n  font-size: 1.33333333em;\n  line-height: 0.75em;\n  vertical-align: -15%;\n}\n.font-awesome-fa-2x_2hfhw {\n  font-size: 2em;\n}\n.font-awesome-fa-3x_43xq9 {\n  font-size: 3em;\n}\n.font-awesome-fa-4x_6bygg {\n  font-size: 4em;\n}\n.font-awesome-fa-5x_3cfrj {\n  font-size: 5em;\n}\n.font-awesome-fa-fw_41emh {\n  width: 1.28571429em;\n  text-align: center;\n}\n.font-awesome-fa-ul_45gv7 {\n  padding-left: 0;\n  margin-left: 2.14285714em;\n  list-style-type: none;\n}\n.font-awesome-fa-ul_45gv7 > li {\n  position: relative;\n}\n.font-awesome-fa-li_95eyn {\n  position: absolute;\n  left: -2.14285714em;\n  width: 2.14285714em;\n  top: 0.14285714em;\n  text-align: center;\n}\n.font-awesome-fa-li_95eyn.font-awesome-fa-lg_2uq3c {\n  left: -1.85714286em;\n}\n.font-awesome-fa-border_3vkxd {\n  padding: .2em .25em .15em;\n  border: solid 0.08em #eeeeee;\n  border-radius: .1em;\n}\n.font-awesome-fa-pull-left_4qwcd {\n  float: left;\n}\n.font-awesome-fa-pull-right_3vu9s {\n  float: right;\n}\n.font-awesome-fa_3nqz4.font-awesome-fa-pull-left_4qwcd {\n  margin-right: .3em;\n}\n.font-awesome-fa_3nqz4.font-awesome-fa-pull-right_3vu9s {\n  margin-left: .3em;\n}\n/* Deprecated as of 4.4.0 */\n.font-awesome-pull-right_391a4 {\n  float: right;\n}\n.font-awesome-pull-left_4qwy8 {\n  float: left;\n}\n.font-awesome-fa_3nqz4.font-awesome-pull-left_4qwy8 {\n  margin-right: .3em;\n}\n.font-awesome-fa_3nqz4.font-awesome-pull-right_391a4 {\n  margin-left: .3em;\n}\n.font-awesome-fa-spin_3jhtx {\n  -webkit-animation: font-awesome-fa-spin_3jhtx 2s infinite linear;\n  animation: font-awesome-fa-spin_3jhtx 2s infinite linear;\n}\n.font-awesome-fa-pulse_3txbs {\n  -webkit-animation: font-awesome-fa-spin_3jhtx 1s infinite steps(8);\n  animation: font-awesome-fa-spin_3jhtx 1s infinite steps(8);\n}\n@-webkit-keyframes font-awesome-fa-spin_3jhtx {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes font-awesome-fa-spin_3jhtx {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n.font-awesome-fa-rotate-90_456eb {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n  -webkit-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n.font-awesome-fa-rotate-180_48nwr {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";\n  -webkit-transform: rotate(180deg);\n  -ms-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n.font-awesome-fa-rotate-270_a7rpt {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n  -webkit-transform: rotate(270deg);\n  -ms-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n.font-awesome-fa-flip-horizontal_wyack {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";\n  -webkit-transform: scale(-1, 1);\n  -ms-transform: scale(-1, 1);\n  transform: scale(-1, 1);\n}\n.font-awesome-fa-flip-vertical_2k1sk {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(1, -1);\n  -ms-transform: scale(1, -1);\n  transform: scale(1, -1);\n}\n:root .font-awesome-fa-rotate-90_456eb,\n:root .font-awesome-fa-rotate-180_48nwr,\n:root .font-awesome-fa-rotate-270_a7rpt,\n:root .font-awesome-fa-flip-horizontal_wyack,\n:root .font-awesome-fa-flip-vertical_2k1sk {\n  filter: none;\n}\n.font-awesome-fa-stack_2d23t {\n  position: relative;\n  display: inline-block;\n  width: 2em;\n  height: 2em;\n  line-height: 2em;\n  vertical-align: middle;\n}\n.font-awesome-fa-stack-1x_29dce,\n.font-awesome-fa-stack-2x_277n7 {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  text-align: center;\n}\n.font-awesome-fa-stack-1x_29dce {\n  line-height: inherit;\n}\n.font-awesome-fa-stack-2x_277n7 {\n  font-size: 2em;\n}\n.font-awesome-fa-inverse_2nc3d {\n  color: #ffffff;\n}\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\n   readers do not read off random characters that represent icons */\n.font-awesome-fa-glass_4btzw:before {\n  content: \"\\F000\";\n}\n.font-awesome-fa-music_4agvw:before {\n  content: \"\\F001\";\n}\n.font-awesome-fa-search_3kfd2:before {\n  content: \"\\F002\";\n}\n.font-awesome-fa-envelope-o_2favh:before {\n  content: \"\\F003\";\n}\n.font-awesome-fa-heart_hdy2u:before {\n  content: \"\\F004\";\n}\n.font-awesome-fa-star_4pv64:before {\n  content: \"\\F005\";\n}\n.font-awesome-fa-star-o_chy54:before {\n  content: \"\\F006\";\n}\n.font-awesome-fa-user_2xwkc:before {\n  content: \"\\F007\";\n}\n.font-awesome-fa-film_4m783:before {\n  content: \"\\F008\";\n}\n.font-awesome-fa-th-large_eqgps:before {\n  content: \"\\F009\";\n}\n.font-awesome-fa-th_2cja2:before {\n  content: \"\\F00A\";\n}\n.font-awesome-fa-th-list_3v1b4:before {\n  content: \"\\F00B\";\n}\n.font-awesome-fa-check_4gd6f:before {\n  content: \"\\F00C\";\n}\n.font-awesome-fa-remove_jww5c:before,\n.font-awesome-fa-close_4s4jh:before,\n.font-awesome-fa-times_23qe4:before {\n  content: \"\\F00D\";\n}\n.font-awesome-fa-search-plus_2bq9s:before {\n  content: \"\\F00E\";\n}\n.font-awesome-fa-search-minus_3g6np:before {\n  content: \"\\F010\";\n}\n.font-awesome-fa-power-off_47j3v:before {\n  content: \"\\F011\";\n}\n.font-awesome-fa-signal_26y41:before {\n  content: \"\\F012\";\n}\n.font-awesome-fa-gear_33yyb:before,\n.font-awesome-fa-cog_wa2qf:before {\n  content: \"\\F013\";\n}\n.font-awesome-fa-trash-o_3kzqg:before {\n  content: \"\\F014\";\n}\n.font-awesome-fa-home_28ett:before {\n  content: \"\\F015\";\n}\n.font-awesome-fa-file-o_414wr:before {\n  content: \"\\F016\";\n}\n.font-awesome-fa-clock-o_2veg8:before {\n  content: \"\\F017\";\n}\n.font-awesome-fa-road_2ykx9:before {\n  content: \"\\F018\";\n}\n.font-awesome-fa-download_2mucq:before {\n  content: \"\\F019\";\n}\n.font-awesome-fa-arrow-circle-o-down_3f1zz:before {\n  content: \"\\F01A\";\n}\n.font-awesome-fa-arrow-circle-o-up_3dvr2:before {\n  content: \"\\F01B\";\n}\n.font-awesome-fa-inbox_3ybwr:before {\n  content: \"\\F01C\";\n}\n.font-awesome-fa-play-circle-o_4sr8h:before {\n  content: \"\\F01D\";\n}\n.font-awesome-fa-rotate-right_393sh:before,\n.font-awesome-fa-repeat_q99jt:before {\n  content: \"\\F01E\";\n}\n.font-awesome-fa-refresh_34ap9:before {\n  content: \"\\F021\";\n}\n.font-awesome-fa-list-alt_2jmv8:before {\n  content: \"\\F022\";\n}\n.font-awesome-fa-lock_4ekru:before {\n  content: \"\\F023\";\n}\n.font-awesome-fa-flag_36n2d:before {\n  content: \"\\F024\";\n}\n.font-awesome-fa-headphones_36h7x:before {\n  content: \"\\F025\";\n}\n.font-awesome-fa-volume-off_24swq:before {\n  content: \"\\F026\";\n}\n.font-awesome-fa-volume-down_pwdhd:before {\n  content: \"\\F027\";\n}\n.font-awesome-fa-volume-up_ntqbj:before {\n  content: \"\\F028\";\n}\n.font-awesome-fa-qrcode_8tut1:before {\n  content: \"\\F029\";\n}\n.font-awesome-fa-barcode_2r8qd:before {\n  content: \"\\F02A\";\n}\n.font-awesome-fa-tag_3gne8:before {\n  content: \"\\F02B\";\n}\n.font-awesome-fa-tags_259aw:before {\n  content: \"\\F02C\";\n}\n.font-awesome-fa-book_2u36a:before {\n  content: \"\\F02D\";\n}\n.font-awesome-fa-bookmark_29f62:before {\n  content: \"\\F02E\";\n}\n.font-awesome-fa-print_2s573:before {\n  content: \"\\F02F\";\n}\n.font-awesome-fa-camera_3u3bj:before {\n  content: \"\\F030\";\n}\n.font-awesome-fa-font_4c828:before {\n  content: \"\\F031\";\n}\n.font-awesome-fa-bold_4k5vs:before {\n  content: \"\\F032\";\n}\n.font-awesome-fa-italic_35vrs:before {\n  content: \"\\F033\";\n}\n.font-awesome-fa-text-height_27m25:before {\n  content: \"\\F034\";\n}\n.font-awesome-fa-text-width_2y3x2:before {\n  content: \"\\F035\";\n}\n.font-awesome-fa-align-left_4dqdd:before {\n  content: \"\\F036\";\n}\n.font-awesome-fa-align-center_35xqu:before {\n  content: \"\\F037\";\n}\n.font-awesome-fa-align-right_4qa81:before {\n  content: \"\\F038\";\n}\n.font-awesome-fa-align-justify_3r8f5:before {\n  content: \"\\F039\";\n}\n.font-awesome-fa-list_2z1ed:before {\n  content: \"\\F03A\";\n}\n.font-awesome-fa-dedent_4ks1z:before,\n.font-awesome-fa-outdent_21yce:before {\n  content: \"\\F03B\";\n}\n.font-awesome-fa-indent_rc21m:before {\n  content: \"\\F03C\";\n}\n.font-awesome-fa-video-camera_2c5dn:before {\n  content: \"\\F03D\";\n}\n.font-awesome-fa-photo_2nyqr:before,\n.font-awesome-fa-image_3qpmp:before,\n.font-awesome-fa-picture-o_35zt3:before {\n  content: \"\\F03E\";\n}\n.font-awesome-fa-pencil_3g9ew:before {\n  content: \"\\F040\";\n}\n.font-awesome-fa-map-marker_3brgm:before {\n  content: \"\\F041\";\n}\n.font-awesome-fa-adjust_g517c:before {\n  content: \"\\F042\";\n}\n.font-awesome-fa-tint_2n958:before {\n  content: \"\\F043\";\n}\n.font-awesome-fa-edit_4ypwb:before,\n.font-awesome-fa-pencil-square-o_3e3zu:before {\n  content: \"\\F044\";\n}\n.font-awesome-fa-share-square-o_2ktkj:before {\n  content: \"\\F045\";\n}\n.font-awesome-fa-check-square-o_2krf3:before {\n  content: \"\\F046\";\n}\n.font-awesome-fa-arrows_45ew1:before {\n  content: \"\\F047\";\n}\n.font-awesome-fa-step-backward_2h9d2:before {\n  content: \"\\F048\";\n}\n.font-awesome-fa-fast-backward_2syxz:before {\n  content: \"\\F049\";\n}\n.font-awesome-fa-backward_2np3h:before {\n  content: \"\\F04A\";\n}\n.font-awesome-fa-play_t5x61:before {\n  content: \"\\F04B\";\n}\n.font-awesome-fa-pause_n2w49:before {\n  content: \"\\F04C\";\n}\n.font-awesome-fa-stop_29v29:before {\n  content: \"\\F04D\";\n}\n.font-awesome-fa-forward_2ntwp:before {\n  content: \"\\F04E\";\n}\n.font-awesome-fa-fast-forward_tx3u1:before {\n  content: \"\\F050\";\n}\n.font-awesome-fa-step-forward_v39xm:before {\n  content: \"\\F051\";\n}\n.font-awesome-fa-eject_3swgu:before {\n  content: \"\\F052\";\n}\n.font-awesome-fa-chevron-left_4f5j3:before {\n  content: \"\\F053\";\n}\n.font-awesome-fa-chevron-right_2k5j6:before {\n  content: \"\\F054\";\n}\n.font-awesome-fa-plus-circle_v5fb8:before {\n  content: \"\\F055\";\n}\n.font-awesome-fa-minus-circle_42zed:before {\n  content: \"\\F056\";\n}\n.font-awesome-fa-times-circle_z612t:before {\n  content: \"\\F057\";\n}\n.font-awesome-fa-check-circle_7x6yj:before {\n  content: \"\\F058\";\n}\n.font-awesome-fa-question-circle_2c6r4:before {\n  content: \"\\F059\";\n}\n.font-awesome-fa-info-circle_raq7x:before {\n  content: \"\\F05A\";\n}\n.font-awesome-fa-crosshairs_2ge9q:before {\n  content: \"\\F05B\";\n}\n.font-awesome-fa-times-circle-o_3unw8:before {\n  content: \"\\F05C\";\n}\n.font-awesome-fa-check-circle-o_3zqyh:before {\n  content: \"\\F05D\";\n}\n.font-awesome-fa-ban_4cv2d:before {\n  content: \"\\F05E\";\n}\n.font-awesome-fa-arrow-left_48gmt:before {\n  content: \"\\F060\";\n}\n.font-awesome-fa-arrow-right_4mjf6:before {\n  content: \"\\F061\";\n}\n.font-awesome-fa-arrow-up_ur2gm:before {\n  content: \"\\F062\";\n}\n.font-awesome-fa-arrow-down_rs3bg:before {\n  content: \"\\F063\";\n}\n.font-awesome-fa-mail-forward_3q1z6:before,\n.font-awesome-fa-share_3by4b:before {\n  content: \"\\F064\";\n}\n.font-awesome-fa-expand_wak4k:before {\n  content: \"\\F065\";\n}\n.font-awesome-fa-compress_336kq:before {\n  content: \"\\F066\";\n}\n.font-awesome-fa-plus_4u4t9:before {\n  content: \"\\F067\";\n}\n.font-awesome-fa-minus_et4rr:before {\n  content: \"\\F068\";\n}\n.font-awesome-fa-asterisk_qccwj:before {\n  content: \"\\F069\";\n}\n.font-awesome-fa-exclamation-circle_mavzf:before {\n  content: \"\\F06A\";\n}\n.font-awesome-fa-gift_2tn1u:before {\n  content: \"\\F06B\";\n}\n.font-awesome-fa-leaf_2tkkz:before {\n  content: \"\\F06C\";\n}\n.font-awesome-fa-fire_73jhy:before {\n  content: \"\\F06D\";\n}\n.font-awesome-fa-eye_236js:before {\n  content: \"\\F06E\";\n}\n.font-awesome-fa-eye-slash_2ssyx:before {\n  content: \"\\F070\";\n}\n.font-awesome-fa-warning_37kn4:before,\n.font-awesome-fa-exclamation-triangle_4p3as:before {\n  content: \"\\F071\";\n}\n.font-awesome-fa-plane_3dx6x:before {\n  content: \"\\F072\";\n}\n.font-awesome-fa-calendar_raf12:before {\n  content: \"\\F073\";\n}\n.font-awesome-fa-random_3yyjh:before {\n  content: \"\\F074\";\n}\n.font-awesome-fa-comment_31stw:before {\n  content: \"\\F075\";\n}\n.font-awesome-fa-magnet_4k15e:before {\n  content: \"\\F076\";\n}\n.font-awesome-fa-chevron-up_2dken:before {\n  content: \"\\F077\";\n}\n.font-awesome-fa-chevron-down_2uy71:before {\n  content: \"\\F078\";\n}\n.font-awesome-fa-retweet_2bx1v:before {\n  content: \"\\F079\";\n}\n.font-awesome-fa-shopping-cart_3t4en:before {\n  content: \"\\F07A\";\n}\n.font-awesome-fa-folder_31erh:before {\n  content: \"\\F07B\";\n}\n.font-awesome-fa-folder-open_t8ya7:before {\n  content: \"\\F07C\";\n}\n.font-awesome-fa-arrows-v_4gvr6:before {\n  content: \"\\F07D\";\n}\n.font-awesome-fa-arrows-h_tf7qg:before {\n  content: \"\\F07E\";\n}\n.font-awesome-fa-bar-chart-o_36z1y:before,\n.font-awesome-fa-bar-chart_3hj19:before {\n  content: \"\\F080\";\n}\n.font-awesome-fa-twitter-square_3gq7u:before {\n  content: \"\\F081\";\n}\n.font-awesome-fa-facebook-square_25ywy:before {\n  content: \"\\F082\";\n}\n.font-awesome-fa-camera-retro_q2axg:before {\n  content: \"\\F083\";\n}\n.font-awesome-fa-key_2yz8h:before {\n  content: \"\\F084\";\n}\n.font-awesome-fa-gears_4e2dt:before,\n.font-awesome-fa-cogs_4cxc3:before {\n  content: \"\\F085\";\n}\n.font-awesome-fa-comments_4t21x:before {\n  content: \"\\F086\";\n}\n.font-awesome-fa-thumbs-o-up_4r3yv:before {\n  content: \"\\F087\";\n}\n.font-awesome-fa-thumbs-o-down_87w4r:before {\n  content: \"\\F088\";\n}\n.font-awesome-fa-star-half_4p9th:before {\n  content: \"\\F089\";\n}\n.font-awesome-fa-heart-o_36nkc:before {\n  content: \"\\F08A\";\n}\n.font-awesome-fa-sign-out_23hy7:before {\n  content: \"\\F08B\";\n}\n.font-awesome-fa-linkedin-square_25u8h:before {\n  content: \"\\F08C\";\n}\n.font-awesome-fa-thumb-tack_hx4pc:before {\n  content: \"\\F08D\";\n}\n.font-awesome-fa-external-link_4wsan:before {\n  content: \"\\F08E\";\n}\n.font-awesome-fa-sign-in_36s82:before {\n  content: \"\\F090\";\n}\n.font-awesome-fa-trophy_44smk:before {\n  content: \"\\F091\";\n}\n.font-awesome-fa-github-square_4n4cq:before {\n  content: \"\\F092\";\n}\n.font-awesome-fa-upload_447cp:before {\n  content: \"\\F093\";\n}\n.font-awesome-fa-lemon-o_4c54e:before {\n  content: \"\\F094\";\n}\n.font-awesome-fa-phone_4d79t:before {\n  content: \"\\F095\";\n}\n.font-awesome-fa-square-o_2bwmf:before {\n  content: \"\\F096\";\n}\n.font-awesome-fa-bookmark-o_3thnz:before {\n  content: \"\\F097\";\n}\n.font-awesome-fa-phone-square_2w6s5:before {\n  content: \"\\F098\";\n}\n.font-awesome-fa-twitter_2yrmk:before {\n  content: \"\\F099\";\n}\n.font-awesome-fa-facebook-f_4v7uq:before,\n.font-awesome-fa-facebook_2yhkm:before {\n  content: \"\\F09A\";\n}\n.font-awesome-fa-github_69r4s:before {\n  content: \"\\F09B\";\n}\n.font-awesome-fa-unlock_f83k2:before {\n  content: \"\\F09C\";\n}\n.font-awesome-fa-credit-card_449gj:before {\n  content: \"\\F09D\";\n}\n.font-awesome-fa-feed_s1ygu:before,\n.font-awesome-fa-rss_2xt6h:before {\n  content: \"\\F09E\";\n}\n.font-awesome-fa-hdd-o_22gas:before {\n  content: \"\\F0A0\";\n}\n.font-awesome-fa-bullhorn_22e4d:before {\n  content: \"\\F0A1\";\n}\n.font-awesome-fa-bell_42g1x:before {\n  content: \"\\F0F3\";\n}\n.font-awesome-fa-certificate_3a1xn:before {\n  content: \"\\F0A3\";\n}\n.font-awesome-fa-hand-o-right_tvqe4:before {\n  content: \"\\F0A4\";\n}\n.font-awesome-fa-hand-o-left_5786p:before {\n  content: \"\\F0A5\";\n}\n.font-awesome-fa-hand-o-up_4bjwk:before {\n  content: \"\\F0A6\";\n}\n.font-awesome-fa-hand-o-down_f16eq:before {\n  content: \"\\F0A7\";\n}\n.font-awesome-fa-arrow-circle-left_2qtps:before {\n  content: \"\\F0A8\";\n}\n.font-awesome-fa-arrow-circle-right_3y551:before {\n  content: \"\\F0A9\";\n}\n.font-awesome-fa-arrow-circle-up_3y9j3:before {\n  content: \"\\F0AA\";\n}\n.font-awesome-fa-arrow-circle-down_4x2wc:before {\n  content: \"\\F0AB\";\n}\n.font-awesome-fa-globe_cq718:before {\n  content: \"\\F0AC\";\n}\n.font-awesome-fa-wrench_3kja1:before {\n  content: \"\\F0AD\";\n}\n.font-awesome-fa-tasks_9ru8u:before {\n  content: \"\\F0AE\";\n}\n.font-awesome-fa-filter_2brfv:before {\n  content: \"\\F0B0\";\n}\n.font-awesome-fa-briefcase_3w38j:before {\n  content: \"\\F0B1\";\n}\n.font-awesome-fa-arrows-alt_2jmka:before {\n  content: \"\\F0B2\";\n}\n.font-awesome-fa-group_4gxpz:before,\n.font-awesome-fa-users_3mxwv:before {\n  content: \"\\F0C0\";\n}\n.font-awesome-fa-chain_4gkrt:before,\n.font-awesome-fa-link_7fhh1:before {\n  content: \"\\F0C1\";\n}\n.font-awesome-fa-cloud_27q1n:before {\n  content: \"\\F0C2\";\n}\n.font-awesome-fa-flask_45bp5:before {\n  content: \"\\F0C3\";\n}\n.font-awesome-fa-cut_25zds:before,\n.font-awesome-fa-scissors_35mfp:before {\n  content: \"\\F0C4\";\n}\n.font-awesome-fa-copy_2yg9v:before,\n.font-awesome-fa-files-o_22zey:before {\n  content: \"\\F0C5\";\n}\n.font-awesome-fa-paperclip_2q7sr:before {\n  content: \"\\F0C6\";\n}\n.font-awesome-fa-save_2xs7f:before,\n.font-awesome-fa-floppy-o_3yk97:before {\n  content: \"\\F0C7\";\n}\n.font-awesome-fa-square_36mh3:before {\n  content: \"\\F0C8\";\n}\n.font-awesome-fa-navicon_4zuhn:before,\n.font-awesome-fa-reorder_pf8w2:before,\n.font-awesome-fa-bars_x22xx:before {\n  content: \"\\F0C9\";\n}\n.font-awesome-fa-list-ul_3wjuq:before {\n  content: \"\\F0CA\";\n}\n.font-awesome-fa-list-ol_3hbz4:before {\n  content: \"\\F0CB\";\n}\n.font-awesome-fa-strikethrough_2x3sm:before {\n  content: \"\\F0CC\";\n}\n.font-awesome-fa-underline_uyyw5:before {\n  content: \"\\F0CD\";\n}\n.font-awesome-fa-table_aw6xr:before {\n  content: \"\\F0CE\";\n}\n.font-awesome-fa-magic_44uhk:before {\n  content: \"\\F0D0\";\n}\n.font-awesome-fa-truck_7kx9m:before {\n  content: \"\\F0D1\";\n}\n.font-awesome-fa-pinterest_47g65:before {\n  content: \"\\F0D2\";\n}\n.font-awesome-fa-pinterest-square_3m3jn:before {\n  content: \"\\F0D3\";\n}\n.font-awesome-fa-google-plus-square_4ag18:before {\n  content: \"\\F0D4\";\n}\n.font-awesome-fa-google-plus_4qvun:before {\n  content: \"\\F0D5\";\n}\n.font-awesome-fa-money_w1buu:before {\n  content: \"\\F0D6\";\n}\n.font-awesome-fa-caret-down_29wrf:before {\n  content: \"\\F0D7\";\n}\n.font-awesome-fa-caret-up_29ag3:before {\n  content: \"\\F0D8\";\n}\n.font-awesome-fa-caret-left_4vdaf:before {\n  content: \"\\F0D9\";\n}\n.font-awesome-fa-caret-right_4ve4r:before {\n  content: \"\\F0DA\";\n}\n.font-awesome-fa-columns_4t6jc:before {\n  content: \"\\F0DB\";\n}\n.font-awesome-fa-unsorted_wc53a:before,\n.font-awesome-fa-sort_2q7tc:before {\n  content: \"\\F0DC\";\n}\n.font-awesome-fa-sort-down_kbtzj:before,\n.font-awesome-fa-sort-desc_thcem:before {\n  content: \"\\F0DD\";\n}\n.font-awesome-fa-sort-up_2r65v:before,\n.font-awesome-fa-sort-asc_3wzqf:before {\n  content: \"\\F0DE\";\n}\n.font-awesome-fa-envelope_er48e:before {\n  content: \"\\F0E0\";\n}\n.font-awesome-fa-linkedin_jhwtj:before {\n  content: \"\\F0E1\";\n}\n.font-awesome-fa-rotate-left_21j9u:before,\n.font-awesome-fa-undo_24jhh:before {\n  content: \"\\F0E2\";\n}\n.font-awesome-fa-legal_3gmnd:before,\n.font-awesome-fa-gavel_2vs2w:before {\n  content: \"\\F0E3\";\n}\n.font-awesome-fa-dashboard_4mp88:before,\n.font-awesome-fa-tachometer_3c5xs:before {\n  content: \"\\F0E4\";\n}\n.font-awesome-fa-comment-o_4t3zs:before {\n  content: \"\\F0E5\";\n}\n.font-awesome-fa-comments-o_px6a9:before {\n  content: \"\\F0E6\";\n}\n.font-awesome-fa-flash_9cvs3:before,\n.font-awesome-fa-bolt_4r5uf:before {\n  content: \"\\F0E7\";\n}\n.font-awesome-fa-sitemap_7718n:before {\n  content: \"\\F0E8\";\n}\n.font-awesome-fa-umbrella_y76mn:before {\n  content: \"\\F0E9\";\n}\n.font-awesome-fa-paste_41f38:before,\n.font-awesome-fa-clipboard_78akd:before {\n  content: \"\\F0EA\";\n}\n.font-awesome-fa-lightbulb-o_4ky58:before {\n  content: \"\\F0EB\";\n}\n.font-awesome-fa-exchange_2zcw2:before {\n  content: \"\\F0EC\";\n}\n.font-awesome-fa-cloud-download_39mmy:before {\n  content: \"\\F0ED\";\n}\n.font-awesome-fa-cloud-upload_4e69r:before {\n  content: \"\\F0EE\";\n}\n.font-awesome-fa-user-md_4swqb:before {\n  content: \"\\F0F0\";\n}\n.font-awesome-fa-stethoscope_judkz:before {\n  content: \"\\F0F1\";\n}\n.font-awesome-fa-suitcase_2cmaq:before {\n  content: \"\\F0F2\";\n}\n.font-awesome-fa-bell-o_4nnrz:before {\n  content: \"\\F0A2\";\n}\n.font-awesome-fa-coffee_qfm34:before {\n  content: \"\\F0F4\";\n}\n.font-awesome-fa-cutlery_21gt2:before {\n  content: \"\\F0F5\";\n}\n.font-awesome-fa-file-text-o_4qf7t:before {\n  content: \"\\F0F6\";\n}\n.font-awesome-fa-building-o_36rp6:before {\n  content: \"\\F0F7\";\n}\n.font-awesome-fa-hospital-o_49bft:before {\n  content: \"\\F0F8\";\n}\n.font-awesome-fa-ambulance_387ym:before {\n  content: \"\\F0F9\";\n}\n.font-awesome-fa-medkit_27epf:before {\n  content: \"\\F0FA\";\n}\n.font-awesome-fa-fighter-jet_26c59:before {\n  content: \"\\F0FB\";\n}\n.font-awesome-fa-beer_3uhs8:before {\n  content: \"\\F0FC\";\n}\n.font-awesome-fa-h-square_4qnua:before {\n  content: \"\\F0FD\";\n}\n.font-awesome-fa-plus-square_4nv7d:before {\n  content: \"\\F0FE\";\n}\n.font-awesome-fa-angle-double-left_2xsmp:before {\n  content: \"\\F100\";\n}\n.font-awesome-fa-angle-double-right_qesan:before {\n  content: \"\\F101\";\n}\n.font-awesome-fa-angle-double-up_3ndzd:before {\n  content: \"\\F102\";\n}\n.font-awesome-fa-angle-double-down_2v752:before {\n  content: \"\\F103\";\n}\n.font-awesome-fa-angle-left_xjnub:before {\n  content: \"\\F104\";\n}\n.font-awesome-fa-angle-right_4bdut:before {\n  content: \"\\F105\";\n}\n.font-awesome-fa-angle-up_gkpp3:before {\n  content: \"\\F106\";\n}\n.font-awesome-fa-angle-down_4hx4b:before {\n  content: \"\\F107\";\n}\n.font-awesome-fa-desktop_r164m:before {\n  content: \"\\F108\";\n}\n.font-awesome-fa-laptop_f7ep1:before {\n  content: \"\\F109\";\n}\n.font-awesome-fa-tablet_46axh:before {\n  content: \"\\F10A\";\n}\n.font-awesome-fa-mobile-phone_4q548:before,\n.font-awesome-fa-mobile_rh7p1:before {\n  content: \"\\F10B\";\n}\n.font-awesome-fa-circle-o_32k7p:before {\n  content: \"\\F10C\";\n}\n.font-awesome-fa-quote-left_swtcq:before {\n  content: \"\\F10D\";\n}\n.font-awesome-fa-quote-right_2zfpd:before {\n  content: \"\\F10E\";\n}\n.font-awesome-fa-spinner_4t5rh:before {\n  content: \"\\F110\";\n}\n.font-awesome-fa-circle_474bg:before {\n  content: \"\\F111\";\n}\n.font-awesome-fa-mail-reply_27j8v:before,\n.font-awesome-fa-reply_43hx8:before {\n  content: \"\\F112\";\n}\n.font-awesome-fa-github-alt_49duw:before {\n  content: \"\\F113\";\n}\n.font-awesome-fa-folder-o_28w2t:before {\n  content: \"\\F114\";\n}\n.font-awesome-fa-folder-open-o_2g9qr:before {\n  content: \"\\F115\";\n}\n.font-awesome-fa-smile-o_46wr5:before {\n  content: \"\\F118\";\n}\n.font-awesome-fa-frown-o_32h72:before {\n  content: \"\\F119\";\n}\n.font-awesome-fa-meh-o_4auak:before {\n  content: \"\\F11A\";\n}\n.font-awesome-fa-gamepad_2m3vr:before {\n  content: \"\\F11B\";\n}\n.font-awesome-fa-keyboard-o_3uhae:before {\n  content: \"\\F11C\";\n}\n.font-awesome-fa-flag-o_25ncu:before {\n  content: \"\\F11D\";\n}\n.font-awesome-fa-flag-checkered_2tmuv:before {\n  content: \"\\F11E\";\n}\n.font-awesome-fa-terminal_2r8hu:before {\n  content: \"\\F120\";\n}\n.font-awesome-fa-code_44rxt:before {\n  content: \"\\F121\";\n}\n.font-awesome-fa-mail-reply-all_3bgj2:before,\n.font-awesome-fa-reply-all_bfrb1:before {\n  content: \"\\F122\";\n}\n.font-awesome-fa-star-half-empty_4wzyw:before,\n.font-awesome-fa-star-half-full_p1m6e:before,\n.font-awesome-fa-star-half-o_rpczx:before {\n  content: \"\\F123\";\n}\n.font-awesome-fa-location-arrow_4htbm:before {\n  content: \"\\F124\";\n}\n.font-awesome-fa-crop_zzzug:before {\n  content: \"\\F125\";\n}\n.font-awesome-fa-code-fork_p4hda:before {\n  content: \"\\F126\";\n}\n.font-awesome-fa-unlink_47g53:before,\n.font-awesome-fa-chain-broken_4pdaj:before {\n  content: \"\\F127\";\n}\n.font-awesome-fa-question_4nhpt:before {\n  content: \"\\F128\";\n}\n.font-awesome-fa-info_3tnpx:before {\n  content: \"\\F129\";\n}\n.font-awesome-fa-exclamation_3pyqb:before {\n  content: \"\\F12A\";\n}\n.font-awesome-fa-superscript_45c9q:before {\n  content: \"\\F12B\";\n}\n.font-awesome-fa-subscript_4hmqx:before {\n  content: \"\\F12C\";\n}\n.font-awesome-fa-eraser_4cqsr:before {\n  content: \"\\F12D\";\n}\n.font-awesome-fa-puzzle-piece_46stc:before {\n  content: \"\\F12E\";\n}\n.font-awesome-fa-microphone_3gzkx:before {\n  content: \"\\F130\";\n}\n.font-awesome-fa-microphone-slash_2zske:before {\n  content: \"\\F131\";\n}\n.font-awesome-fa-shield_rnz5n:before {\n  content: \"\\F132\";\n}\n.font-awesome-fa-calendar-o_2sak9:before {\n  content: \"\\F133\";\n}\n.font-awesome-fa-fire-extinguisher_26nw2:before {\n  content: \"\\F134\";\n}\n.font-awesome-fa-rocket_6yq52:before {\n  content: \"\\F135\";\n}\n.font-awesome-fa-maxcdn_34ekh:before {\n  content: \"\\F136\";\n}\n.font-awesome-fa-chevron-circle-left_4w82y:before {\n  content: \"\\F137\";\n}\n.font-awesome-fa-chevron-circle-right_3875r:before {\n  content: \"\\F138\";\n}\n.font-awesome-fa-chevron-circle-up_2v74p:before {\n  content: \"\\F139\";\n}\n.font-awesome-fa-chevron-circle-down_3qtm9:before {\n  content: \"\\F13A\";\n}\n.font-awesome-fa-html5_22fhv:before {\n  content: \"\\F13B\";\n}\n.font-awesome-fa-css3_4a4qz:before {\n  content: \"\\F13C\";\n}\n.font-awesome-fa-anchor_4et8y:before {\n  content: \"\\F13D\";\n}\n.font-awesome-fa-unlock-alt_4y7nt:before {\n  content: \"\\F13E\";\n}\n.font-awesome-fa-bullseye_2katg:before {\n  content: \"\\F140\";\n}\n.font-awesome-fa-ellipsis-h_3rc7s:before {\n  content: \"\\F141\";\n}\n.font-awesome-fa-ellipsis-v_4f723:before {\n  content: \"\\F142\";\n}\n.font-awesome-fa-rss-square_3ez61:before {\n  content: \"\\F143\";\n}\n.font-awesome-fa-play-circle_4pk9q:before {\n  content: \"\\F144\";\n}\n.font-awesome-fa-ticket_38p8s:before {\n  content: \"\\F145\";\n}\n.font-awesome-fa-minus-square_2e5ae:before {\n  content: \"\\F146\";\n}\n.font-awesome-fa-minus-square-o_33v3x:before {\n  content: \"\\F147\";\n}\n.font-awesome-fa-level-up_xy6rd:before {\n  content: \"\\F148\";\n}\n.font-awesome-fa-level-down_4gwkn:before {\n  content: \"\\F149\";\n}\n.font-awesome-fa-check-square_4a4bn:before {\n  content: \"\\F14A\";\n}\n.font-awesome-fa-pencil-square_2b2zh:before {\n  content: \"\\F14B\";\n}\n.font-awesome-fa-external-link-square_4w6tc:before {\n  content: \"\\F14C\";\n}\n.font-awesome-fa-share-square_35wpn:before {\n  content: \"\\F14D\";\n}\n.font-awesome-fa-compass_2hmyy:before {\n  content: \"\\F14E\";\n}\n.font-awesome-fa-toggle-down_474xf:before,\n.font-awesome-fa-caret-square-o-down_2p24p:before {\n  content: \"\\F150\";\n}\n.font-awesome-fa-toggle-up_3sykb:before,\n.font-awesome-fa-caret-square-o-up_49c2q:before {\n  content: \"\\F151\";\n}\n.font-awesome-fa-toggle-right_45c5f:before,\n.font-awesome-fa-caret-square-o-right_3fusp:before {\n  content: \"\\F152\";\n}\n.font-awesome-fa-euro_2v8h2:before,\n.font-awesome-fa-eur_22ybn:before {\n  content: \"\\F153\";\n}\n.font-awesome-fa-gbp_4rfu1:before {\n  content: \"\\F154\";\n}\n.font-awesome-fa-dollar_2wmex:before,\n.font-awesome-fa-usd_4nvs4:before {\n  content: \"\\F155\";\n}\n.font-awesome-fa-rupee_2161g:before,\n.font-awesome-fa-inr_23pms:before {\n  content: \"\\F156\";\n}\n.font-awesome-fa-cny_mpt6y:before,\n.font-awesome-fa-rmb_46vbm:before,\n.font-awesome-fa-yen_kun9p:before,\n.font-awesome-fa-jpy_2w1zh:before {\n  content: \"\\F157\";\n}\n.font-awesome-fa-ruble_mgkd7:before,\n.font-awesome-fa-rouble_48mfq:before,\n.font-awesome-fa-rub_3py6w:before {\n  content: \"\\F158\";\n}\n.font-awesome-fa-won_21skz:before,\n.font-awesome-fa-krw_3rsug:before {\n  content: \"\\F159\";\n}\n.font-awesome-fa-bitcoin_2x78c:before,\n.font-awesome-fa-btc_34vnu:before {\n  content: \"\\F15A\";\n}\n.font-awesome-fa-file_2hvak:before {\n  content: \"\\F15B\";\n}\n.font-awesome-fa-file-text_27xvy:before {\n  content: \"\\F15C\";\n}\n.font-awesome-fa-sort-alpha-asc_3dcru:before {\n  content: \"\\F15D\";\n}\n.font-awesome-fa-sort-alpha-desc_3r41w:before {\n  content: \"\\F15E\";\n}\n.font-awesome-fa-sort-amount-asc_49k5d:before {\n  content: \"\\F160\";\n}\n.font-awesome-fa-sort-amount-desc_3tsuv:before {\n  content: \"\\F161\";\n}\n.font-awesome-fa-sort-numeric-asc_3r4w9:before {\n  content: \"\\F162\";\n}\n.font-awesome-fa-sort-numeric-desc_as49b:before {\n  content: \"\\F163\";\n}\n.font-awesome-fa-thumbs-up_2tzkr:before {\n  content: \"\\F164\";\n}\n.font-awesome-fa-thumbs-down_mh1xf:before {\n  content: \"\\F165\";\n}\n.font-awesome-fa-youtube-square_vnsz8:before {\n  content: \"\\F166\";\n}\n.font-awesome-fa-youtube_k2x8r:before {\n  content: \"\\F167\";\n}\n.font-awesome-fa-xing_df4tt:before {\n  content: \"\\F168\";\n}\n.font-awesome-fa-xing-square_pnamd:before {\n  content: \"\\F169\";\n}\n.font-awesome-fa-youtube-play_45xmt:before {\n  content: \"\\F16A\";\n}\n.font-awesome-fa-dropbox_3qmj7:before {\n  content: \"\\F16B\";\n}\n.font-awesome-fa-stack-overflow_4e4qy:before {\n  content: \"\\F16C\";\n}\n.font-awesome-fa-instagram_494gw:before {\n  content: \"\\F16D\";\n}\n.font-awesome-fa-flickr_deqj4:before {\n  content: \"\\F16E\";\n}\n.font-awesome-fa-adn_v5nmz:before {\n  content: \"\\F170\";\n}\n.font-awesome-fa-bitbucket_r8hwb:before {\n  content: \"\\F171\";\n}\n.font-awesome-fa-bitbucket-square_3xm43:before {\n  content: \"\\F172\";\n}\n.font-awesome-fa-tumblr_32ha5:before {\n  content: \"\\F173\";\n}\n.font-awesome-fa-tumblr-square_pdna6:before {\n  content: \"\\F174\";\n}\n.font-awesome-fa-long-arrow-down_4r4z9:before {\n  content: \"\\F175\";\n}\n.font-awesome-fa-long-arrow-up_p2zsg:before {\n  content: \"\\F176\";\n}\n.font-awesome-fa-long-arrow-left_3a13c:before {\n  content: \"\\F177\";\n}\n.font-awesome-fa-long-arrow-right_n2csd:before {\n  content: \"\\F178\";\n}\n.font-awesome-fa-apple_23cfc:before {\n  content: \"\\F179\";\n}\n.font-awesome-fa-windows_41qkc:before {\n  content: \"\\F17A\";\n}\n.font-awesome-fa-android_eqd3c:before {\n  content: \"\\F17B\";\n}\n.font-awesome-fa-linux_44v3q:before {\n  content: \"\\F17C\";\n}\n.font-awesome-fa-dribbble_47y5k:before {\n  content: \"\\F17D\";\n}\n.font-awesome-fa-skype_qm14u:before {\n  content: \"\\F17E\";\n}\n.font-awesome-fa-foursquare_s3f6a:before {\n  content: \"\\F180\";\n}\n.font-awesome-fa-trello_3u7xe:before {\n  content: \"\\F181\";\n}\n.font-awesome-fa-female_3tvmu:before {\n  content: \"\\F182\";\n}\n.font-awesome-fa-male_4xm1v:before {\n  content: \"\\F183\";\n}\n.font-awesome-fa-gittip_2nj8a:before,\n.font-awesome-fa-gratipay_426vx:before {\n  content: \"\\F184\";\n}\n.font-awesome-fa-sun-o_3gdqn:before {\n  content: \"\\F185\";\n}\n.font-awesome-fa-moon-o_3hgcr:before {\n  content: \"\\F186\";\n}\n.font-awesome-fa-archive_2s6kh:before {\n  content: \"\\F187\";\n}\n.font-awesome-fa-bug_4nfg1:before {\n  content: \"\\F188\";\n}\n.font-awesome-fa-vk_4emrb:before {\n  content: \"\\F189\";\n}\n.font-awesome-fa-weibo_hffdj:before {\n  content: \"\\F18A\";\n}\n.font-awesome-fa-renren_3t69a:before {\n  content: \"\\F18B\";\n}\n.font-awesome-fa-pagelines_4dv2u:before {\n  content: \"\\F18C\";\n}\n.font-awesome-fa-stack-exchange_2qzu3:before {\n  content: \"\\F18D\";\n}\n.font-awesome-fa-arrow-circle-o-right_mm9wb:before {\n  content: \"\\F18E\";\n}\n.font-awesome-fa-arrow-circle-o-left_33d94:before {\n  content: \"\\F190\";\n}\n.font-awesome-fa-toggle-left_2ewjj:before,\n.font-awesome-fa-caret-square-o-left_2zj29:before {\n  content: \"\\F191\";\n}\n.font-awesome-fa-dot-circle-o_4erqk:before {\n  content: \"\\F192\";\n}\n.font-awesome-fa-wheelchair_2kywz:before {\n  content: \"\\F193\";\n}\n.font-awesome-fa-vimeo-square_3mbrk:before {\n  content: \"\\F194\";\n}\n.font-awesome-fa-turkish-lira_2uqer:before,\n.font-awesome-fa-try_2kmx4:before {\n  content: \"\\F195\";\n}\n.font-awesome-fa-plus-square-o_w7515:before {\n  content: \"\\F196\";\n}\n.font-awesome-fa-space-shuttle_6tqcb:before {\n  content: \"\\F197\";\n}\n.font-awesome-fa-slack_3af9m:before {\n  content: \"\\F198\";\n}\n.font-awesome-fa-envelope-square_33zcz:before {\n  content: \"\\F199\";\n}\n.font-awesome-fa-wordpress_qrhjk:before {\n  content: \"\\F19A\";\n}\n.font-awesome-fa-openid_w919x:before {\n  content: \"\\F19B\";\n}\n.font-awesome-fa-institution_4du1u:before,\n.font-awesome-fa-bank_2bn5f:before,\n.font-awesome-fa-university_zjzzx:before {\n  content: \"\\F19C\";\n}\n.font-awesome-fa-mortar-board_sx7fa:before,\n.font-awesome-fa-graduation-cap_2x9gx:before {\n  content: \"\\F19D\";\n}\n.font-awesome-fa-yahoo_4a38y:before {\n  content: \"\\F19E\";\n}\n.font-awesome-fa-google_4j6rh:before {\n  content: \"\\F1A0\";\n}\n.font-awesome-fa-reddit_ttaqm:before {\n  content: \"\\F1A1\";\n}\n.font-awesome-fa-reddit-square_e68ag:before {\n  content: \"\\F1A2\";\n}\n.font-awesome-fa-stumbleupon-circle_22nux:before {\n  content: \"\\F1A3\";\n}\n.font-awesome-fa-stumbleupon_4f2py:before {\n  content: \"\\F1A4\";\n}\n.font-awesome-fa-delicious_2g9z8:before {\n  content: \"\\F1A5\";\n}\n.font-awesome-fa-digg_318jp:before {\n  content: \"\\F1A6\";\n}\n.font-awesome-fa-pied-piper-pp_bd4k7:before {\n  content: \"\\F1A7\";\n}\n.font-awesome-fa-pied-piper-alt_3wvk1:before {\n  content: \"\\F1A8\";\n}\n.font-awesome-fa-drupal_34wky:before {\n  content: \"\\F1A9\";\n}\n.font-awesome-fa-joomla_u2kmu:before {\n  content: \"\\F1AA\";\n}\n.font-awesome-fa-language_ct8zj:before {\n  content: \"\\F1AB\";\n}\n.font-awesome-fa-fax_2rmvv:before {\n  content: \"\\F1AC\";\n}\n.font-awesome-fa-building_41y7v:before {\n  content: \"\\F1AD\";\n}\n.font-awesome-fa-child_2fxxn:before {\n  content: \"\\F1AE\";\n}\n.font-awesome-fa-paw_2q2pd:before {\n  content: \"\\F1B0\";\n}\n.font-awesome-fa-spoon_6jpqt:before {\n  content: \"\\F1B1\";\n}\n.font-awesome-fa-cube_zhw4z:before {\n  content: \"\\F1B2\";\n}\n.font-awesome-fa-cubes_2ztsn:before {\n  content: \"\\F1B3\";\n}\n.font-awesome-fa-behance_2f597:before {\n  content: \"\\F1B4\";\n}\n.font-awesome-fa-behance-square_4kh21:before {\n  content: \"\\F1B5\";\n}\n.font-awesome-fa-steam_3vp2q:before {\n  content: \"\\F1B6\";\n}\n.font-awesome-fa-steam-square_3rv42:before {\n  content: \"\\F1B7\";\n}\n.font-awesome-fa-recycle_3jhdn:before {\n  content: \"\\F1B8\";\n}\n.font-awesome-fa-automobile_3uz5x:before,\n.font-awesome-fa-car_4j8hq:before {\n  content: \"\\F1B9\";\n}\n.font-awesome-fa-cab_4by8y:before,\n.font-awesome-fa-taxi_2gs3n:before {\n  content: \"\\F1BA\";\n}\n.font-awesome-fa-tree_2uvft:before {\n  content: \"\\F1BB\";\n}\n.font-awesome-fa-spotify_281ek:before {\n  content: \"\\F1BC\";\n}\n.font-awesome-fa-deviantart_3ejsp:before {\n  content: \"\\F1BD\";\n}\n.font-awesome-fa-soundcloud_289pm:before {\n  content: \"\\F1BE\";\n}\n.font-awesome-fa-database_41m81:before {\n  content: \"\\F1C0\";\n}\n.font-awesome-fa-file-pdf-o_31hj1:before {\n  content: \"\\F1C1\";\n}\n.font-awesome-fa-file-word-o_3dxtr:before {\n  content: \"\\F1C2\";\n}\n.font-awesome-fa-file-excel-o_28ptw:before {\n  content: \"\\F1C3\";\n}\n.font-awesome-fa-file-powerpoint-o_swugq:before {\n  content: \"\\F1C4\";\n}\n.font-awesome-fa-file-photo-o_35n2w:before,\n.font-awesome-fa-file-picture-o_4jnw7:before,\n.font-awesome-fa-file-image-o_2s4k1:before {\n  content: \"\\F1C5\";\n}\n.font-awesome-fa-file-zip-o_3fj5w:before,\n.font-awesome-fa-file-archive-o_2jbs3:before {\n  content: \"\\F1C6\";\n}\n.font-awesome-fa-file-sound-o_wpxgw:before,\n.font-awesome-fa-file-audio-o_4ga2e:before {\n  content: \"\\F1C7\";\n}\n.font-awesome-fa-file-movie-o_4h9bn:before,\n.font-awesome-fa-file-video-o_348mx:before {\n  content: \"\\F1C8\";\n}\n.font-awesome-fa-file-code-o_47r14:before {\n  content: \"\\F1C9\";\n}\n.font-awesome-fa-vine_31j6c:before {\n  content: \"\\F1CA\";\n}\n.font-awesome-fa-codepen_2kvff:before {\n  content: \"\\F1CB\";\n}\n.font-awesome-fa-jsfiddle_2r1q8:before {\n  content: \"\\F1CC\";\n}\n.font-awesome-fa-life-bouy_4vxu3:before,\n.font-awesome-fa-life-buoy_2jk7n:before,\n.font-awesome-fa-life-saver_4bbkw:before,\n.font-awesome-fa-support_3ezhk:before,\n.font-awesome-fa-life-ring_4sg2e:before {\n  content: \"\\F1CD\";\n}\n.font-awesome-fa-circle-o-notch_3g7ub:before {\n  content: \"\\F1CE\";\n}\n.font-awesome-fa-ra_4gyjy:before,\n.font-awesome-fa-resistance_4rr8t:before,\n.font-awesome-fa-rebel_4bnzf:before {\n  content: \"\\F1D0\";\n}\n.font-awesome-fa-ge_v7j6f:before,\n.font-awesome-fa-empire_9gcr3:before {\n  content: \"\\F1D1\";\n}\n.font-awesome-fa-git-square_4j2zg:before {\n  content: \"\\F1D2\";\n}\n.font-awesome-fa-git_nyxmt:before {\n  content: \"\\F1D3\";\n}\n.font-awesome-fa-y-combinator-square_3fkhb:before,\n.font-awesome-fa-yc-square_423e8:before,\n.font-awesome-fa-hacker-news_3bvkf:before {\n  content: \"\\F1D4\";\n}\n.font-awesome-fa-tencent-weibo_2aayn:before {\n  content: \"\\F1D5\";\n}\n.font-awesome-fa-qq_28ush:before {\n  content: \"\\F1D6\";\n}\n.font-awesome-fa-wechat_3uxxv:before,\n.font-awesome-fa-weixin_4xybv:before {\n  content: \"\\F1D7\";\n}\n.font-awesome-fa-send_37fju:before,\n.font-awesome-fa-paper-plane_4ev2k:before {\n  content: \"\\F1D8\";\n}\n.font-awesome-fa-send-o_43d1j:before,\n.font-awesome-fa-paper-plane-o_26nqv:before {\n  content: \"\\F1D9\";\n}\n.font-awesome-fa-history_3kffs:before {\n  content: \"\\F1DA\";\n}\n.font-awesome-fa-circle-thin_4n3yw:before {\n  content: \"\\F1DB\";\n}\n.font-awesome-fa-header_tc2an:before {\n  content: \"\\F1DC\";\n}\n.font-awesome-fa-paragraph_cpbsw:before {\n  content: \"\\F1DD\";\n}\n.font-awesome-fa-sliders_4t17f:before {\n  content: \"\\F1DE\";\n}\n.font-awesome-fa-share-alt_2e7g5:before {\n  content: \"\\F1E0\";\n}\n.font-awesome-fa-share-alt-square_2bq2e:before {\n  content: \"\\F1E1\";\n}\n.font-awesome-fa-bomb_hqjyv:before {\n  content: \"\\F1E2\";\n}\n.font-awesome-fa-soccer-ball-o_3wmxx:before,\n.font-awesome-fa-futbol-o_3rp5h:before {\n  content: \"\\F1E3\";\n}\n.font-awesome-fa-tty_4qhux:before {\n  content: \"\\F1E4\";\n}\n.font-awesome-fa-binoculars_23j3x:before {\n  content: \"\\F1E5\";\n}\n.font-awesome-fa-plug_39bvm:before {\n  content: \"\\F1E6\";\n}\n.font-awesome-fa-slideshare_2d3d3:before {\n  content: \"\\F1E7\";\n}\n.font-awesome-fa-twitch_3ssvr:before {\n  content: \"\\F1E8\";\n}\n.font-awesome-fa-yelp_4nuk1:before {\n  content: \"\\F1E9\";\n}\n.font-awesome-fa-newspaper-o_3sxxc:before {\n  content: \"\\F1EA\";\n}\n.font-awesome-fa-wifi_41v3p:before {\n  content: \"\\F1EB\";\n}\n.font-awesome-fa-calculator_dpsuw:before {\n  content: \"\\F1EC\";\n}\n.font-awesome-fa-paypal_3j8p3:before {\n  content: \"\\F1ED\";\n}\n.font-awesome-fa-google-wallet_3pzk6:before {\n  content: \"\\F1EE\";\n}\n.font-awesome-fa-cc-visa_27gek:before {\n  content: \"\\F1F0\";\n}\n.font-awesome-fa-cc-mastercard_41xcs:before {\n  content: \"\\F1F1\";\n}\n.font-awesome-fa-cc-discover_2uy8h:before {\n  content: \"\\F1F2\";\n}\n.font-awesome-fa-cc-amex_32wjy:before {\n  content: \"\\F1F3\";\n}\n.font-awesome-fa-cc-paypal_454sh:before {\n  content: \"\\F1F4\";\n}\n.font-awesome-fa-cc-stripe_473cn:before {\n  content: \"\\F1F5\";\n}\n.font-awesome-fa-bell-slash_3cm53:before {\n  content: \"\\F1F6\";\n}\n.font-awesome-fa-bell-slash-o_3e1gw:before {\n  content: \"\\F1F7\";\n}\n.font-awesome-fa-trash_4nzep:before {\n  content: \"\\F1F8\";\n}\n.font-awesome-fa-copyright_294ey:before {\n  content: \"\\F1F9\";\n}\n.font-awesome-fa-at_4msds:before {\n  content: \"\\F1FA\";\n}\n.font-awesome-fa-eyedropper_36gh6:before {\n  content: \"\\F1FB\";\n}\n.font-awesome-fa-paint-brush_34vj3:before {\n  content: \"\\F1FC\";\n}\n.font-awesome-fa-birthday-cake_3kbnm:before {\n  content: \"\\F1FD\";\n}\n.font-awesome-fa-area-chart_sptnx:before {\n  content: \"\\F1FE\";\n}\n.font-awesome-fa-pie-chart_2eh7a:before {\n  content: \"\\F200\";\n}\n.font-awesome-fa-line-chart_jjwww:before {\n  content: \"\\F201\";\n}\n.font-awesome-fa-lastfm_3smzv:before {\n  content: \"\\F202\";\n}\n.font-awesome-fa-lastfm-square_2t54c:before {\n  content: \"\\F203\";\n}\n.font-awesome-fa-toggle-off_jc9q6:before {\n  content: \"\\F204\";\n}\n.font-awesome-fa-toggle-on_4gwhm:before {\n  content: \"\\F205\";\n}\n.font-awesome-fa-bicycle_32rmk:before {\n  content: \"\\F206\";\n}\n.font-awesome-fa-bus_2vfp5:before {\n  content: \"\\F207\";\n}\n.font-awesome-fa-ioxhost_sbk8m:before {\n  content: \"\\F208\";\n}\n.font-awesome-fa-angellist_4jenu:before {\n  content: \"\\F209\";\n}\n.font-awesome-fa-cc_2vggh:before {\n  content: \"\\F20A\";\n}\n.font-awesome-fa-shekel_3sq2h:before,\n.font-awesome-fa-sheqel_2y7zg:before,\n.font-awesome-fa-ils_nyhdp:before {\n  content: \"\\F20B\";\n}\n.font-awesome-fa-meanpath_mazqu:before {\n  content: \"\\F20C\";\n}\n.font-awesome-fa-buysellads_36q3j:before {\n  content: \"\\F20D\";\n}\n.font-awesome-fa-connectdevelop_3d5v3:before {\n  content: \"\\F20E\";\n}\n.font-awesome-fa-dashcube_3kfhh:before {\n  content: \"\\F210\";\n}\n.font-awesome-fa-forumbee_4e897:before {\n  content: \"\\F211\";\n}\n.font-awesome-fa-leanpub_ryycy:before {\n  content: \"\\F212\";\n}\n.font-awesome-fa-sellsy_cra3f:before {\n  content: \"\\F213\";\n}\n.font-awesome-fa-shirtsinbulk_2b28m:before {\n  content: \"\\F214\";\n}\n.font-awesome-fa-simplybuilt_39prv:before {\n  content: \"\\F215\";\n}\n.font-awesome-fa-skyatlas_2c3tg:before {\n  content: \"\\F216\";\n}\n.font-awesome-fa-cart-plus_44ddt:before {\n  content: \"\\F217\";\n}\n.font-awesome-fa-cart-arrow-down_6e1jb:before {\n  content: \"\\F218\";\n}\n.font-awesome-fa-diamond_4zs72:before {\n  content: \"\\F219\";\n}\n.font-awesome-fa-ship_2prea:before {\n  content: \"\\F21A\";\n}\n.font-awesome-fa-user-secret_2j5rz:before {\n  content: \"\\F21B\";\n}\n.font-awesome-fa-motorcycle_qarcs:before {\n  content: \"\\F21C\";\n}\n.font-awesome-fa-street-view_47tzq:before {\n  content: \"\\F21D\";\n}\n.font-awesome-fa-heartbeat_y5uun:before {\n  content: \"\\F21E\";\n}\n.font-awesome-fa-venus_mb92c:before {\n  content: \"\\F221\";\n}\n.font-awesome-fa-mars_2euar:before {\n  content: \"\\F222\";\n}\n.font-awesome-fa-mercury_45dqh:before {\n  content: \"\\F223\";\n}\n.font-awesome-fa-intersex_422zr:before,\n.font-awesome-fa-transgender_4yfry:before {\n  content: \"\\F224\";\n}\n.font-awesome-fa-transgender-alt_4c5pf:before {\n  content: \"\\F225\";\n}\n.font-awesome-fa-venus-double_48zm8:before {\n  content: \"\\F226\";\n}\n.font-awesome-fa-mars-double_3fc9p:before {\n  content: \"\\F227\";\n}\n.font-awesome-fa-venus-mars_djcv7:before {\n  content: \"\\F228\";\n}\n.font-awesome-fa-mars-stroke_2gbkd:before {\n  content: \"\\F229\";\n}\n.font-awesome-fa-mars-stroke-v_x8vf7:before {\n  content: \"\\F22A\";\n}\n.font-awesome-fa-mars-stroke-h_2e6p1:before {\n  content: \"\\F22B\";\n}\n.font-awesome-fa-neuter_4rffn:before {\n  content: \"\\F22C\";\n}\n.font-awesome-fa-genderless_4a5g4:before {\n  content: \"\\F22D\";\n}\n.font-awesome-fa-facebook-official_3fwrg:before {\n  content: \"\\F230\";\n}\n.font-awesome-fa-pinterest-p_35ahe:before {\n  content: \"\\F231\";\n}\n.font-awesome-fa-whatsapp_2c26g:before {\n  content: \"\\F232\";\n}\n.font-awesome-fa-server_31pqg:before {\n  content: \"\\F233\";\n}\n.font-awesome-fa-user-plus_z4h7u:before {\n  content: \"\\F234\";\n}\n.font-awesome-fa-user-times_2bxym:before {\n  content: \"\\F235\";\n}\n.font-awesome-fa-hotel_48f28:before,\n.font-awesome-fa-bed_4hvja:before {\n  content: \"\\F236\";\n}\n.font-awesome-fa-viacoin_2hhde:before {\n  content: \"\\F237\";\n}\n.font-awesome-fa-train_32d84:before {\n  content: \"\\F238\";\n}\n.font-awesome-fa-subway_4857d:before {\n  content: \"\\F239\";\n}\n.font-awesome-fa-medium_35sb6:before {\n  content: \"\\F23A\";\n}\n.font-awesome-fa-yc_8kbu1:before,\n.font-awesome-fa-y-combinator_f9zkf:before {\n  content: \"\\F23B\";\n}\n.font-awesome-fa-optin-monster_2ddkf:before {\n  content: \"\\F23C\";\n}\n.font-awesome-fa-opencart_46rg9:before {\n  content: \"\\F23D\";\n}\n.font-awesome-fa-expeditedssl_3855e:before {\n  content: \"\\F23E\";\n}\n.font-awesome-fa-battery-4_48z1r:before,\n.font-awesome-fa-battery_29xxh:before,\n.font-awesome-fa-battery-full_2utkx:before {\n  content: \"\\F240\";\n}\n.font-awesome-fa-battery-3_2qvtk:before,\n.font-awesome-fa-battery-three-quarters_4seaz:before {\n  content: \"\\F241\";\n}\n.font-awesome-fa-battery-2_25rh3:before,\n.font-awesome-fa-battery-half_8dk8m:before {\n  content: \"\\F242\";\n}\n.font-awesome-fa-battery-1_2hg4t:before,\n.font-awesome-fa-battery-quarter_3c8tu:before {\n  content: \"\\F243\";\n}\n.font-awesome-fa-battery-0_39afe:before,\n.font-awesome-fa-battery-empty_2zde7:before {\n  content: \"\\F244\";\n}\n.font-awesome-fa-mouse-pointer_t31pc:before {\n  content: \"\\F245\";\n}\n.font-awesome-fa-i-cursor_4emxz:before {\n  content: \"\\F246\";\n}\n.font-awesome-fa-object-group_3phf2:before {\n  content: \"\\F247\";\n}\n.font-awesome-fa-object-ungroup_4wrkk:before {\n  content: \"\\F248\";\n}\n.font-awesome-fa-sticky-note_3j699:before {\n  content: \"\\F249\";\n}\n.font-awesome-fa-sticky-note-o_shtd6:before {\n  content: \"\\F24A\";\n}\n.font-awesome-fa-cc-jcb_3fnhw:before {\n  content: \"\\F24B\";\n}\n.font-awesome-fa-cc-diners-club_4chnm:before {\n  content: \"\\F24C\";\n}\n.font-awesome-fa-clone_w3s26:before {\n  content: \"\\F24D\";\n}\n.font-awesome-fa-balance-scale_3jjac:before {\n  content: \"\\F24E\";\n}\n.font-awesome-fa-hourglass-o_4mn3p:before {\n  content: \"\\F250\";\n}\n.font-awesome-fa-hourglass-1_44j36:before,\n.font-awesome-fa-hourglass-start_34mh7:before {\n  content: \"\\F251\";\n}\n.font-awesome-fa-hourglass-2_ap4ct:before,\n.font-awesome-fa-hourglass-half_2cnad:before {\n  content: \"\\F252\";\n}\n.font-awesome-fa-hourglass-3_3eea3:before,\n.font-awesome-fa-hourglass-end_fkq2j:before {\n  content: \"\\F253\";\n}\n.font-awesome-fa-hourglass_33pjw:before {\n  content: \"\\F254\";\n}\n.font-awesome-fa-hand-grab-o_ycmpd:before,\n.font-awesome-fa-hand-rock-o_2c791:before {\n  content: \"\\F255\";\n}\n.font-awesome-fa-hand-stop-o_9ysmn:before,\n.font-awesome-fa-hand-paper-o_2dbma:before {\n  content: \"\\F256\";\n}\n.font-awesome-fa-hand-scissors-o_2sf2a:before {\n  content: \"\\F257\";\n}\n.font-awesome-fa-hand-lizard-o_4bdae:before {\n  content: \"\\F258\";\n}\n.font-awesome-fa-hand-spock-o_4z4w1:before {\n  content: \"\\F259\";\n}\n.font-awesome-fa-hand-pointer-o_ppq8m:before {\n  content: \"\\F25A\";\n}\n.font-awesome-fa-hand-peace-o_4a51t:before {\n  content: \"\\F25B\";\n}\n.font-awesome-fa-trademark_24gm6:before {\n  content: \"\\F25C\";\n}\n.font-awesome-fa-registered_sdn1b:before {\n  content: \"\\F25D\";\n}\n.font-awesome-fa-creative-commons_4kfu3:before {\n  content: \"\\F25E\";\n}\n.font-awesome-fa-gg_47btu:before {\n  content: \"\\F260\";\n}\n.font-awesome-fa-gg-circle_tcj1h:before {\n  content: \"\\F261\";\n}\n.font-awesome-fa-tripadvisor_31fw4:before {\n  content: \"\\F262\";\n}\n.font-awesome-fa-odnoklassniki_2ehez:before {\n  content: \"\\F263\";\n}\n.font-awesome-fa-odnoklassniki-square_2pteu:before {\n  content: \"\\F264\";\n}\n.font-awesome-fa-get-pocket_244rz:before {\n  content: \"\\F265\";\n}\n.font-awesome-fa-wikipedia-w_c9xg3:before {\n  content: \"\\F266\";\n}\n.font-awesome-fa-safari_3bmzu:before {\n  content: \"\\F267\";\n}\n.font-awesome-fa-chrome_26cee:before {\n  content: \"\\F268\";\n}\n.font-awesome-fa-firefox_uyzy3:before {\n  content: \"\\F269\";\n}\n.font-awesome-fa-opera_34xaf:before {\n  content: \"\\F26A\";\n}\n.font-awesome-fa-internet-explorer_376vp:before {\n  content: \"\\F26B\";\n}\n.font-awesome-fa-tv_y9snd:before,\n.font-awesome-fa-television_3dsne:before {\n  content: \"\\F26C\";\n}\n.font-awesome-fa-contao_4u34r:before {\n  content: \"\\F26D\";\n}\n.font-awesome-fa-500px_34p35:before {\n  content: \"\\F26E\";\n}\n.font-awesome-fa-amazon_2ybs9:before {\n  content: \"\\F270\";\n}\n.font-awesome-fa-calendar-plus-o_329he:before {\n  content: \"\\F271\";\n}\n.font-awesome-fa-calendar-minus-o_3e527:before {\n  content: \"\\F272\";\n}\n.font-awesome-fa-calendar-times-o_378tu:before {\n  content: \"\\F273\";\n}\n.font-awesome-fa-calendar-check-o_2ttqe:before {\n  content: \"\\F274\";\n}\n.font-awesome-fa-industry_2ur6r:before {\n  content: \"\\F275\";\n}\n.font-awesome-fa-map-pin_33vje:before {\n  content: \"\\F276\";\n}\n.font-awesome-fa-map-signs_3xrzv:before {\n  content: \"\\F277\";\n}\n.font-awesome-fa-map-o_32rzr:before {\n  content: \"\\F278\";\n}\n.font-awesome-fa-map_3huyt:before {\n  content: \"\\F279\";\n}\n.font-awesome-fa-commenting_33qys:before {\n  content: \"\\F27A\";\n}\n.font-awesome-fa-commenting-o_tsnef:before {\n  content: \"\\F27B\";\n}\n.font-awesome-fa-houzz_35b1a:before {\n  content: \"\\F27C\";\n}\n.font-awesome-fa-vimeo_ruckq:before {\n  content: \"\\F27D\";\n}\n.font-awesome-fa-black-tie_3s1bt:before {\n  content: \"\\F27E\";\n}\n.font-awesome-fa-fonticons_jgf1y:before {\n  content: \"\\F280\";\n}\n.font-awesome-fa-reddit-alien_34vgx:before {\n  content: \"\\F281\";\n}\n.font-awesome-fa-edge_2yze4:before {\n  content: \"\\F282\";\n}\n.font-awesome-fa-credit-card-alt_kuzgu:before {\n  content: \"\\F283\";\n}\n.font-awesome-fa-codiepie_yge6f:before {\n  content: \"\\F284\";\n}\n.font-awesome-fa-modx_4g6qt:before {\n  content: \"\\F285\";\n}\n.font-awesome-fa-fort-awesome_3k3f9:before {\n  content: \"\\F286\";\n}\n.font-awesome-fa-usb_3cu5y:before {\n  content: \"\\F287\";\n}\n.font-awesome-fa-product-hunt_ab9yq:before {\n  content: \"\\F288\";\n}\n.font-awesome-fa-mixcloud_28sam:before {\n  content: \"\\F289\";\n}\n.font-awesome-fa-scribd_377am:before {\n  content: \"\\F28A\";\n}\n.font-awesome-fa-pause-circle_4yhhc:before {\n  content: \"\\F28B\";\n}\n.font-awesome-fa-pause-circle-o_2z28w:before {\n  content: \"\\F28C\";\n}\n.font-awesome-fa-stop-circle_3b1e2:before {\n  content: \"\\F28D\";\n}\n.font-awesome-fa-stop-circle-o_2ut5m:before {\n  content: \"\\F28E\";\n}\n.font-awesome-fa-shopping-bag_4jhne:before {\n  content: \"\\F290\";\n}\n.font-awesome-fa-shopping-basket_3m51b:before {\n  content: \"\\F291\";\n}\n.font-awesome-fa-hashtag_4k9pe:before {\n  content: \"\\F292\";\n}\n.font-awesome-fa-bluetooth_28489:before {\n  content: \"\\F293\";\n}\n.font-awesome-fa-bluetooth-b_4zxgw:before {\n  content: \"\\F294\";\n}\n.font-awesome-fa-percent_f1c9m:before {\n  content: \"\\F295\";\n}\n.font-awesome-fa-gitlab_w8qj5:before {\n  content: \"\\F296\";\n}\n.font-awesome-fa-wpbeginner_pv72u:before {\n  content: \"\\F297\";\n}\n.font-awesome-fa-wpforms_2gbe8:before {\n  content: \"\\F298\";\n}\n.font-awesome-fa-envira_nde6q:before {\n  content: \"\\F299\";\n}\n.font-awesome-fa-universal-access_25j1t:before {\n  content: \"\\F29A\";\n}\n.font-awesome-fa-wheelchair-alt_32en1:before {\n  content: \"\\F29B\";\n}\n.font-awesome-fa-question-circle-o_2zwvc:before {\n  content: \"\\F29C\";\n}\n.font-awesome-fa-blind_cu4y3:before {\n  content: \"\\F29D\";\n}\n.font-awesome-fa-audio-description_4hf45:before {\n  content: \"\\F29E\";\n}\n.font-awesome-fa-volume-control-phone_23hwp:before {\n  content: \"\\F2A0\";\n}\n.font-awesome-fa-braille_3me8j:before {\n  content: \"\\F2A1\";\n}\n.font-awesome-fa-assistive-listening-systems_4fekb:before {\n  content: \"\\F2A2\";\n}\n.font-awesome-fa-asl-interpreting_hmevn:before,\n.font-awesome-fa-american-sign-language-interpreting_4ggx7:before {\n  content: \"\\F2A3\";\n}\n.font-awesome-fa-deafness_2tkcd:before,\n.font-awesome-fa-hard-of-hearing_f1q1g:before,\n.font-awesome-fa-deaf_4hn44:before {\n  content: \"\\F2A4\";\n}\n.font-awesome-fa-glide_27xcy:before {\n  content: \"\\F2A5\";\n}\n.font-awesome-fa-glide-g_3k21p:before {\n  content: \"\\F2A6\";\n}\n.font-awesome-fa-signing_k93er:before,\n.font-awesome-fa-sign-language_332d4:before {\n  content: \"\\F2A7\";\n}\n.font-awesome-fa-low-vision_4qhxr:before {\n  content: \"\\F2A8\";\n}\n.font-awesome-fa-viadeo_4uhvu:before {\n  content: \"\\F2A9\";\n}\n.font-awesome-fa-viadeo-square_3k33g:before {\n  content: \"\\F2AA\";\n}\n.font-awesome-fa-snapchat_41hsm:before {\n  content: \"\\F2AB\";\n}\n.font-awesome-fa-snapchat-ghost_459pf:before {\n  content: \"\\F2AC\";\n}\n.font-awesome-fa-snapchat-square_447we:before {\n  content: \"\\F2AD\";\n}\n.font-awesome-fa-pied-piper_2tz9d:before {\n  content: \"\\F2AE\";\n}\n.font-awesome-fa-first-order_35gb2:before {\n  content: \"\\F2B0\";\n}\n.font-awesome-fa-yoast_4y2s4:before {\n  content: \"\\F2B1\";\n}\n.font-awesome-fa-themeisle_26fyu:before {\n  content: \"\\F2B2\";\n}\n.font-awesome-fa-google-plus-circle_452rm:before,\n.font-awesome-fa-google-plus-official_3nz5a:before {\n  content: \"\\F2B3\";\n}\n.font-awesome-fa-fa_3x9e8:before,\n.font-awesome-fa-font-awesome_3bm5r:before {\n  content: \"\\F2B4\";\n}\n.font-awesome-fa-handshake-o_2uy6d:before {\n  content: \"\\F2B5\";\n}\n.font-awesome-fa-envelope-open_2u4s3:before {\n  content: \"\\F2B6\";\n}\n.font-awesome-fa-envelope-open-o_3d1r8:before {\n  content: \"\\F2B7\";\n}\n.font-awesome-fa-linode_4mx5s:before {\n  content: \"\\F2B8\";\n}\n.font-awesome-fa-address-book_2ryeb:before {\n  content: \"\\F2B9\";\n}\n.font-awesome-fa-address-book-o_3mhbe:before {\n  content: \"\\F2BA\";\n}\n.font-awesome-fa-vcard_xquxx:before,\n.font-awesome-fa-address-card_4s8z6:before {\n  content: \"\\F2BB\";\n}\n.font-awesome-fa-vcard-o_2q19h:before,\n.font-awesome-fa-address-card-o_g4rjs:before {\n  content: \"\\F2BC\";\n}\n.font-awesome-fa-user-circle_paca9:before {\n  content: \"\\F2BD\";\n}\n.font-awesome-fa-user-circle-o_ym32y:before {\n  content: \"\\F2BE\";\n}\n.font-awesome-fa-user-o_2axq8:before {\n  content: \"\\F2C0\";\n}\n.font-awesome-fa-id-badge_3zvve:before {\n  content: \"\\F2C1\";\n}\n.font-awesome-fa-drivers-license_3zpw3:before,\n.font-awesome-fa-id-card_z4vpk:before {\n  content: \"\\F2C2\";\n}\n.font-awesome-fa-drivers-license-o_3a2cq:before,\n.font-awesome-fa-id-card-o_zze8k:before {\n  content: \"\\F2C3\";\n}\n.font-awesome-fa-quora_3nddk:before {\n  content: \"\\F2C4\";\n}\n.font-awesome-fa-free-code-camp_2nvj3:before {\n  content: \"\\F2C5\";\n}\n.font-awesome-fa-telegram_t33bq:before {\n  content: \"\\F2C6\";\n}\n.font-awesome-fa-thermometer-4_b35kc:before,\n.font-awesome-fa-thermometer_22q6p:before,\n.font-awesome-fa-thermometer-full_a5kq1:before {\n  content: \"\\F2C7\";\n}\n.font-awesome-fa-thermometer-3_348r6:before,\n.font-awesome-fa-thermometer-three-quarters_y137a:before {\n  content: \"\\F2C8\";\n}\n.font-awesome-fa-thermometer-2_4vbbf:before,\n.font-awesome-fa-thermometer-half_3s5w6:before {\n  content: \"\\F2C9\";\n}\n.font-awesome-fa-thermometer-1_333ug:before,\n.font-awesome-fa-thermometer-quarter_3qkaz:before {\n  content: \"\\F2CA\";\n}\n.font-awesome-fa-thermometer-0_2jvbk:before,\n.font-awesome-fa-thermometer-empty_2c9a4:before {\n  content: \"\\F2CB\";\n}\n.font-awesome-fa-shower_48bz1:before {\n  content: \"\\F2CC\";\n}\n.font-awesome-fa-bathtub_p2q19:before,\n.font-awesome-fa-s15_48krf:before,\n.font-awesome-fa-bath_kbg2f:before {\n  content: \"\\F2CD\";\n}\n.font-awesome-fa-podcast_2wbnv:before {\n  content: \"\\F2CE\";\n}\n.font-awesome-fa-window-maximize_pund6:before {\n  content: \"\\F2D0\";\n}\n.font-awesome-fa-window-minimize_215tn:before {\n  content: \"\\F2D1\";\n}\n.font-awesome-fa-window-restore_35vvq:before {\n  content: \"\\F2D2\";\n}\n.font-awesome-fa-times-rectangle_grwwj:before,\n.font-awesome-fa-window-close_2cwbb:before {\n  content: \"\\F2D3\";\n}\n.font-awesome-fa-times-rectangle-o_2pxcj:before,\n.font-awesome-fa-window-close-o_3fk5e:before {\n  content: \"\\F2D4\";\n}\n.font-awesome-fa-bandcamp_3k33r:before {\n  content: \"\\F2D5\";\n}\n.font-awesome-fa-grav_48c86:before {\n  content: \"\\F2D6\";\n}\n.font-awesome-fa-etsy_4nxsk:before {\n  content: \"\\F2D7\";\n}\n.font-awesome-fa-imdb_3ymn9:before {\n  content: \"\\F2D8\";\n}\n.font-awesome-fa-ravelry_2wf71:before {\n  content: \"\\F2D9\";\n}\n.font-awesome-fa-eercast_43sb9:before {\n  content: \"\\F2DA\";\n}\n.font-awesome-fa-microchip_39g56:before {\n  content: \"\\F2DB\";\n}\n.font-awesome-fa-snowflake-o_27fzf:before {\n  content: \"\\F2DC\";\n}\n.font-awesome-fa-superpowers_3yutd:before {\n  content: \"\\F2DD\";\n}\n.font-awesome-fa-wpexplorer_4ymkj:before {\n  content: \"\\F2DE\";\n}\n.font-awesome-fa-meetup_3zzy9:before {\n  content: \"\\F2E0\";\n}\n.font-awesome-sr-only_3t6pf {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n.font-awesome-sr-only-focusable_wwj67:active,\n.font-awesome-sr-only-focusable_wwj67:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto;\n}\n", ""]);

// exports
exports.locals = {
	"fa": "font-awesome-fa_3nqz4",
	"fa-lg": "font-awesome-fa-lg_2uq3c",
	"fa-2x": "font-awesome-fa-2x_2hfhw",
	"fa-3x": "font-awesome-fa-3x_43xq9",
	"fa-4x": "font-awesome-fa-4x_6bygg",
	"fa-5x": "font-awesome-fa-5x_3cfrj",
	"fa-fw": "font-awesome-fa-fw_41emh",
	"fa-ul": "font-awesome-fa-ul_45gv7",
	"fa-li": "font-awesome-fa-li_95eyn",
	"fa-border": "font-awesome-fa-border_3vkxd",
	"fa-pull-left": "font-awesome-fa-pull-left_4qwcd",
	"fa-pull-right": "font-awesome-fa-pull-right_3vu9s",
	"pull-right": "font-awesome-pull-right_391a4",
	"pull-left": "font-awesome-pull-left_4qwy8",
	"fa-spin": "font-awesome-fa-spin_3jhtx",
	"fa-pulse": "font-awesome-fa-pulse_3txbs",
	"fa-rotate-90": "font-awesome-fa-rotate-90_456eb",
	"fa-rotate-180": "font-awesome-fa-rotate-180_48nwr",
	"fa-rotate-270": "font-awesome-fa-rotate-270_a7rpt",
	"fa-flip-horizontal": "font-awesome-fa-flip-horizontal_wyack",
	"fa-flip-vertical": "font-awesome-fa-flip-vertical_2k1sk",
	"fa-stack": "font-awesome-fa-stack_2d23t",
	"fa-stack-1x": "font-awesome-fa-stack-1x_29dce",
	"fa-stack-2x": "font-awesome-fa-stack-2x_277n7",
	"fa-inverse": "font-awesome-fa-inverse_2nc3d",
	"fa-glass": "font-awesome-fa-glass_4btzw",
	"fa-music": "font-awesome-fa-music_4agvw",
	"fa-search": "font-awesome-fa-search_3kfd2",
	"fa-envelope-o": "font-awesome-fa-envelope-o_2favh",
	"fa-heart": "font-awesome-fa-heart_hdy2u",
	"fa-star": "font-awesome-fa-star_4pv64",
	"fa-star-o": "font-awesome-fa-star-o_chy54",
	"fa-user": "font-awesome-fa-user_2xwkc",
	"fa-film": "font-awesome-fa-film_4m783",
	"fa-th-large": "font-awesome-fa-th-large_eqgps",
	"fa-th": "font-awesome-fa-th_2cja2",
	"fa-th-list": "font-awesome-fa-th-list_3v1b4",
	"fa-check": "font-awesome-fa-check_4gd6f",
	"fa-remove": "font-awesome-fa-remove_jww5c",
	"fa-close": "font-awesome-fa-close_4s4jh",
	"fa-times": "font-awesome-fa-times_23qe4",
	"fa-search-plus": "font-awesome-fa-search-plus_2bq9s",
	"fa-search-minus": "font-awesome-fa-search-minus_3g6np",
	"fa-power-off": "font-awesome-fa-power-off_47j3v",
	"fa-signal": "font-awesome-fa-signal_26y41",
	"fa-gear": "font-awesome-fa-gear_33yyb",
	"fa-cog": "font-awesome-fa-cog_wa2qf",
	"fa-trash-o": "font-awesome-fa-trash-o_3kzqg",
	"fa-home": "font-awesome-fa-home_28ett",
	"fa-file-o": "font-awesome-fa-file-o_414wr",
	"fa-clock-o": "font-awesome-fa-clock-o_2veg8",
	"fa-road": "font-awesome-fa-road_2ykx9",
	"fa-download": "font-awesome-fa-download_2mucq",
	"fa-arrow-circle-o-down": "font-awesome-fa-arrow-circle-o-down_3f1zz",
	"fa-arrow-circle-o-up": "font-awesome-fa-arrow-circle-o-up_3dvr2",
	"fa-inbox": "font-awesome-fa-inbox_3ybwr",
	"fa-play-circle-o": "font-awesome-fa-play-circle-o_4sr8h",
	"fa-rotate-right": "font-awesome-fa-rotate-right_393sh",
	"fa-repeat": "font-awesome-fa-repeat_q99jt",
	"fa-refresh": "font-awesome-fa-refresh_34ap9",
	"fa-list-alt": "font-awesome-fa-list-alt_2jmv8",
	"fa-lock": "font-awesome-fa-lock_4ekru",
	"fa-flag": "font-awesome-fa-flag_36n2d",
	"fa-headphones": "font-awesome-fa-headphones_36h7x",
	"fa-volume-off": "font-awesome-fa-volume-off_24swq",
	"fa-volume-down": "font-awesome-fa-volume-down_pwdhd",
	"fa-volume-up": "font-awesome-fa-volume-up_ntqbj",
	"fa-qrcode": "font-awesome-fa-qrcode_8tut1",
	"fa-barcode": "font-awesome-fa-barcode_2r8qd",
	"fa-tag": "font-awesome-fa-tag_3gne8",
	"fa-tags": "font-awesome-fa-tags_259aw",
	"fa-book": "font-awesome-fa-book_2u36a",
	"fa-bookmark": "font-awesome-fa-bookmark_29f62",
	"fa-print": "font-awesome-fa-print_2s573",
	"fa-camera": "font-awesome-fa-camera_3u3bj",
	"fa-font": "font-awesome-fa-font_4c828",
	"fa-bold": "font-awesome-fa-bold_4k5vs",
	"fa-italic": "font-awesome-fa-italic_35vrs",
	"fa-text-height": "font-awesome-fa-text-height_27m25",
	"fa-text-width": "font-awesome-fa-text-width_2y3x2",
	"fa-align-left": "font-awesome-fa-align-left_4dqdd",
	"fa-align-center": "font-awesome-fa-align-center_35xqu",
	"fa-align-right": "font-awesome-fa-align-right_4qa81",
	"fa-align-justify": "font-awesome-fa-align-justify_3r8f5",
	"fa-list": "font-awesome-fa-list_2z1ed",
	"fa-dedent": "font-awesome-fa-dedent_4ks1z",
	"fa-outdent": "font-awesome-fa-outdent_21yce",
	"fa-indent": "font-awesome-fa-indent_rc21m",
	"fa-video-camera": "font-awesome-fa-video-camera_2c5dn",
	"fa-photo": "font-awesome-fa-photo_2nyqr",
	"fa-image": "font-awesome-fa-image_3qpmp",
	"fa-picture-o": "font-awesome-fa-picture-o_35zt3",
	"fa-pencil": "font-awesome-fa-pencil_3g9ew",
	"fa-map-marker": "font-awesome-fa-map-marker_3brgm",
	"fa-adjust": "font-awesome-fa-adjust_g517c",
	"fa-tint": "font-awesome-fa-tint_2n958",
	"fa-edit": "font-awesome-fa-edit_4ypwb",
	"fa-pencil-square-o": "font-awesome-fa-pencil-square-o_3e3zu",
	"fa-share-square-o": "font-awesome-fa-share-square-o_2ktkj",
	"fa-check-square-o": "font-awesome-fa-check-square-o_2krf3",
	"fa-arrows": "font-awesome-fa-arrows_45ew1",
	"fa-step-backward": "font-awesome-fa-step-backward_2h9d2",
	"fa-fast-backward": "font-awesome-fa-fast-backward_2syxz",
	"fa-backward": "font-awesome-fa-backward_2np3h",
	"fa-play": "font-awesome-fa-play_t5x61",
	"fa-pause": "font-awesome-fa-pause_n2w49",
	"fa-stop": "font-awesome-fa-stop_29v29",
	"fa-forward": "font-awesome-fa-forward_2ntwp",
	"fa-fast-forward": "font-awesome-fa-fast-forward_tx3u1",
	"fa-step-forward": "font-awesome-fa-step-forward_v39xm",
	"fa-eject": "font-awesome-fa-eject_3swgu",
	"fa-chevron-left": "font-awesome-fa-chevron-left_4f5j3",
	"fa-chevron-right": "font-awesome-fa-chevron-right_2k5j6",
	"fa-plus-circle": "font-awesome-fa-plus-circle_v5fb8",
	"fa-minus-circle": "font-awesome-fa-minus-circle_42zed",
	"fa-times-circle": "font-awesome-fa-times-circle_z612t",
	"fa-check-circle": "font-awesome-fa-check-circle_7x6yj",
	"fa-question-circle": "font-awesome-fa-question-circle_2c6r4",
	"fa-info-circle": "font-awesome-fa-info-circle_raq7x",
	"fa-crosshairs": "font-awesome-fa-crosshairs_2ge9q",
	"fa-times-circle-o": "font-awesome-fa-times-circle-o_3unw8",
	"fa-check-circle-o": "font-awesome-fa-check-circle-o_3zqyh",
	"fa-ban": "font-awesome-fa-ban_4cv2d",
	"fa-arrow-left": "font-awesome-fa-arrow-left_48gmt",
	"fa-arrow-right": "font-awesome-fa-arrow-right_4mjf6",
	"fa-arrow-up": "font-awesome-fa-arrow-up_ur2gm",
	"fa-arrow-down": "font-awesome-fa-arrow-down_rs3bg",
	"fa-mail-forward": "font-awesome-fa-mail-forward_3q1z6",
	"fa-share": "font-awesome-fa-share_3by4b",
	"fa-expand": "font-awesome-fa-expand_wak4k",
	"fa-compress": "font-awesome-fa-compress_336kq",
	"fa-plus": "font-awesome-fa-plus_4u4t9",
	"fa-minus": "font-awesome-fa-minus_et4rr",
	"fa-asterisk": "font-awesome-fa-asterisk_qccwj",
	"fa-exclamation-circle": "font-awesome-fa-exclamation-circle_mavzf",
	"fa-gift": "font-awesome-fa-gift_2tn1u",
	"fa-leaf": "font-awesome-fa-leaf_2tkkz",
	"fa-fire": "font-awesome-fa-fire_73jhy",
	"fa-eye": "font-awesome-fa-eye_236js",
	"fa-eye-slash": "font-awesome-fa-eye-slash_2ssyx",
	"fa-warning": "font-awesome-fa-warning_37kn4",
	"fa-exclamation-triangle": "font-awesome-fa-exclamation-triangle_4p3as",
	"fa-plane": "font-awesome-fa-plane_3dx6x",
	"fa-calendar": "font-awesome-fa-calendar_raf12",
	"fa-random": "font-awesome-fa-random_3yyjh",
	"fa-comment": "font-awesome-fa-comment_31stw",
	"fa-magnet": "font-awesome-fa-magnet_4k15e",
	"fa-chevron-up": "font-awesome-fa-chevron-up_2dken",
	"fa-chevron-down": "font-awesome-fa-chevron-down_2uy71",
	"fa-retweet": "font-awesome-fa-retweet_2bx1v",
	"fa-shopping-cart": "font-awesome-fa-shopping-cart_3t4en",
	"fa-folder": "font-awesome-fa-folder_31erh",
	"fa-folder-open": "font-awesome-fa-folder-open_t8ya7",
	"fa-arrows-v": "font-awesome-fa-arrows-v_4gvr6",
	"fa-arrows-h": "font-awesome-fa-arrows-h_tf7qg",
	"fa-bar-chart-o": "font-awesome-fa-bar-chart-o_36z1y",
	"fa-bar-chart": "font-awesome-fa-bar-chart_3hj19",
	"fa-twitter-square": "font-awesome-fa-twitter-square_3gq7u",
	"fa-facebook-square": "font-awesome-fa-facebook-square_25ywy",
	"fa-camera-retro": "font-awesome-fa-camera-retro_q2axg",
	"fa-key": "font-awesome-fa-key_2yz8h",
	"fa-gears": "font-awesome-fa-gears_4e2dt",
	"fa-cogs": "font-awesome-fa-cogs_4cxc3",
	"fa-comments": "font-awesome-fa-comments_4t21x",
	"fa-thumbs-o-up": "font-awesome-fa-thumbs-o-up_4r3yv",
	"fa-thumbs-o-down": "font-awesome-fa-thumbs-o-down_87w4r",
	"fa-star-half": "font-awesome-fa-star-half_4p9th",
	"fa-heart-o": "font-awesome-fa-heart-o_36nkc",
	"fa-sign-out": "font-awesome-fa-sign-out_23hy7",
	"fa-linkedin-square": "font-awesome-fa-linkedin-square_25u8h",
	"fa-thumb-tack": "font-awesome-fa-thumb-tack_hx4pc",
	"fa-external-link": "font-awesome-fa-external-link_4wsan",
	"fa-sign-in": "font-awesome-fa-sign-in_36s82",
	"fa-trophy": "font-awesome-fa-trophy_44smk",
	"fa-github-square": "font-awesome-fa-github-square_4n4cq",
	"fa-upload": "font-awesome-fa-upload_447cp",
	"fa-lemon-o": "font-awesome-fa-lemon-o_4c54e",
	"fa-phone": "font-awesome-fa-phone_4d79t",
	"fa-square-o": "font-awesome-fa-square-o_2bwmf",
	"fa-bookmark-o": "font-awesome-fa-bookmark-o_3thnz",
	"fa-phone-square": "font-awesome-fa-phone-square_2w6s5",
	"fa-twitter": "font-awesome-fa-twitter_2yrmk",
	"fa-facebook-f": "font-awesome-fa-facebook-f_4v7uq",
	"fa-facebook": "font-awesome-fa-facebook_2yhkm",
	"fa-github": "font-awesome-fa-github_69r4s",
	"fa-unlock": "font-awesome-fa-unlock_f83k2",
	"fa-credit-card": "font-awesome-fa-credit-card_449gj",
	"fa-feed": "font-awesome-fa-feed_s1ygu",
	"fa-rss": "font-awesome-fa-rss_2xt6h",
	"fa-hdd-o": "font-awesome-fa-hdd-o_22gas",
	"fa-bullhorn": "font-awesome-fa-bullhorn_22e4d",
	"fa-bell": "font-awesome-fa-bell_42g1x",
	"fa-certificate": "font-awesome-fa-certificate_3a1xn",
	"fa-hand-o-right": "font-awesome-fa-hand-o-right_tvqe4",
	"fa-hand-o-left": "font-awesome-fa-hand-o-left_5786p",
	"fa-hand-o-up": "font-awesome-fa-hand-o-up_4bjwk",
	"fa-hand-o-down": "font-awesome-fa-hand-o-down_f16eq",
	"fa-arrow-circle-left": "font-awesome-fa-arrow-circle-left_2qtps",
	"fa-arrow-circle-right": "font-awesome-fa-arrow-circle-right_3y551",
	"fa-arrow-circle-up": "font-awesome-fa-arrow-circle-up_3y9j3",
	"fa-arrow-circle-down": "font-awesome-fa-arrow-circle-down_4x2wc",
	"fa-globe": "font-awesome-fa-globe_cq718",
	"fa-wrench": "font-awesome-fa-wrench_3kja1",
	"fa-tasks": "font-awesome-fa-tasks_9ru8u",
	"fa-filter": "font-awesome-fa-filter_2brfv",
	"fa-briefcase": "font-awesome-fa-briefcase_3w38j",
	"fa-arrows-alt": "font-awesome-fa-arrows-alt_2jmka",
	"fa-group": "font-awesome-fa-group_4gxpz",
	"fa-users": "font-awesome-fa-users_3mxwv",
	"fa-chain": "font-awesome-fa-chain_4gkrt",
	"fa-link": "font-awesome-fa-link_7fhh1",
	"fa-cloud": "font-awesome-fa-cloud_27q1n",
	"fa-flask": "font-awesome-fa-flask_45bp5",
	"fa-cut": "font-awesome-fa-cut_25zds",
	"fa-scissors": "font-awesome-fa-scissors_35mfp",
	"fa-copy": "font-awesome-fa-copy_2yg9v",
	"fa-files-o": "font-awesome-fa-files-o_22zey",
	"fa-paperclip": "font-awesome-fa-paperclip_2q7sr",
	"fa-save": "font-awesome-fa-save_2xs7f",
	"fa-floppy-o": "font-awesome-fa-floppy-o_3yk97",
	"fa-square": "font-awesome-fa-square_36mh3",
	"fa-navicon": "font-awesome-fa-navicon_4zuhn",
	"fa-reorder": "font-awesome-fa-reorder_pf8w2",
	"fa-bars": "font-awesome-fa-bars_x22xx",
	"fa-list-ul": "font-awesome-fa-list-ul_3wjuq",
	"fa-list-ol": "font-awesome-fa-list-ol_3hbz4",
	"fa-strikethrough": "font-awesome-fa-strikethrough_2x3sm",
	"fa-underline": "font-awesome-fa-underline_uyyw5",
	"fa-table": "font-awesome-fa-table_aw6xr",
	"fa-magic": "font-awesome-fa-magic_44uhk",
	"fa-truck": "font-awesome-fa-truck_7kx9m",
	"fa-pinterest": "font-awesome-fa-pinterest_47g65",
	"fa-pinterest-square": "font-awesome-fa-pinterest-square_3m3jn",
	"fa-google-plus-square": "font-awesome-fa-google-plus-square_4ag18",
	"fa-google-plus": "font-awesome-fa-google-plus_4qvun",
	"fa-money": "font-awesome-fa-money_w1buu",
	"fa-caret-down": "font-awesome-fa-caret-down_29wrf",
	"fa-caret-up": "font-awesome-fa-caret-up_29ag3",
	"fa-caret-left": "font-awesome-fa-caret-left_4vdaf",
	"fa-caret-right": "font-awesome-fa-caret-right_4ve4r",
	"fa-columns": "font-awesome-fa-columns_4t6jc",
	"fa-unsorted": "font-awesome-fa-unsorted_wc53a",
	"fa-sort": "font-awesome-fa-sort_2q7tc",
	"fa-sort-down": "font-awesome-fa-sort-down_kbtzj",
	"fa-sort-desc": "font-awesome-fa-sort-desc_thcem",
	"fa-sort-up": "font-awesome-fa-sort-up_2r65v",
	"fa-sort-asc": "font-awesome-fa-sort-asc_3wzqf",
	"fa-envelope": "font-awesome-fa-envelope_er48e",
	"fa-linkedin": "font-awesome-fa-linkedin_jhwtj",
	"fa-rotate-left": "font-awesome-fa-rotate-left_21j9u",
	"fa-undo": "font-awesome-fa-undo_24jhh",
	"fa-legal": "font-awesome-fa-legal_3gmnd",
	"fa-gavel": "font-awesome-fa-gavel_2vs2w",
	"fa-dashboard": "font-awesome-fa-dashboard_4mp88",
	"fa-tachometer": "font-awesome-fa-tachometer_3c5xs",
	"fa-comment-o": "font-awesome-fa-comment-o_4t3zs",
	"fa-comments-o": "font-awesome-fa-comments-o_px6a9",
	"fa-flash": "font-awesome-fa-flash_9cvs3",
	"fa-bolt": "font-awesome-fa-bolt_4r5uf",
	"fa-sitemap": "font-awesome-fa-sitemap_7718n",
	"fa-umbrella": "font-awesome-fa-umbrella_y76mn",
	"fa-paste": "font-awesome-fa-paste_41f38",
	"fa-clipboard": "font-awesome-fa-clipboard_78akd",
	"fa-lightbulb-o": "font-awesome-fa-lightbulb-o_4ky58",
	"fa-exchange": "font-awesome-fa-exchange_2zcw2",
	"fa-cloud-download": "font-awesome-fa-cloud-download_39mmy",
	"fa-cloud-upload": "font-awesome-fa-cloud-upload_4e69r",
	"fa-user-md": "font-awesome-fa-user-md_4swqb",
	"fa-stethoscope": "font-awesome-fa-stethoscope_judkz",
	"fa-suitcase": "font-awesome-fa-suitcase_2cmaq",
	"fa-bell-o": "font-awesome-fa-bell-o_4nnrz",
	"fa-coffee": "font-awesome-fa-coffee_qfm34",
	"fa-cutlery": "font-awesome-fa-cutlery_21gt2",
	"fa-file-text-o": "font-awesome-fa-file-text-o_4qf7t",
	"fa-building-o": "font-awesome-fa-building-o_36rp6",
	"fa-hospital-o": "font-awesome-fa-hospital-o_49bft",
	"fa-ambulance": "font-awesome-fa-ambulance_387ym",
	"fa-medkit": "font-awesome-fa-medkit_27epf",
	"fa-fighter-jet": "font-awesome-fa-fighter-jet_26c59",
	"fa-beer": "font-awesome-fa-beer_3uhs8",
	"fa-h-square": "font-awesome-fa-h-square_4qnua",
	"fa-plus-square": "font-awesome-fa-plus-square_4nv7d",
	"fa-angle-double-left": "font-awesome-fa-angle-double-left_2xsmp",
	"fa-angle-double-right": "font-awesome-fa-angle-double-right_qesan",
	"fa-angle-double-up": "font-awesome-fa-angle-double-up_3ndzd",
	"fa-angle-double-down": "font-awesome-fa-angle-double-down_2v752",
	"fa-angle-left": "font-awesome-fa-angle-left_xjnub",
	"fa-angle-right": "font-awesome-fa-angle-right_4bdut",
	"fa-angle-up": "font-awesome-fa-angle-up_gkpp3",
	"fa-angle-down": "font-awesome-fa-angle-down_4hx4b",
	"fa-desktop": "font-awesome-fa-desktop_r164m",
	"fa-laptop": "font-awesome-fa-laptop_f7ep1",
	"fa-tablet": "font-awesome-fa-tablet_46axh",
	"fa-mobile-phone": "font-awesome-fa-mobile-phone_4q548",
	"fa-mobile": "font-awesome-fa-mobile_rh7p1",
	"fa-circle-o": "font-awesome-fa-circle-o_32k7p",
	"fa-quote-left": "font-awesome-fa-quote-left_swtcq",
	"fa-quote-right": "font-awesome-fa-quote-right_2zfpd",
	"fa-spinner": "font-awesome-fa-spinner_4t5rh",
	"fa-circle": "font-awesome-fa-circle_474bg",
	"fa-mail-reply": "font-awesome-fa-mail-reply_27j8v",
	"fa-reply": "font-awesome-fa-reply_43hx8",
	"fa-github-alt": "font-awesome-fa-github-alt_49duw",
	"fa-folder-o": "font-awesome-fa-folder-o_28w2t",
	"fa-folder-open-o": "font-awesome-fa-folder-open-o_2g9qr",
	"fa-smile-o": "font-awesome-fa-smile-o_46wr5",
	"fa-frown-o": "font-awesome-fa-frown-o_32h72",
	"fa-meh-o": "font-awesome-fa-meh-o_4auak",
	"fa-gamepad": "font-awesome-fa-gamepad_2m3vr",
	"fa-keyboard-o": "font-awesome-fa-keyboard-o_3uhae",
	"fa-flag-o": "font-awesome-fa-flag-o_25ncu",
	"fa-flag-checkered": "font-awesome-fa-flag-checkered_2tmuv",
	"fa-terminal": "font-awesome-fa-terminal_2r8hu",
	"fa-code": "font-awesome-fa-code_44rxt",
	"fa-mail-reply-all": "font-awesome-fa-mail-reply-all_3bgj2",
	"fa-reply-all": "font-awesome-fa-reply-all_bfrb1",
	"fa-star-half-empty": "font-awesome-fa-star-half-empty_4wzyw",
	"fa-star-half-full": "font-awesome-fa-star-half-full_p1m6e",
	"fa-star-half-o": "font-awesome-fa-star-half-o_rpczx",
	"fa-location-arrow": "font-awesome-fa-location-arrow_4htbm",
	"fa-crop": "font-awesome-fa-crop_zzzug",
	"fa-code-fork": "font-awesome-fa-code-fork_p4hda",
	"fa-unlink": "font-awesome-fa-unlink_47g53",
	"fa-chain-broken": "font-awesome-fa-chain-broken_4pdaj",
	"fa-question": "font-awesome-fa-question_4nhpt",
	"fa-info": "font-awesome-fa-info_3tnpx",
	"fa-exclamation": "font-awesome-fa-exclamation_3pyqb",
	"fa-superscript": "font-awesome-fa-superscript_45c9q",
	"fa-subscript": "font-awesome-fa-subscript_4hmqx",
	"fa-eraser": "font-awesome-fa-eraser_4cqsr",
	"fa-puzzle-piece": "font-awesome-fa-puzzle-piece_46stc",
	"fa-microphone": "font-awesome-fa-microphone_3gzkx",
	"fa-microphone-slash": "font-awesome-fa-microphone-slash_2zske",
	"fa-shield": "font-awesome-fa-shield_rnz5n",
	"fa-calendar-o": "font-awesome-fa-calendar-o_2sak9",
	"fa-fire-extinguisher": "font-awesome-fa-fire-extinguisher_26nw2",
	"fa-rocket": "font-awesome-fa-rocket_6yq52",
	"fa-maxcdn": "font-awesome-fa-maxcdn_34ekh",
	"fa-chevron-circle-left": "font-awesome-fa-chevron-circle-left_4w82y",
	"fa-chevron-circle-right": "font-awesome-fa-chevron-circle-right_3875r",
	"fa-chevron-circle-up": "font-awesome-fa-chevron-circle-up_2v74p",
	"fa-chevron-circle-down": "font-awesome-fa-chevron-circle-down_3qtm9",
	"fa-html5": "font-awesome-fa-html5_22fhv",
	"fa-css3": "font-awesome-fa-css3_4a4qz",
	"fa-anchor": "font-awesome-fa-anchor_4et8y",
	"fa-unlock-alt": "font-awesome-fa-unlock-alt_4y7nt",
	"fa-bullseye": "font-awesome-fa-bullseye_2katg",
	"fa-ellipsis-h": "font-awesome-fa-ellipsis-h_3rc7s",
	"fa-ellipsis-v": "font-awesome-fa-ellipsis-v_4f723",
	"fa-rss-square": "font-awesome-fa-rss-square_3ez61",
	"fa-play-circle": "font-awesome-fa-play-circle_4pk9q",
	"fa-ticket": "font-awesome-fa-ticket_38p8s",
	"fa-minus-square": "font-awesome-fa-minus-square_2e5ae",
	"fa-minus-square-o": "font-awesome-fa-minus-square-o_33v3x",
	"fa-level-up": "font-awesome-fa-level-up_xy6rd",
	"fa-level-down": "font-awesome-fa-level-down_4gwkn",
	"fa-check-square": "font-awesome-fa-check-square_4a4bn",
	"fa-pencil-square": "font-awesome-fa-pencil-square_2b2zh",
	"fa-external-link-square": "font-awesome-fa-external-link-square_4w6tc",
	"fa-share-square": "font-awesome-fa-share-square_35wpn",
	"fa-compass": "font-awesome-fa-compass_2hmyy",
	"fa-toggle-down": "font-awesome-fa-toggle-down_474xf",
	"fa-caret-square-o-down": "font-awesome-fa-caret-square-o-down_2p24p",
	"fa-toggle-up": "font-awesome-fa-toggle-up_3sykb",
	"fa-caret-square-o-up": "font-awesome-fa-caret-square-o-up_49c2q",
	"fa-toggle-right": "font-awesome-fa-toggle-right_45c5f",
	"fa-caret-square-o-right": "font-awesome-fa-caret-square-o-right_3fusp",
	"fa-euro": "font-awesome-fa-euro_2v8h2",
	"fa-eur": "font-awesome-fa-eur_22ybn",
	"fa-gbp": "font-awesome-fa-gbp_4rfu1",
	"fa-dollar": "font-awesome-fa-dollar_2wmex",
	"fa-usd": "font-awesome-fa-usd_4nvs4",
	"fa-rupee": "font-awesome-fa-rupee_2161g",
	"fa-inr": "font-awesome-fa-inr_23pms",
	"fa-cny": "font-awesome-fa-cny_mpt6y",
	"fa-rmb": "font-awesome-fa-rmb_46vbm",
	"fa-yen": "font-awesome-fa-yen_kun9p",
	"fa-jpy": "font-awesome-fa-jpy_2w1zh",
	"fa-ruble": "font-awesome-fa-ruble_mgkd7",
	"fa-rouble": "font-awesome-fa-rouble_48mfq",
	"fa-rub": "font-awesome-fa-rub_3py6w",
	"fa-won": "font-awesome-fa-won_21skz",
	"fa-krw": "font-awesome-fa-krw_3rsug",
	"fa-bitcoin": "font-awesome-fa-bitcoin_2x78c",
	"fa-btc": "font-awesome-fa-btc_34vnu",
	"fa-file": "font-awesome-fa-file_2hvak",
	"fa-file-text": "font-awesome-fa-file-text_27xvy",
	"fa-sort-alpha-asc": "font-awesome-fa-sort-alpha-asc_3dcru",
	"fa-sort-alpha-desc": "font-awesome-fa-sort-alpha-desc_3r41w",
	"fa-sort-amount-asc": "font-awesome-fa-sort-amount-asc_49k5d",
	"fa-sort-amount-desc": "font-awesome-fa-sort-amount-desc_3tsuv",
	"fa-sort-numeric-asc": "font-awesome-fa-sort-numeric-asc_3r4w9",
	"fa-sort-numeric-desc": "font-awesome-fa-sort-numeric-desc_as49b",
	"fa-thumbs-up": "font-awesome-fa-thumbs-up_2tzkr",
	"fa-thumbs-down": "font-awesome-fa-thumbs-down_mh1xf",
	"fa-youtube-square": "font-awesome-fa-youtube-square_vnsz8",
	"fa-youtube": "font-awesome-fa-youtube_k2x8r",
	"fa-xing": "font-awesome-fa-xing_df4tt",
	"fa-xing-square": "font-awesome-fa-xing-square_pnamd",
	"fa-youtube-play": "font-awesome-fa-youtube-play_45xmt",
	"fa-dropbox": "font-awesome-fa-dropbox_3qmj7",
	"fa-stack-overflow": "font-awesome-fa-stack-overflow_4e4qy",
	"fa-instagram": "font-awesome-fa-instagram_494gw",
	"fa-flickr": "font-awesome-fa-flickr_deqj4",
	"fa-adn": "font-awesome-fa-adn_v5nmz",
	"fa-bitbucket": "font-awesome-fa-bitbucket_r8hwb",
	"fa-bitbucket-square": "font-awesome-fa-bitbucket-square_3xm43",
	"fa-tumblr": "font-awesome-fa-tumblr_32ha5",
	"fa-tumblr-square": "font-awesome-fa-tumblr-square_pdna6",
	"fa-long-arrow-down": "font-awesome-fa-long-arrow-down_4r4z9",
	"fa-long-arrow-up": "font-awesome-fa-long-arrow-up_p2zsg",
	"fa-long-arrow-left": "font-awesome-fa-long-arrow-left_3a13c",
	"fa-long-arrow-right": "font-awesome-fa-long-arrow-right_n2csd",
	"fa-apple": "font-awesome-fa-apple_23cfc",
	"fa-windows": "font-awesome-fa-windows_41qkc",
	"fa-android": "font-awesome-fa-android_eqd3c",
	"fa-linux": "font-awesome-fa-linux_44v3q",
	"fa-dribbble": "font-awesome-fa-dribbble_47y5k",
	"fa-skype": "font-awesome-fa-skype_qm14u",
	"fa-foursquare": "font-awesome-fa-foursquare_s3f6a",
	"fa-trello": "font-awesome-fa-trello_3u7xe",
	"fa-female": "font-awesome-fa-female_3tvmu",
	"fa-male": "font-awesome-fa-male_4xm1v",
	"fa-gittip": "font-awesome-fa-gittip_2nj8a",
	"fa-gratipay": "font-awesome-fa-gratipay_426vx",
	"fa-sun-o": "font-awesome-fa-sun-o_3gdqn",
	"fa-moon-o": "font-awesome-fa-moon-o_3hgcr",
	"fa-archive": "font-awesome-fa-archive_2s6kh",
	"fa-bug": "font-awesome-fa-bug_4nfg1",
	"fa-vk": "font-awesome-fa-vk_4emrb",
	"fa-weibo": "font-awesome-fa-weibo_hffdj",
	"fa-renren": "font-awesome-fa-renren_3t69a",
	"fa-pagelines": "font-awesome-fa-pagelines_4dv2u",
	"fa-stack-exchange": "font-awesome-fa-stack-exchange_2qzu3",
	"fa-arrow-circle-o-right": "font-awesome-fa-arrow-circle-o-right_mm9wb",
	"fa-arrow-circle-o-left": "font-awesome-fa-arrow-circle-o-left_33d94",
	"fa-toggle-left": "font-awesome-fa-toggle-left_2ewjj",
	"fa-caret-square-o-left": "font-awesome-fa-caret-square-o-left_2zj29",
	"fa-dot-circle-o": "font-awesome-fa-dot-circle-o_4erqk",
	"fa-wheelchair": "font-awesome-fa-wheelchair_2kywz",
	"fa-vimeo-square": "font-awesome-fa-vimeo-square_3mbrk",
	"fa-turkish-lira": "font-awesome-fa-turkish-lira_2uqer",
	"fa-try": "font-awesome-fa-try_2kmx4",
	"fa-plus-square-o": "font-awesome-fa-plus-square-o_w7515",
	"fa-space-shuttle": "font-awesome-fa-space-shuttle_6tqcb",
	"fa-slack": "font-awesome-fa-slack_3af9m",
	"fa-envelope-square": "font-awesome-fa-envelope-square_33zcz",
	"fa-wordpress": "font-awesome-fa-wordpress_qrhjk",
	"fa-openid": "font-awesome-fa-openid_w919x",
	"fa-institution": "font-awesome-fa-institution_4du1u",
	"fa-bank": "font-awesome-fa-bank_2bn5f",
	"fa-university": "font-awesome-fa-university_zjzzx",
	"fa-mortar-board": "font-awesome-fa-mortar-board_sx7fa",
	"fa-graduation-cap": "font-awesome-fa-graduation-cap_2x9gx",
	"fa-yahoo": "font-awesome-fa-yahoo_4a38y",
	"fa-google": "font-awesome-fa-google_4j6rh",
	"fa-reddit": "font-awesome-fa-reddit_ttaqm",
	"fa-reddit-square": "font-awesome-fa-reddit-square_e68ag",
	"fa-stumbleupon-circle": "font-awesome-fa-stumbleupon-circle_22nux",
	"fa-stumbleupon": "font-awesome-fa-stumbleupon_4f2py",
	"fa-delicious": "font-awesome-fa-delicious_2g9z8",
	"fa-digg": "font-awesome-fa-digg_318jp",
	"fa-pied-piper-pp": "font-awesome-fa-pied-piper-pp_bd4k7",
	"fa-pied-piper-alt": "font-awesome-fa-pied-piper-alt_3wvk1",
	"fa-drupal": "font-awesome-fa-drupal_34wky",
	"fa-joomla": "font-awesome-fa-joomla_u2kmu",
	"fa-language": "font-awesome-fa-language_ct8zj",
	"fa-fax": "font-awesome-fa-fax_2rmvv",
	"fa-building": "font-awesome-fa-building_41y7v",
	"fa-child": "font-awesome-fa-child_2fxxn",
	"fa-paw": "font-awesome-fa-paw_2q2pd",
	"fa-spoon": "font-awesome-fa-spoon_6jpqt",
	"fa-cube": "font-awesome-fa-cube_zhw4z",
	"fa-cubes": "font-awesome-fa-cubes_2ztsn",
	"fa-behance": "font-awesome-fa-behance_2f597",
	"fa-behance-square": "font-awesome-fa-behance-square_4kh21",
	"fa-steam": "font-awesome-fa-steam_3vp2q",
	"fa-steam-square": "font-awesome-fa-steam-square_3rv42",
	"fa-recycle": "font-awesome-fa-recycle_3jhdn",
	"fa-automobile": "font-awesome-fa-automobile_3uz5x",
	"fa-car": "font-awesome-fa-car_4j8hq",
	"fa-cab": "font-awesome-fa-cab_4by8y",
	"fa-taxi": "font-awesome-fa-taxi_2gs3n",
	"fa-tree": "font-awesome-fa-tree_2uvft",
	"fa-spotify": "font-awesome-fa-spotify_281ek",
	"fa-deviantart": "font-awesome-fa-deviantart_3ejsp",
	"fa-soundcloud": "font-awesome-fa-soundcloud_289pm",
	"fa-database": "font-awesome-fa-database_41m81",
	"fa-file-pdf-o": "font-awesome-fa-file-pdf-o_31hj1",
	"fa-file-word-o": "font-awesome-fa-file-word-o_3dxtr",
	"fa-file-excel-o": "font-awesome-fa-file-excel-o_28ptw",
	"fa-file-powerpoint-o": "font-awesome-fa-file-powerpoint-o_swugq",
	"fa-file-photo-o": "font-awesome-fa-file-photo-o_35n2w",
	"fa-file-picture-o": "font-awesome-fa-file-picture-o_4jnw7",
	"fa-file-image-o": "font-awesome-fa-file-image-o_2s4k1",
	"fa-file-zip-o": "font-awesome-fa-file-zip-o_3fj5w",
	"fa-file-archive-o": "font-awesome-fa-file-archive-o_2jbs3",
	"fa-file-sound-o": "font-awesome-fa-file-sound-o_wpxgw",
	"fa-file-audio-o": "font-awesome-fa-file-audio-o_4ga2e",
	"fa-file-movie-o": "font-awesome-fa-file-movie-o_4h9bn",
	"fa-file-video-o": "font-awesome-fa-file-video-o_348mx",
	"fa-file-code-o": "font-awesome-fa-file-code-o_47r14",
	"fa-vine": "font-awesome-fa-vine_31j6c",
	"fa-codepen": "font-awesome-fa-codepen_2kvff",
	"fa-jsfiddle": "font-awesome-fa-jsfiddle_2r1q8",
	"fa-life-bouy": "font-awesome-fa-life-bouy_4vxu3",
	"fa-life-buoy": "font-awesome-fa-life-buoy_2jk7n",
	"fa-life-saver": "font-awesome-fa-life-saver_4bbkw",
	"fa-support": "font-awesome-fa-support_3ezhk",
	"fa-life-ring": "font-awesome-fa-life-ring_4sg2e",
	"fa-circle-o-notch": "font-awesome-fa-circle-o-notch_3g7ub",
	"fa-ra": "font-awesome-fa-ra_4gyjy",
	"fa-resistance": "font-awesome-fa-resistance_4rr8t",
	"fa-rebel": "font-awesome-fa-rebel_4bnzf",
	"fa-ge": "font-awesome-fa-ge_v7j6f",
	"fa-empire": "font-awesome-fa-empire_9gcr3",
	"fa-git-square": "font-awesome-fa-git-square_4j2zg",
	"fa-git": "font-awesome-fa-git_nyxmt",
	"fa-y-combinator-square": "font-awesome-fa-y-combinator-square_3fkhb",
	"fa-yc-square": "font-awesome-fa-yc-square_423e8",
	"fa-hacker-news": "font-awesome-fa-hacker-news_3bvkf",
	"fa-tencent-weibo": "font-awesome-fa-tencent-weibo_2aayn",
	"fa-qq": "font-awesome-fa-qq_28ush",
	"fa-wechat": "font-awesome-fa-wechat_3uxxv",
	"fa-weixin": "font-awesome-fa-weixin_4xybv",
	"fa-send": "font-awesome-fa-send_37fju",
	"fa-paper-plane": "font-awesome-fa-paper-plane_4ev2k",
	"fa-send-o": "font-awesome-fa-send-o_43d1j",
	"fa-paper-plane-o": "font-awesome-fa-paper-plane-o_26nqv",
	"fa-history": "font-awesome-fa-history_3kffs",
	"fa-circle-thin": "font-awesome-fa-circle-thin_4n3yw",
	"fa-header": "font-awesome-fa-header_tc2an",
	"fa-paragraph": "font-awesome-fa-paragraph_cpbsw",
	"fa-sliders": "font-awesome-fa-sliders_4t17f",
	"fa-share-alt": "font-awesome-fa-share-alt_2e7g5",
	"fa-share-alt-square": "font-awesome-fa-share-alt-square_2bq2e",
	"fa-bomb": "font-awesome-fa-bomb_hqjyv",
	"fa-soccer-ball-o": "font-awesome-fa-soccer-ball-o_3wmxx",
	"fa-futbol-o": "font-awesome-fa-futbol-o_3rp5h",
	"fa-tty": "font-awesome-fa-tty_4qhux",
	"fa-binoculars": "font-awesome-fa-binoculars_23j3x",
	"fa-plug": "font-awesome-fa-plug_39bvm",
	"fa-slideshare": "font-awesome-fa-slideshare_2d3d3",
	"fa-twitch": "font-awesome-fa-twitch_3ssvr",
	"fa-yelp": "font-awesome-fa-yelp_4nuk1",
	"fa-newspaper-o": "font-awesome-fa-newspaper-o_3sxxc",
	"fa-wifi": "font-awesome-fa-wifi_41v3p",
	"fa-calculator": "font-awesome-fa-calculator_dpsuw",
	"fa-paypal": "font-awesome-fa-paypal_3j8p3",
	"fa-google-wallet": "font-awesome-fa-google-wallet_3pzk6",
	"fa-cc-visa": "font-awesome-fa-cc-visa_27gek",
	"fa-cc-mastercard": "font-awesome-fa-cc-mastercard_41xcs",
	"fa-cc-discover": "font-awesome-fa-cc-discover_2uy8h",
	"fa-cc-amex": "font-awesome-fa-cc-amex_32wjy",
	"fa-cc-paypal": "font-awesome-fa-cc-paypal_454sh",
	"fa-cc-stripe": "font-awesome-fa-cc-stripe_473cn",
	"fa-bell-slash": "font-awesome-fa-bell-slash_3cm53",
	"fa-bell-slash-o": "font-awesome-fa-bell-slash-o_3e1gw",
	"fa-trash": "font-awesome-fa-trash_4nzep",
	"fa-copyright": "font-awesome-fa-copyright_294ey",
	"fa-at": "font-awesome-fa-at_4msds",
	"fa-eyedropper": "font-awesome-fa-eyedropper_36gh6",
	"fa-paint-brush": "font-awesome-fa-paint-brush_34vj3",
	"fa-birthday-cake": "font-awesome-fa-birthday-cake_3kbnm",
	"fa-area-chart": "font-awesome-fa-area-chart_sptnx",
	"fa-pie-chart": "font-awesome-fa-pie-chart_2eh7a",
	"fa-line-chart": "font-awesome-fa-line-chart_jjwww",
	"fa-lastfm": "font-awesome-fa-lastfm_3smzv",
	"fa-lastfm-square": "font-awesome-fa-lastfm-square_2t54c",
	"fa-toggle-off": "font-awesome-fa-toggle-off_jc9q6",
	"fa-toggle-on": "font-awesome-fa-toggle-on_4gwhm",
	"fa-bicycle": "font-awesome-fa-bicycle_32rmk",
	"fa-bus": "font-awesome-fa-bus_2vfp5",
	"fa-ioxhost": "font-awesome-fa-ioxhost_sbk8m",
	"fa-angellist": "font-awesome-fa-angellist_4jenu",
	"fa-cc": "font-awesome-fa-cc_2vggh",
	"fa-shekel": "font-awesome-fa-shekel_3sq2h",
	"fa-sheqel": "font-awesome-fa-sheqel_2y7zg",
	"fa-ils": "font-awesome-fa-ils_nyhdp",
	"fa-meanpath": "font-awesome-fa-meanpath_mazqu",
	"fa-buysellads": "font-awesome-fa-buysellads_36q3j",
	"fa-connectdevelop": "font-awesome-fa-connectdevelop_3d5v3",
	"fa-dashcube": "font-awesome-fa-dashcube_3kfhh",
	"fa-forumbee": "font-awesome-fa-forumbee_4e897",
	"fa-leanpub": "font-awesome-fa-leanpub_ryycy",
	"fa-sellsy": "font-awesome-fa-sellsy_cra3f",
	"fa-shirtsinbulk": "font-awesome-fa-shirtsinbulk_2b28m",
	"fa-simplybuilt": "font-awesome-fa-simplybuilt_39prv",
	"fa-skyatlas": "font-awesome-fa-skyatlas_2c3tg",
	"fa-cart-plus": "font-awesome-fa-cart-plus_44ddt",
	"fa-cart-arrow-down": "font-awesome-fa-cart-arrow-down_6e1jb",
	"fa-diamond": "font-awesome-fa-diamond_4zs72",
	"fa-ship": "font-awesome-fa-ship_2prea",
	"fa-user-secret": "font-awesome-fa-user-secret_2j5rz",
	"fa-motorcycle": "font-awesome-fa-motorcycle_qarcs",
	"fa-street-view": "font-awesome-fa-street-view_47tzq",
	"fa-heartbeat": "font-awesome-fa-heartbeat_y5uun",
	"fa-venus": "font-awesome-fa-venus_mb92c",
	"fa-mars": "font-awesome-fa-mars_2euar",
	"fa-mercury": "font-awesome-fa-mercury_45dqh",
	"fa-intersex": "font-awesome-fa-intersex_422zr",
	"fa-transgender": "font-awesome-fa-transgender_4yfry",
	"fa-transgender-alt": "font-awesome-fa-transgender-alt_4c5pf",
	"fa-venus-double": "font-awesome-fa-venus-double_48zm8",
	"fa-mars-double": "font-awesome-fa-mars-double_3fc9p",
	"fa-venus-mars": "font-awesome-fa-venus-mars_djcv7",
	"fa-mars-stroke": "font-awesome-fa-mars-stroke_2gbkd",
	"fa-mars-stroke-v": "font-awesome-fa-mars-stroke-v_x8vf7",
	"fa-mars-stroke-h": "font-awesome-fa-mars-stroke-h_2e6p1",
	"fa-neuter": "font-awesome-fa-neuter_4rffn",
	"fa-genderless": "font-awesome-fa-genderless_4a5g4",
	"fa-facebook-official": "font-awesome-fa-facebook-official_3fwrg",
	"fa-pinterest-p": "font-awesome-fa-pinterest-p_35ahe",
	"fa-whatsapp": "font-awesome-fa-whatsapp_2c26g",
	"fa-server": "font-awesome-fa-server_31pqg",
	"fa-user-plus": "font-awesome-fa-user-plus_z4h7u",
	"fa-user-times": "font-awesome-fa-user-times_2bxym",
	"fa-hotel": "font-awesome-fa-hotel_48f28",
	"fa-bed": "font-awesome-fa-bed_4hvja",
	"fa-viacoin": "font-awesome-fa-viacoin_2hhde",
	"fa-train": "font-awesome-fa-train_32d84",
	"fa-subway": "font-awesome-fa-subway_4857d",
	"fa-medium": "font-awesome-fa-medium_35sb6",
	"fa-yc": "font-awesome-fa-yc_8kbu1",
	"fa-y-combinator": "font-awesome-fa-y-combinator_f9zkf",
	"fa-optin-monster": "font-awesome-fa-optin-monster_2ddkf",
	"fa-opencart": "font-awesome-fa-opencart_46rg9",
	"fa-expeditedssl": "font-awesome-fa-expeditedssl_3855e",
	"fa-battery-4": "font-awesome-fa-battery-4_48z1r",
	"fa-battery": "font-awesome-fa-battery_29xxh",
	"fa-battery-full": "font-awesome-fa-battery-full_2utkx",
	"fa-battery-3": "font-awesome-fa-battery-3_2qvtk",
	"fa-battery-three-quarters": "font-awesome-fa-battery-three-quarters_4seaz",
	"fa-battery-2": "font-awesome-fa-battery-2_25rh3",
	"fa-battery-half": "font-awesome-fa-battery-half_8dk8m",
	"fa-battery-1": "font-awesome-fa-battery-1_2hg4t",
	"fa-battery-quarter": "font-awesome-fa-battery-quarter_3c8tu",
	"fa-battery-0": "font-awesome-fa-battery-0_39afe",
	"fa-battery-empty": "font-awesome-fa-battery-empty_2zde7",
	"fa-mouse-pointer": "font-awesome-fa-mouse-pointer_t31pc",
	"fa-i-cursor": "font-awesome-fa-i-cursor_4emxz",
	"fa-object-group": "font-awesome-fa-object-group_3phf2",
	"fa-object-ungroup": "font-awesome-fa-object-ungroup_4wrkk",
	"fa-sticky-note": "font-awesome-fa-sticky-note_3j699",
	"fa-sticky-note-o": "font-awesome-fa-sticky-note-o_shtd6",
	"fa-cc-jcb": "font-awesome-fa-cc-jcb_3fnhw",
	"fa-cc-diners-club": "font-awesome-fa-cc-diners-club_4chnm",
	"fa-clone": "font-awesome-fa-clone_w3s26",
	"fa-balance-scale": "font-awesome-fa-balance-scale_3jjac",
	"fa-hourglass-o": "font-awesome-fa-hourglass-o_4mn3p",
	"fa-hourglass-1": "font-awesome-fa-hourglass-1_44j36",
	"fa-hourglass-start": "font-awesome-fa-hourglass-start_34mh7",
	"fa-hourglass-2": "font-awesome-fa-hourglass-2_ap4ct",
	"fa-hourglass-half": "font-awesome-fa-hourglass-half_2cnad",
	"fa-hourglass-3": "font-awesome-fa-hourglass-3_3eea3",
	"fa-hourglass-end": "font-awesome-fa-hourglass-end_fkq2j",
	"fa-hourglass": "font-awesome-fa-hourglass_33pjw",
	"fa-hand-grab-o": "font-awesome-fa-hand-grab-o_ycmpd",
	"fa-hand-rock-o": "font-awesome-fa-hand-rock-o_2c791",
	"fa-hand-stop-o": "font-awesome-fa-hand-stop-o_9ysmn",
	"fa-hand-paper-o": "font-awesome-fa-hand-paper-o_2dbma",
	"fa-hand-scissors-o": "font-awesome-fa-hand-scissors-o_2sf2a",
	"fa-hand-lizard-o": "font-awesome-fa-hand-lizard-o_4bdae",
	"fa-hand-spock-o": "font-awesome-fa-hand-spock-o_4z4w1",
	"fa-hand-pointer-o": "font-awesome-fa-hand-pointer-o_ppq8m",
	"fa-hand-peace-o": "font-awesome-fa-hand-peace-o_4a51t",
	"fa-trademark": "font-awesome-fa-trademark_24gm6",
	"fa-registered": "font-awesome-fa-registered_sdn1b",
	"fa-creative-commons": "font-awesome-fa-creative-commons_4kfu3",
	"fa-gg": "font-awesome-fa-gg_47btu",
	"fa-gg-circle": "font-awesome-fa-gg-circle_tcj1h",
	"fa-tripadvisor": "font-awesome-fa-tripadvisor_31fw4",
	"fa-odnoklassniki": "font-awesome-fa-odnoklassniki_2ehez",
	"fa-odnoklassniki-square": "font-awesome-fa-odnoklassniki-square_2pteu",
	"fa-get-pocket": "font-awesome-fa-get-pocket_244rz",
	"fa-wikipedia-w": "font-awesome-fa-wikipedia-w_c9xg3",
	"fa-safari": "font-awesome-fa-safari_3bmzu",
	"fa-chrome": "font-awesome-fa-chrome_26cee",
	"fa-firefox": "font-awesome-fa-firefox_uyzy3",
	"fa-opera": "font-awesome-fa-opera_34xaf",
	"fa-internet-explorer": "font-awesome-fa-internet-explorer_376vp",
	"fa-tv": "font-awesome-fa-tv_y9snd",
	"fa-television": "font-awesome-fa-television_3dsne",
	"fa-contao": "font-awesome-fa-contao_4u34r",
	"fa-500px": "font-awesome-fa-500px_34p35",
	"fa-amazon": "font-awesome-fa-amazon_2ybs9",
	"fa-calendar-plus-o": "font-awesome-fa-calendar-plus-o_329he",
	"fa-calendar-minus-o": "font-awesome-fa-calendar-minus-o_3e527",
	"fa-calendar-times-o": "font-awesome-fa-calendar-times-o_378tu",
	"fa-calendar-check-o": "font-awesome-fa-calendar-check-o_2ttqe",
	"fa-industry": "font-awesome-fa-industry_2ur6r",
	"fa-map-pin": "font-awesome-fa-map-pin_33vje",
	"fa-map-signs": "font-awesome-fa-map-signs_3xrzv",
	"fa-map-o": "font-awesome-fa-map-o_32rzr",
	"fa-map": "font-awesome-fa-map_3huyt",
	"fa-commenting": "font-awesome-fa-commenting_33qys",
	"fa-commenting-o": "font-awesome-fa-commenting-o_tsnef",
	"fa-houzz": "font-awesome-fa-houzz_35b1a",
	"fa-vimeo": "font-awesome-fa-vimeo_ruckq",
	"fa-black-tie": "font-awesome-fa-black-tie_3s1bt",
	"fa-fonticons": "font-awesome-fa-fonticons_jgf1y",
	"fa-reddit-alien": "font-awesome-fa-reddit-alien_34vgx",
	"fa-edge": "font-awesome-fa-edge_2yze4",
	"fa-credit-card-alt": "font-awesome-fa-credit-card-alt_kuzgu",
	"fa-codiepie": "font-awesome-fa-codiepie_yge6f",
	"fa-modx": "font-awesome-fa-modx_4g6qt",
	"fa-fort-awesome": "font-awesome-fa-fort-awesome_3k3f9",
	"fa-usb": "font-awesome-fa-usb_3cu5y",
	"fa-product-hunt": "font-awesome-fa-product-hunt_ab9yq",
	"fa-mixcloud": "font-awesome-fa-mixcloud_28sam",
	"fa-scribd": "font-awesome-fa-scribd_377am",
	"fa-pause-circle": "font-awesome-fa-pause-circle_4yhhc",
	"fa-pause-circle-o": "font-awesome-fa-pause-circle-o_2z28w",
	"fa-stop-circle": "font-awesome-fa-stop-circle_3b1e2",
	"fa-stop-circle-o": "font-awesome-fa-stop-circle-o_2ut5m",
	"fa-shopping-bag": "font-awesome-fa-shopping-bag_4jhne",
	"fa-shopping-basket": "font-awesome-fa-shopping-basket_3m51b",
	"fa-hashtag": "font-awesome-fa-hashtag_4k9pe",
	"fa-bluetooth": "font-awesome-fa-bluetooth_28489",
	"fa-bluetooth-b": "font-awesome-fa-bluetooth-b_4zxgw",
	"fa-percent": "font-awesome-fa-percent_f1c9m",
	"fa-gitlab": "font-awesome-fa-gitlab_w8qj5",
	"fa-wpbeginner": "font-awesome-fa-wpbeginner_pv72u",
	"fa-wpforms": "font-awesome-fa-wpforms_2gbe8",
	"fa-envira": "font-awesome-fa-envira_nde6q",
	"fa-universal-access": "font-awesome-fa-universal-access_25j1t",
	"fa-wheelchair-alt": "font-awesome-fa-wheelchair-alt_32en1",
	"fa-question-circle-o": "font-awesome-fa-question-circle-o_2zwvc",
	"fa-blind": "font-awesome-fa-blind_cu4y3",
	"fa-audio-description": "font-awesome-fa-audio-description_4hf45",
	"fa-volume-control-phone": "font-awesome-fa-volume-control-phone_23hwp",
	"fa-braille": "font-awesome-fa-braille_3me8j",
	"fa-assistive-listening-systems": "font-awesome-fa-assistive-listening-systems_4fekb",
	"fa-asl-interpreting": "font-awesome-fa-asl-interpreting_hmevn",
	"fa-american-sign-language-interpreting": "font-awesome-fa-american-sign-language-interpreting_4ggx7",
	"fa-deafness": "font-awesome-fa-deafness_2tkcd",
	"fa-hard-of-hearing": "font-awesome-fa-hard-of-hearing_f1q1g",
	"fa-deaf": "font-awesome-fa-deaf_4hn44",
	"fa-glide": "font-awesome-fa-glide_27xcy",
	"fa-glide-g": "font-awesome-fa-glide-g_3k21p",
	"fa-signing": "font-awesome-fa-signing_k93er",
	"fa-sign-language": "font-awesome-fa-sign-language_332d4",
	"fa-low-vision": "font-awesome-fa-low-vision_4qhxr",
	"fa-viadeo": "font-awesome-fa-viadeo_4uhvu",
	"fa-viadeo-square": "font-awesome-fa-viadeo-square_3k33g",
	"fa-snapchat": "font-awesome-fa-snapchat_41hsm",
	"fa-snapchat-ghost": "font-awesome-fa-snapchat-ghost_459pf",
	"fa-snapchat-square": "font-awesome-fa-snapchat-square_447we",
	"fa-pied-piper": "font-awesome-fa-pied-piper_2tz9d",
	"fa-first-order": "font-awesome-fa-first-order_35gb2",
	"fa-yoast": "font-awesome-fa-yoast_4y2s4",
	"fa-themeisle": "font-awesome-fa-themeisle_26fyu",
	"fa-google-plus-circle": "font-awesome-fa-google-plus-circle_452rm",
	"fa-google-plus-official": "font-awesome-fa-google-plus-official_3nz5a",
	"fa-fa": "font-awesome-fa-fa_3x9e8",
	"fa-font-awesome": "font-awesome-fa-font-awesome_3bm5r",
	"fa-handshake-o": "font-awesome-fa-handshake-o_2uy6d",
	"fa-envelope-open": "font-awesome-fa-envelope-open_2u4s3",
	"fa-envelope-open-o": "font-awesome-fa-envelope-open-o_3d1r8",
	"fa-linode": "font-awesome-fa-linode_4mx5s",
	"fa-address-book": "font-awesome-fa-address-book_2ryeb",
	"fa-address-book-o": "font-awesome-fa-address-book-o_3mhbe",
	"fa-vcard": "font-awesome-fa-vcard_xquxx",
	"fa-address-card": "font-awesome-fa-address-card_4s8z6",
	"fa-vcard-o": "font-awesome-fa-vcard-o_2q19h",
	"fa-address-card-o": "font-awesome-fa-address-card-o_g4rjs",
	"fa-user-circle": "font-awesome-fa-user-circle_paca9",
	"fa-user-circle-o": "font-awesome-fa-user-circle-o_ym32y",
	"fa-user-o": "font-awesome-fa-user-o_2axq8",
	"fa-id-badge": "font-awesome-fa-id-badge_3zvve",
	"fa-drivers-license": "font-awesome-fa-drivers-license_3zpw3",
	"fa-id-card": "font-awesome-fa-id-card_z4vpk",
	"fa-drivers-license-o": "font-awesome-fa-drivers-license-o_3a2cq",
	"fa-id-card-o": "font-awesome-fa-id-card-o_zze8k",
	"fa-quora": "font-awesome-fa-quora_3nddk",
	"fa-free-code-camp": "font-awesome-fa-free-code-camp_2nvj3",
	"fa-telegram": "font-awesome-fa-telegram_t33bq",
	"fa-thermometer-4": "font-awesome-fa-thermometer-4_b35kc",
	"fa-thermometer": "font-awesome-fa-thermometer_22q6p",
	"fa-thermometer-full": "font-awesome-fa-thermometer-full_a5kq1",
	"fa-thermometer-3": "font-awesome-fa-thermometer-3_348r6",
	"fa-thermometer-three-quarters": "font-awesome-fa-thermometer-three-quarters_y137a",
	"fa-thermometer-2": "font-awesome-fa-thermometer-2_4vbbf",
	"fa-thermometer-half": "font-awesome-fa-thermometer-half_3s5w6",
	"fa-thermometer-1": "font-awesome-fa-thermometer-1_333ug",
	"fa-thermometer-quarter": "font-awesome-fa-thermometer-quarter_3qkaz",
	"fa-thermometer-0": "font-awesome-fa-thermometer-0_2jvbk",
	"fa-thermometer-empty": "font-awesome-fa-thermometer-empty_2c9a4",
	"fa-shower": "font-awesome-fa-shower_48bz1",
	"fa-bathtub": "font-awesome-fa-bathtub_p2q19",
	"fa-s15": "font-awesome-fa-s15_48krf",
	"fa-bath": "font-awesome-fa-bath_kbg2f",
	"fa-podcast": "font-awesome-fa-podcast_2wbnv",
	"fa-window-maximize": "font-awesome-fa-window-maximize_pund6",
	"fa-window-minimize": "font-awesome-fa-window-minimize_215tn",
	"fa-window-restore": "font-awesome-fa-window-restore_35vvq",
	"fa-times-rectangle": "font-awesome-fa-times-rectangle_grwwj",
	"fa-window-close": "font-awesome-fa-window-close_2cwbb",
	"fa-times-rectangle-o": "font-awesome-fa-times-rectangle-o_2pxcj",
	"fa-window-close-o": "font-awesome-fa-window-close-o_3fk5e",
	"fa-bandcamp": "font-awesome-fa-bandcamp_3k33r",
	"fa-grav": "font-awesome-fa-grav_48c86",
	"fa-etsy": "font-awesome-fa-etsy_4nxsk",
	"fa-imdb": "font-awesome-fa-imdb_3ymn9",
	"fa-ravelry": "font-awesome-fa-ravelry_2wf71",
	"fa-eercast": "font-awesome-fa-eercast_43sb9",
	"fa-microchip": "font-awesome-fa-microchip_39g56",
	"fa-snowflake-o": "font-awesome-fa-snowflake-o_27fzf",
	"fa-superpowers": "font-awesome-fa-superpowers_3yutd",
	"fa-wpexplorer": "font-awesome-fa-wpexplorer_4ymkj",
	"fa-meetup": "font-awesome-fa-meetup_3zzy9",
	"sr-only": "font-awesome-sr-only_3t6pf",
	"sr-only-focusable": "font-awesome-sr-only-focusable_wwj67"
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.BrowserSpriteSymbol = factory());
}(this, (function () { 'use strict';

var SpriteSymbol = function SpriteSymbol(ref) {
  var id = ref.id;
  var viewBox = ref.viewBox;
  var content = ref.content;

  this.id = id;
  this.viewBox = viewBox;
  this.content = content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.stringify = function stringify () {
  return this.content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.toString = function toString () {
  return this.stringify();
};

SpriteSymbol.prototype.destroy = function destroy () {
    var this$1 = this;

  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });
};

/**
 * @param {string} content
 * @return {Element}
 */
var parse = function (content) {
  var hasImportNode = !!document.importNode;
  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;

  /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */
  if (hasImportNode) {
    return document.importNode(doc, true);
  }

  return doc;
};

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var index = createCommonjsModule(function (module, exports) {
(function (root, factory) {
    if (false) {
        undefined(factory);
    } else {
        module.exports = factory();
    }
}(commonjsGlobal, function () {

function isMergeableObject(val) {
    var nonNullObject = val && typeof val === 'object';

    return nonNullObject
        && Object.prototype.toString.call(val) !== '[object RegExp]'
        && Object.prototype.toString.call(val) !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (isMergeableObject(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function (key) {
        if (!isMergeableObject(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var arrayMerge = options.arrayMerge || defaultArrayMerge;

    if (array) {
        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

return deepmerge

}));
});

var namespaces_1 = createCommonjsModule(function (module, exports) {
var namespaces = {
  svg: {
    name: 'xmlns',
    uri: 'http://www.w3.org/2000/svg'
  },
  xlink: {
    name: 'xmlns:xlink',
    uri: 'http://www.w3.org/1999/xlink'
  }
};

exports.default = namespaces;
module.exports = exports.default;
});

/**
 * @param {Object} attrs
 * @return {string}
 */
var objectToAttrsString = function (attrs) {
  return Object.keys(attrs).map(function (attr) {
    var value = attrs[attr].toString().replace(/"/g, '&quot;');
    return (attr + "=\"" + value + "\"");
  }).join(' ');
};

var svg = namespaces_1.svg;
var xlink = namespaces_1.xlink;

var defaultAttrs = {};
defaultAttrs[svg.name] = svg.uri;
defaultAttrs[xlink.name] = xlink.uri;

/**
 * @param {string} [content]
 * @param {Object} [attributes]
 * @return {string}
 */
var wrapInSvgString = function (content, attributes) {
  if ( content === void 0 ) content = '';

  var attrs = index(defaultAttrs, attributes || {});
  var attrsRendered = objectToAttrsString(attrs);
  return ("<svg " + attrsRendered + ">" + content + "</svg>");
};

var BrowserSpriteSymbol = (function (SpriteSymbol$$1) {
  function BrowserSpriteSymbol () {
    SpriteSymbol$$1.apply(this, arguments);
  }

  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;
  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );
  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;

  var prototypeAccessors = { isMounted: {} };

  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * @param {Element} node
   * @return {BrowserSpriteSymbol}
   */
  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {
    return new BrowserSpriteSymbol({
      id: node.getAttribute('id'),
      viewBox: node.getAttribute('viewBox'),
      content: node.outerHTML
    });
  };

  BrowserSpriteSymbol.prototype.destroy = function destroy () {
    if (this.isMounted) {
      this.unmount();
    }
    SpriteSymbol$$1.prototype.destroy.call(this);
  };

  /**
   * @param {Element|string} target
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.mount = function mount (target) {
    if (this.isMounted) {
      return this.node;
    }

    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;
    var node = this.render();
    this.node = node;

    mountTarget.appendChild(node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.render = function render () {
    var content = this.stringify();
    return parse(wrapInSvgString(content)).childNodes[0];
  };

  BrowserSpriteSymbol.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );

  return BrowserSpriteSymbol;
}(SpriteSymbol));

return BrowserSpriteSymbol;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {(function (global, factory) {
	 true ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.BrowserSprite = factory());
}(this, (function () { 'use strict';

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};





function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var index = createCommonjsModule(function (module, exports) {
(function (root, factory) {
    if (false) {
        undefined(factory);
    } else {
        module.exports = factory();
    }
}(commonjsGlobal, function () {

function isMergeableObject(val) {
    var nonNullObject = val && typeof val === 'object';

    return nonNullObject
        && Object.prototype.toString.call(val) !== '[object RegExp]'
        && Object.prototype.toString.call(val) !== '[object Date]'
}

function emptyTarget(val) {
    return Array.isArray(val) ? [] : {}
}

function cloneIfNecessary(value, optionsArgument) {
    var clone = optionsArgument && optionsArgument.clone === true;
    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value
}

function defaultArrayMerge(target, source, optionsArgument) {
    var destination = target.slice();
    source.forEach(function(e, i) {
        if (typeof destination[i] === 'undefined') {
            destination[i] = cloneIfNecessary(e, optionsArgument);
        } else if (isMergeableObject(e)) {
            destination[i] = deepmerge(target[i], e, optionsArgument);
        } else if (target.indexOf(e) === -1) {
            destination.push(cloneIfNecessary(e, optionsArgument));
        }
    });
    return destination
}

function mergeObject(target, source, optionsArgument) {
    var destination = {};
    if (isMergeableObject(target)) {
        Object.keys(target).forEach(function (key) {
            destination[key] = cloneIfNecessary(target[key], optionsArgument);
        });
    }
    Object.keys(source).forEach(function (key) {
        if (!isMergeableObject(source[key]) || !target[key]) {
            destination[key] = cloneIfNecessary(source[key], optionsArgument);
        } else {
            destination[key] = deepmerge(target[key], source[key], optionsArgument);
        }
    });
    return destination
}

function deepmerge(target, source, optionsArgument) {
    var array = Array.isArray(source);
    var options = optionsArgument || { arrayMerge: defaultArrayMerge };
    var arrayMerge = options.arrayMerge || defaultArrayMerge;

    if (array) {
        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)
    } else {
        return mergeObject(target, source, optionsArgument)
    }
}

deepmerge.all = function deepmergeAll(array, optionsArgument) {
    if (!Array.isArray(array) || array.length < 2) {
        throw new Error('first argument should be an array with at least two elements')
    }

    // we are sure there are at least 2 values, so it is safe to have no initial value
    return array.reduce(function(prev, next) {
        return deepmerge(prev, next, optionsArgument)
    })
};

return deepmerge

}));
});

//      
// An event handler can take an optional event argument
// and should not return a value
                                          
// An array of all currently registered event handlers for a type
                                            
// A map of event types and their corresponding event handlers.
                        
                                   
  

/** Mitt: Tiny (~200b) functional event emitter / pubsub.
 *  @name mitt
 *  @returns {Mitt}
 */
function mitt(all                 ) {
	all = all || Object.create(null);

	return {
		/**
		 * Register an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to listen for, or `"*"` for all events
		 * @param  {Function} handler Function to call in response to given event
		 * @memberOf mitt
		 */
		on: function on(type        , handler              ) {
			(all[type] || (all[type] = [])).push(handler);
		},

		/**
		 * Remove an event handler for the given type.
		 *
		 * @param  {String} type	Type of event to unregister `handler` from, or `"*"`
		 * @param  {Function} handler Handler function to remove
		 * @memberOf mitt
		 */
		off: function off(type        , handler              ) {
			if (all[type]) {
				all[type].splice(all[type].indexOf(handler) >>> 0, 1);
			}
		},

		/**
		 * Invoke all handlers for the given type.
		 * If present, `"*"` handlers are invoked after type-matched handlers.
		 *
		 * @param {String} type  The event type to invoke
		 * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler
		 * @memberof mitt
		 */
		emit: function emit(type        , evt     ) {
			(all[type] || []).map(function (handler) { handler(evt); });
			(all['*'] || []).map(function (handler) { handler(type, evt); });
		}
	};
}

var namespaces_1 = createCommonjsModule(function (module, exports) {
var namespaces = {
  svg: {
    name: 'xmlns',
    uri: 'http://www.w3.org/2000/svg'
  },
  xlink: {
    name: 'xmlns:xlink',
    uri: 'http://www.w3.org/1999/xlink'
  }
};

exports.default = namespaces;
module.exports = exports.default;
});

/**
 * @param {Object} attrs
 * @return {string}
 */
var objectToAttrsString = function (attrs) {
  return Object.keys(attrs).map(function (attr) {
    var value = attrs[attr].toString().replace(/"/g, '&quot;');
    return (attr + "=\"" + value + "\"");
  }).join(' ');
};

var svg = namespaces_1.svg;
var xlink = namespaces_1.xlink;

var defaultAttrs = {};
defaultAttrs[svg.name] = svg.uri;
defaultAttrs[xlink.name] = xlink.uri;

/**
 * @param {string} [content]
 * @param {Object} [attributes]
 * @return {string}
 */
var wrapInSvgString = function (content, attributes) {
  if ( content === void 0 ) content = '';

  var attrs = index(defaultAttrs, attributes || {});
  var attrsRendered = objectToAttrsString(attrs);
  return ("<svg " + attrsRendered + ">" + content + "</svg>");
};

var svg$1 = namespaces_1.svg;
var xlink$1 = namespaces_1.xlink;

var defaultConfig = {
  attrs: ( obj = {
    style: ['position: absolute', 'width: 0', 'height: 0'].join('; ')
  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )
};
var obj;

var Sprite = function Sprite(config) {
  this.config = index(defaultConfig, config || {});
  this.symbols = [];
};

/**
 * Add new symbol. If symbol with the same id exists it will be replaced.
 * @param {SpriteSymbol} symbol
 * @return {boolean} `true` - symbol was added, `false` - replaced
 */
Sprite.prototype.add = function add (symbol) {
  var ref = this;
    var symbols = ref.symbols;
  var existing = this.find(symbol.id);

  if (existing) {
    symbols[symbols.indexOf(existing)] = symbol;
    return false;
  }

  symbols.push(symbol);
  return true;
};

/**
 * Remove symbol & destroy it
 * @param {string} id
 * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise
 */
Sprite.prototype.remove = function remove (id) {
  var ref = this;
    var symbols = ref.symbols;
  var symbol = this.find(id);

  if (symbol) {
    symbols.splice(symbols.indexOf(symbol), 1);
    symbol.destroy();
    return true;
  }

  return false;
};

/**
 * @param {string} id
 * @return {SpriteSymbol|null}
 */
Sprite.prototype.find = function find (id) {
  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;
};

/**
 * @param {string} id
 * @return {boolean}
 */
Sprite.prototype.has = function has (id) {
  return this.find(id) !== null;
};

/**
 * @return {string}
 */
Sprite.prototype.stringify = function stringify () {
  var ref = this.config;
    var attrs = ref.attrs;
  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');
  return wrapInSvgString(stringifiedSymbols, attrs);
};

/**
 * @return {string}
 */
Sprite.prototype.toString = function toString () {
  return this.stringify();
};

Sprite.prototype.destroy = function destroy () {
  this.symbols.forEach(function (s) { return s.destroy(); });
};

var SpriteSymbol = function SpriteSymbol(ref) {
  var id = ref.id;
  var viewBox = ref.viewBox;
  var content = ref.content;

  this.id = id;
  this.viewBox = viewBox;
  this.content = content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.stringify = function stringify () {
  return this.content;
};

/**
 * @return {string}
 */
SpriteSymbol.prototype.toString = function toString () {
  return this.stringify();
};

SpriteSymbol.prototype.destroy = function destroy () {
    var this$1 = this;

  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });
};

/**
 * @param {string} content
 * @return {Element}
 */
var parse = function (content) {
  var hasImportNode = !!document.importNode;
  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;

  /**
   * Fix for browser which are throwing WrongDocumentError
   * if you insert an element which is not part of the document
   * @see http://stackoverflow.com/a/7986519/4624403
   */
  if (hasImportNode) {
    return document.importNode(doc, true);
  }

  return doc;
};

var BrowserSpriteSymbol = (function (SpriteSymbol$$1) {
  function BrowserSpriteSymbol () {
    SpriteSymbol$$1.apply(this, arguments);
  }

  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;
  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );
  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;

  var prototypeAccessors = { isMounted: {} };

  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * @param {Element} node
   * @return {BrowserSpriteSymbol}
   */
  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {
    return new BrowserSpriteSymbol({
      id: node.getAttribute('id'),
      viewBox: node.getAttribute('viewBox'),
      content: node.outerHTML
    });
  };

  BrowserSpriteSymbol.prototype.destroy = function destroy () {
    if (this.isMounted) {
      this.unmount();
    }
    SpriteSymbol$$1.prototype.destroy.call(this);
  };

  /**
   * @param {Element|string} target
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.mount = function mount (target) {
    if (this.isMounted) {
      return this.node;
    }

    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;
    var node = this.render();
    this.node = node;

    mountTarget.appendChild(node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSpriteSymbol.prototype.render = function render () {
    var content = this.stringify();
    return parse(wrapInSvgString(content)).childNodes[0];
  };

  BrowserSpriteSymbol.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );

  return BrowserSpriteSymbol;
}(SpriteSymbol));

var defaultConfig$1 = {
  /**
   * Should following options be automatically configured:
   * - `syncUrlsWithBaseTag`
   * - `locationChangeAngularEmitter`
   * - `moveGradientsOutsideSymbol`
   * @type {boolean}
   */
  autoConfigure: true,

  /**
   * Default mounting selector
   * @type {string}
   */
  mountTo: 'body',

  /**
   * Fix disappearing SVG elements when <base href> exists.
   * Executes when sprite mounted.
   * @see http://stackoverflow.com/a/18265336/796152
   * @see https://github.com/everdimension/angular-svg-base-fix
   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466
   * @type {boolean}
   */
  syncUrlsWithBaseTag: false,

  /**
   * Should sprite listen custom location change event
   * @type {boolean}
   */
  listenLocationChangeEvent: true,

  /**
   * Custom window event name which should be emitted to update sprite urls
   * @type {string}
   */
  locationChangeEvent: 'locationChange',

  /**
   * Emit location change event in Angular automatically
   * @type {boolean}
   */
  locationChangeAngularEmitter: false,

  /**
   * Selector to find symbols usages when updating sprite urls
   * @type {string}
   */
  usagesToUpdate: 'use[*|href]',

  /**
   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.
   * Executes when sprite is rendered, but not mounted.
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575
   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364
   * @type {boolean}
   */
  moveGradientsOutsideSymbol: false
};

/**
 * @param {*} arrayLike
 * @return {Array}
 */
var arrayFrom = function (arrayLike) {
  return Array.prototype.slice.call(arrayLike, 0);
};

var ua = navigator.userAgent;

var browser = {
  isChrome: /chrome/i.test(ua),
  isFirefox: /firefox/i.test(ua),

  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx
  isIE: /msie/i.test(ua) || /trident/i.test(ua),
  isEdge: /edge/i.test(ua)
};

/**
 * @param {string} name
 * @param {*} data
 */
var dispatchEvent = function (name, data) {
  var event = document.createEvent('CustomEvent');
  event.initCustomEvent(name, false, false, data);
  window.dispatchEvent(event);
};

/**
 * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.
 * This trick will trigger IE to read and use any existing SVG <style> tags.
 * @see https://github.com/iconic/SVGInjector/issues/23
 * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/
 *
 * @param {Element} node DOM Element to search <style> tags in
 * @return {Array<HTMLStyleElement>}
 */
var evalStylesIEWorkaround = function (node) {
  var updatedNodes = [];

  arrayFrom(node.querySelectorAll('style'))
    .forEach(function (style) {
      style.textContent += '';
      updatedNodes.push(style);
    });

  return updatedNodes;
};

/**
 * @param {string} [url] If not provided - current URL will be used
 * @return {string}
 */
var getUrlWithoutFragment = function (url) {
  return (url || window.location.href).split('#')[0];
};

/* global angular */
/**
 * @param {string} eventName
 */
var locationChangeAngularEmitter = function (eventName) {
  angular.module('ng').run(['$rootScope', function ($rootScope) {
    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {
      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });
    });
  }]);
};

var defaultSelector = 'linearGradient, radialGradient, pattern';

/**
 * @param {Element} svg
 * @param {string} [selector]
 * @return {Element}
 */
var moveGradientsOutsideSymbol = function (svg, selector) {
  if ( selector === void 0 ) selector = defaultSelector;

  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {
    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {
      symbol.parentNode.insertBefore(node, symbol);
    });
  });
  return svg;
};

/**
 * @param {NodeList} nodes
 * @param {Function} [matcher]
 * @return {Attr[]}
 */
function selectAttributes(nodes, matcher) {
  var attrs = arrayFrom(nodes).reduce(function (acc, node) {
    if (!node.attributes) {
      return acc;
    }

    var arrayfied = arrayFrom(node.attributes);
    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;
    return acc.concat(matched);
  }, []);

  return attrs;
}

/**
 * @param {NodeList|Node} nodes
 * @param {boolean} [clone=true]
 * @return {string}
 */

var xLinkNS = namespaces_1.xlink.uri;
var xLinkAttrName = 'xlink:href';

// eslint-disable-next-line no-useless-escape
var specialUrlCharsPattern = /[{}|\\\^\[\]`"<>]/g;

function encoder(url) {
  return url.replace(specialUrlCharsPattern, function (match) {
    return ("%" + (match[0].charCodeAt(0).toString(16).toUpperCase()));
  });
}

/**
 * @param {NodeList} nodes
 * @param {string} startsWith
 * @param {string} replaceWith
 * @return {NodeList}
 */
function updateReferences(nodes, startsWith, replaceWith) {
  arrayFrom(nodes).forEach(function (node) {
    var href = node.getAttribute(xLinkAttrName);
    if (href && href.indexOf(startsWith) === 0) {
      var newUrl = href.replace(startsWith, replaceWith);
      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);
    }
  });

  return nodes;
}

/**
 * List of SVG attributes to update url() target in them
 */
var attList = [
  'clipPath',
  'colorProfile',
  'src',
  'cursor',
  'fill',
  'filter',
  'marker',
  'markerStart',
  'markerMid',
  'markerEnd',
  'mask',
  'stroke',
  'style'
];

var attSelector = attList.map(function (attr) { return ("[" + attr + "]"); }).join(',');

/**
 * Update URLs in svg image (like `fill="url(...)"`) and update referencing elements
 * @param {Element} svg
 * @param {NodeList} references
 * @param {string|RegExp} startsWith
 * @param {string} replaceWith
 * @return {void}
 *
 * @example
 * const sprite = document.querySelector('svg.sprite');
 * const usages = document.querySelectorAll('use');
 * updateUrls(sprite, usages, '#', 'prefix#');
 */
var updateUrls = function (svg, references, startsWith, replaceWith) {
  var startsWithEncoded = encoder(startsWith);
  var replaceWithEncoded = encoder(replaceWith);

  var nodes = svg.querySelectorAll(attSelector);
  var attrs = selectAttributes(nodes, function (ref) {
    var localName = ref.localName;
    var value = ref.value;

    return attList.indexOf(localName) !== -1 && value.indexOf(("url(" + startsWithEncoded)) !== -1;
  });

  attrs.forEach(function (attr) { return attr.value = attr.value.replace(startsWithEncoded, replaceWithEncoded); });
  updateReferences(references, startsWithEncoded, replaceWithEncoded);
};

/**
 * Internal emitter events
 * @enum
 * @private
 */
var Events = {
  MOUNT: 'mount',
  SYMBOL_MOUNT: 'symbol_mount'
};

var BrowserSprite = (function (Sprite$$1) {
  function BrowserSprite(cfg) {
    var this$1 = this;
    if ( cfg === void 0 ) cfg = {};

    Sprite$$1.call(this, index(defaultConfig$1, cfg));

    var emitter = mitt();
    this._emitter = emitter;
    this.node = null;

    var ref = this;
    var config = ref.config;

    if (config.autoConfigure) {
      this._autoConfigure(cfg);
    }

    if (config.syncUrlsWithBaseTag) {
      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');
      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });
    }

    var handleLocationChange = this._handleLocationChange.bind(this);
    this._handleLocationChange = handleLocationChange;

    // Provide way to update sprite urls externally via dispatching custom window event
    if (config.listenLocationChangeEvent) {
      window.addEventListener(config.locationChangeEvent, handleLocationChange);
    }

    // Emit location change event in Angular automatically
    if (config.locationChangeAngularEmitter) {
      locationChangeAngularEmitter(config.locationChangeEvent);
    }

    // After sprite mounted
    emitter.on(Events.MOUNT, function (spriteNode) {
      if (config.moveGradientsOutsideSymbol) {
        moveGradientsOutsideSymbol(spriteNode);
      }
    });

    // After symbol mounted into sprite
    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {
      if (config.moveGradientsOutsideSymbol) {
        moveGradientsOutsideSymbol(symbolNode.parentNode);
      }

      if (browser.isIE || browser.isEdge) {
        evalStylesIEWorkaround(symbolNode);
      }
    });
  }

  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;
  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );
  BrowserSprite.prototype.constructor = BrowserSprite;

  var prototypeAccessors = { isMounted: {} };

  /**
   * @return {boolean}
   */
  prototypeAccessors.isMounted.get = function () {
    return !!this.node;
  };

  /**
   * Automatically configure following options
   * - `syncUrlsWithBaseTag`
   * - `locationChangeAngularEmitter`
   * - `moveGradientsOutsideSymbol`
   * @param {Object} cfg
   * @private
   */
  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {
    var ref = this;
    var config = ref.config;

    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {
      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';
    }

    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {
      config.locationChangeAngularEmitter = 'angular' in window;
    }

    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {
      config.moveGradientsOutsideSymbol = browser.isFirefox;
    }
  };

  /**
   * @param {Event} event
   * @param {Object} event.detail
   * @param {string} event.detail.oldUrl
   * @param {string} event.detail.newUrl
   * @private
   */
  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {
    var ref = event.detail;
    var oldUrl = ref.oldUrl;
    var newUrl = ref.newUrl;
    this.updateUrls(oldUrl, newUrl);
  };

  /**
   * Add new symbol. If symbol with the same id exists it will be replaced.
   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.
   * @fires Events#SYMBOL_MOUNT
   * @param {BrowserSpriteSymbol} symbol
   * @return {boolean} `true` - symbol was added, `false` - replaced
   */
  BrowserSprite.prototype.add = function add (symbol) {
    var sprite = this;
    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);

    if (this.isMounted && isNewSymbol) {
      symbol.mount(sprite.node);
      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);
    }

    return isNewSymbol;
  };

  /**
   * Attach to existing DOM node
   * @param {string|Element} target
   * @return {Element|null} attached DOM Element. null if node to attach not found.
   */
  BrowserSprite.prototype.attach = function attach (target) {
    var this$1 = this;

    var sprite = this;

    if (sprite.isMounted) {
      return sprite.node;
    }

    /** @type Element */
    var node = typeof target === 'string' ? document.querySelector(target) : target;
    sprite.node = node;

    // Already added symbols needs to be mounted
    this.symbols.forEach(function (symbol) {
      symbol.mount(sprite.node);
      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);
    });

    // Create symbols from existing DOM nodes, add and mount them
    arrayFrom(node.querySelectorAll('symbol'))
      .forEach(function (symbolNode) {
        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);
        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding
        sprite.add(symbol);
      });

    this._emitter.emit(Events.MOUNT, node);

    return node;
  };

  BrowserSprite.prototype.destroy = function destroy () {
    var ref = this;
    var config = ref.config;
    var symbols = ref.symbols;
    var _emitter = ref._emitter;

    symbols.forEach(function (s) { return s.destroy(); });

    _emitter.off('*');
    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);

    if (this.isMounted) {
      this.unmount();
    }
  };

  /**
   * @fires Events#MOUNT
   * @param {string|Element} [target]
   * @param {boolean} [prepend=false]
   * @return {Element|null} rendered sprite node. null if mount node not found.
   */
  BrowserSprite.prototype.mount = function mount (target, prepend) {
    if ( target === void 0 ) target = this.config.mountTo;
    if ( prepend === void 0 ) prepend = false;

    var sprite = this;

    if (sprite.isMounted) {
      return sprite.node;
    }

    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;
    var node = sprite.render();
    this.node = node;

    if (prepend && mountNode.childNodes[0]) {
      mountNode.insertBefore(node, mountNode.childNodes[0]);
    } else {
      mountNode.appendChild(node);
    }

    this._emitter.emit(Events.MOUNT, node);

    return node;
  };

  /**
   * @return {Element}
   */
  BrowserSprite.prototype.render = function render () {
    return parse(this.stringify());
  };

  /**
   * Detach sprite from the DOM
   */
  BrowserSprite.prototype.unmount = function unmount () {
    this.node.parentNode.removeChild(this.node);
  };

  /**
   * Update URLs in sprite and usage elements
   * @param {string} oldUrl
   * @param {string} newUrl
   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted
   */
  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {
    if (!this.isMounted) {
      return false;
    }

    var usages = document.querySelectorAll(this.config.usagesToUpdate);

    updateUrls(
      this.node,
      usages,
      ((getUrlWithoutFragment(oldUrl)) + "#"),
      ((getUrlWithoutFragment(newUrl)) + "#")
    );

    return true;
  };

  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );

  return BrowserSprite;
}(Sprite));

var ready$1 = createCommonjsModule(function (module) {
/*!
  * domready (c) Dustin Diaz 2014 - License MIT
  */
!function (name, definition) {

  { module.exports = definition(); }

}('domready', function () {

  var fns = [], listener
    , doc = document
    , hack = doc.documentElement.doScroll
    , domContentLoaded = 'DOMContentLoaded'
    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);


  if (!loaded)
  { doc.addEventListener(domContentLoaded, listener = function () {
    doc.removeEventListener(domContentLoaded, listener);
    loaded = 1;
    while (listener = fns.shift()) { listener(); }
  }); }

  return function (fn) {
    loaded ? setTimeout(fn, 0) : fns.push(fn);
  }

});
});

var spriteNodeId = '__SVG_SPRITE_NODE__';
var spriteGlobalVarName = '__SVG_SPRITE__';
var isSpriteExists = !!window[spriteGlobalVarName];

// eslint-disable-next-line import/no-mutable-exports
var sprite;

if (isSpriteExists) {
  sprite = window[spriteGlobalVarName];
} else {
  sprite = new BrowserSprite({ attrs: { id: spriteNodeId } });
  window[spriteGlobalVarName] = sprite;
}

var loadSprite = function () {
  /**
   * Check for page already contains sprite node
   * If found - attach to and reuse it's content
   * If not - render and mount the new sprite
   */
  var existing = document.getElementById(spriteNodeId);

  if (existing) {
    sprite.attach(existing);
  } else {
    sprite.mount(document.body, true);
  }
};

if (document.body) {
  loadSprite();
} else {
  ready$1(loadSprite);
}

var sprite$1 = sprite;

return sprite$1;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.capitalize = capitalize;
// ----------------------------------------------------------------------------
// capitalize provided string
// ----------------------------------------------------------------------------

function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

// ----------------------------------------------------------------------------
// Add isA function and register your class name
// ----------------------------------------------------------------------------

function isA(publicAPI) {
  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  if (!model.isA) {
    model.isA = [];
  }

  if (name) {
    model.isA.push(name);
  }

  if (!publicAPI.isA) {
    publicAPI.isA = function (className) {
      return model.isA.indexOf(className) !== -1;
    };
  }
}

// ----------------------------------------------------------------------------
// Basic setter
// ----------------------------------------------------------------------------

function set(publicAPI) {
  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  names.forEach(function (name) {
    publicAPI['set' + capitalize(name)] = function (value) {
      model[name] = value;
    };
  });
}

// ----------------------------------------------------------------------------
// Basic getter
// ----------------------------------------------------------------------------

function get(publicAPI) {
  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  names.forEach(function (name) {
    publicAPI['get' + capitalize(name)] = function () {
      return model[name];
    };
  });
}

// ----------------------------------------------------------------------------
// Add destroy function
// ----------------------------------------------------------------------------

function destroy(publicAPI) {
  var model = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var previousDestroy = publicAPI.destroy;

  if (!model.subscriptions) {
    model.subscriptions = [];
  }

  publicAPI.destroy = function () {
    if (previousDestroy) {
      previousDestroy();
    }
    while (model.subscriptions && model.subscriptions.length) {
      model.subscriptions.pop().unsubscribe();
    }
    Object.keys(model).forEach(function (field) {
      delete model[field];
    });

    // Flag the instance beeing deleted
    model.deleted = true;
  };
}

// ----------------------------------------------------------------------------
// Event handling: onXXX(callback), fireXXX(args...)
// ----------------------------------------------------------------------------

function event(publicAPI, model, eventName) {
  var asynchrounous = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  var callbacks = [];
  var previousDestroy = publicAPI.destroy;

  function off(index) {
    callbacks[index] = null;
  }

  function on(index) {
    function unsubscribe() {
      off(index);
    }
    return Object.freeze({ unsubscribe: unsubscribe });
  }

  publicAPI['fire' + capitalize(eventName)] = function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (model.deleted) {
      console.log('instance deleted - can not call any method');
      return;
    }

    function processCallbacks() {
      callbacks.forEach(function (callback) {
        if (callback) {
          try {
            callback.apply(publicAPI, args);
          } catch (errObj) {
            console.log('Error event:', eventName, errObj);
          }
        }
      });
    }

    if (asynchrounous) {
      setImmediate(processCallbacks);
    } else {
      processCallbacks();
    }
  };

  publicAPI['on' + capitalize(eventName)] = function (callback) {
    if (model.deleted) {
      console.log('instance deleted - can not call any method');
      return null;
    }

    var index = callbacks.length;
    callbacks.push(callback);
    return on(index);
  };

  publicAPI.destroy = function () {
    previousDestroy();
    callbacks.forEach(function (el, index) {
      return off(index);
    });
  };
}

// ----------------------------------------------------------------------------
// Fetch handling: setXXXFetchCallback / return { addRequest }
// ----------------------------------------------------------------------------
function fetch(publicAPI, model, name) {
  var fetchCallback = null;
  var requestQueue = [];

  publicAPI['set' + capitalize(name) + 'FetchCallback'] = function (fetchMethod) {
    if (requestQueue.length) {
      fetchMethod(requestQueue);
    }
    fetchCallback = fetchMethod;
  };

  return {
    addRequest: function addRequest(request) {
      requestQueue.push(request);
      if (fetchCallback) {
        fetchCallback(requestQueue);
      }
    },
    resetRequests: function resetRequests(requestList) {
      while (requestQueue.length) {
        requestQueue.pop();
      }
      if (requestList) {
        // Rebuild request list
        requestList.forEach(function (req) {
          requestQueue.push(req);
        });
        // Also trigger a request
        if (fetchCallback) {
          fetchCallback(requestQueue);
        }
      }
    }
  };
}

// ----------------------------------------------------------------------------
// Dynamic array handler
//   - add${xxx}(item)
//   - remove${xxx}(item)
//   - get${xxx}() => [items...]
//   - removeAll${xxx}()
// ----------------------------------------------------------------------------

function dynamicArray(publicAPI, model, name) {
  if (!model[name]) {
    model[name] = [];
  }

  publicAPI['set' + capitalize(name)] = function (items) {
    model[name] = [].concat(items);
  };

  publicAPI['add' + capitalize(name)] = function (item) {
    model[name].push(item);
  };

  publicAPI['remove' + capitalize(name)] = function (item) {
    var index = model[name].indexOf(item);
    model[name].splice(index, 1);
  };

  publicAPI['get' + capitalize(name)] = function () {
    return model[name];
  };

  publicAPI['removeAll' + capitalize(name)] = function () {
    model[name] = [];
    return model[name];
  };
}

// ----------------------------------------------------------------------------
// Chain function calls
// ----------------------------------------------------------------------------

function chain() {
  for (var _len2 = arguments.length, fn = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    fn[_key2] = arguments[_key2];
  }

  return function () {
    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return fn.filter(function (i) {
      return !!i;
    }).forEach(function (i) {
      return i.apply(undefined, args);
    });
  };
}

// ----------------------------------------------------------------------------
// Data Subscription
//   => dataHandler = {
//         // Set of default values you would expect in your metadata
//         defaultMetadata: {
//            numberOfBins: 32,
//         },
//
//         // Method used internally to store the data
//         set(model, data) { return !!sameAsBefore; }, // Return true if nothing has changed
//
//         // Method used internally to extract the data from the cache based on a given subscription
//         // This should return null/undefined if the data is not available (yet).
//         get(model, request, dataChanged) {},
//      }
// ----------------------------------------------------------------------------
// Methods generated with dataName = 'mutualInformation'
// => publicAPI
//     - onMutualInformationSubscriptionChange(callback) => subscription[unsubscribe() + update(variables = [], metadata = {})]
//     - fireMutualInformationSubscriptionChange(request)
//     - subscribeToMutualInformation(onDataReady, variables = [], metadata = {})
//     - setMutualInformation(data)
//     - hasMutualInformation(request, variable)
//     - destroy()
// ----------------------------------------------------------------------------

function dataSubscriber(publicAPI, model, dataName, dataHandler) {
  // Private members
  var dataSubscriptions = [];
  var forceFlushRequests = 0;
  var eventName = dataName + 'SubscriptionChange';
  var fireMethodName = 'fire' + capitalize(eventName);
  var dataContainerName = dataName + '_storage';

  // Add data container to model if not exist
  if (!model[dataContainerName]) {
    model[dataContainerName] = {};
  }

  // Add event handling methods
  event(publicAPI, model, eventName);

  function off() {
    var count = dataSubscriptions.length;
    while (count) {
      count -= 1;
      dataSubscriptions[count] = null;
    }
  }

  // Internal function that will notify any subscriber with its data in a synchronous manner
  function flushDataToListener(dataListener, dataChanged) {
    try {
      if (dataListener) {
        var dataToForward = dataHandler.get(model[dataContainerName], dataListener.request, dataChanged);
        if (dataToForward && (JSON.stringify(dataToForward) !== dataListener.request.lastPush || dataListener.request.metadata.forceFlush)) {
          dataListener.request.lastPush = JSON.stringify(dataToForward);
          dataListener.onDataReady(dataToForward);
        }
      }
    } catch (err) {
      console.log('flush ' + dataName + ' error caught:', err);
    }
  }

  // onDataReady function will be called each time the setXXX method will be called and
  // when the actual subscription correspond to the data that has been set.
  // This is performed synchronously.
  // The default behavior is to avoid pushing data to subscribers if nothing has changed
  // since the last push.  However, by providing "forceFlush: true" in the metadata,
  // subscribers can indicate that they want data pushed to them even if there has been
  // no change since the last push.
  publicAPI['subscribeTo' + capitalize(dataName)] = function (onDataReady) {
    var variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var metadata = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    var id = dataSubscriptions.length;
    var request = {
      id: id,
      variables: variables,
      metadata: Object.assign({}, dataHandler.defaultMetadata, metadata)
    };
    if (request.metadata.forceFlush) {
      forceFlushRequests += 1;
    }
    var dataListener = { onDataReady: onDataReady, request: request };
    dataSubscriptions.push(dataListener);
    publicAPI[fireMethodName](request);
    flushDataToListener(dataListener, null);
    return {
      unsubscribe: function unsubscribe() {
        request.action = 'unsubscribe';
        if (request.metadata.forceFlush) {
          forceFlushRequests -= 1;
        }
        publicAPI[fireMethodName](request);
        dataSubscriptions[id] = null;
      },
      update: function update(vars, meta) {
        request.variables = [].concat(vars);
        if (meta && meta.forceFlush !== request.metadata.forceFlush) {
          forceFlushRequests += meta.forceFlush ? 1 : -1;
        }
        request.metadata = Object.assign({}, request.metadata, meta);
        publicAPI[fireMethodName](request);
        flushDataToListener(dataListener, null);
      }
    };
  };

  // Method use to store data
  publicAPI['set' + capitalize(dataName)] = function (data) {
    // Process all subscription to see if we can trigger a notification
    if (!dataHandler.set(model[dataContainerName], data) || forceFlushRequests > 0) {
      dataSubscriptions.forEach(function (dataListener) {
        return flushDataToListener(dataListener, data);
      });
    }
  };

  // Retrieve data for a single variable from our cache, given current request.
  // Call from inside on{dataName}SubscriptionChange to find out if
  // cache needs to be updated.
  publicAPI['has' + capitalize(dataName)] = function (inRequest, variable) {
    try {
      if (inRequest) {
        var request = Object.assign({}, inRequest, { variables: [variable] });
        var dataToForward = dataHandler.get(model[dataContainerName], request, null);
        if (dataToForward) {
          return true;
        }
      }
    } catch (err) {
      console.log('has ' + dataName + ' error caught:', err);
    }
    return false;
  };

  publicAPI.destroy = chain(off, publicAPI.destroy);
}

// ----------------------------------------------------------------------------
// newInstance
// ----------------------------------------------------------------------------

function newInstance(extend) {
  return function () {
    var initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    var model = {};
    var publicAPI = {};
    extend(publicAPI, model, initialValues);
    return Object.freeze(publicAPI);
  };
}

exports.default = {
  chain: chain,
  dataSubscriber: dataSubscriber,
  destroy: destroy,
  dynamicArray: dynamicArray,
  event: event,
  fetch: fetch,
  get: get,
  isA: isA,
  newInstance: newInstance,
  set: set
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11).setImmediate))

/***/ }),
/* 4 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 5 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			var styleTarget = fn.call(this, selector);
			// Special case to return head of iframe instead of iframe itself
			if (styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[selector] = styleTarget;
		}
		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(16);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = undefined;
exports.affine = affine;
exports.perfRound = perfRound;
exports.dataToScreen = dataToScreen;
exports.screenToData = screenToData;
exports.toColorArray = toColorArray;
exports.extend = extend;

var _d = __webpack_require__(9);

var _d2 = _interopRequireDefault(_d);

var _ParallelCoordinates = __webpack_require__(24);

var _ParallelCoordinates2 = _interopRequireDefault(_ParallelCoordinates);

var _AnnotationBuilder = __webpack_require__(26);

var _AnnotationBuilder2 = _interopRequireDefault(_AnnotationBuilder);

var _AxesManager = __webpack_require__(28);

var _AxesManager2 = _interopRequireDefault(_AxesManager);

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

var _body = __webpack_require__(32);

var _body2 = _interopRequireDefault(_body);

var _ParallelCoordsIconSmall = __webpack_require__(33);

var _ParallelCoordsIconSmall2 = _interopRequireDefault(_ParallelCoordsIconSmall);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /* global document */

// import axisControlSvg from './AxisControl-svg.html';


// ----------------------------------------------------------------------------
// Global
// ----------------------------------------------------------------------------

function affine(inMin, val, inMax, outMin, outMax) {
  return (val - inMin) / (inMax - inMin) * (outMax - outMin) + outMin;
}

function perfRound(val) {
  /* eslint-disable no-bitwise */
  return 0.5 + val | 0;
  /* eslint-enable no-bitwise */
}

function dataToScreen(model, dataY, axis) {
  return perfRound(!axis.isUpsideDown() ? affine(axis.range[0], dataY, axis.range[1], model.canvasArea.height - model.borderOffsetBottom, model.borderOffsetTop) : affine(axis.range[0], dataY, axis.range[1], model.borderOffsetTop, model.canvasArea.height - model.borderOffsetBottom));
}

function screenToData(model, screenY, axis) {
  return !axis.isUpsideDown() ? affine(model.canvasArea.height - model.borderOffsetBottom, screenY, model.borderOffsetTop, axis.range[0], axis.range[1]) : affine(model.borderOffsetTop, screenY, model.canvasArea.height - model.borderOffsetBottom, axis.range[0], axis.range[1]);
}

function toColorArray(colorString) {
  return [Number.parseInt(colorString.slice(1, 3), 16), Number.parseInt(colorString.slice(3, 5), 16), Number.parseInt(colorString.slice(5, 7), 16)];
}

// ----------------------------------------------------------------------------
// Parallel Coordinate
// ----------------------------------------------------------------------------

function parallelCoordinate(publicAPI, model) {
  // Private internal
  var scoreToColor = [];
  var lastAnnotationPushed = null;

  function updateSizeInformation() {
    if (!model.canvas) {
      return;
    }
    model.canvasArea = {
      width: model.canvas.width,
      height: model.canvas.height
    };
    model.drawableArea = {
      width: model.canvasArea.width - (model.borderOffsetLeft + model.borderOffsetRight),
      height: model.canvasArea.height - (model.borderOffsetTop + model.borderOffsetBottom)
    };
  }

  // -======================================================
  model.canvas = document.createElement('canvas');
  model.canvas.style.position = 'absolute';
  model.canvas.style.top = 0;
  model.canvas.style.right = 0;
  model.canvas.style.bottom = 0;
  model.canvas.style.left = 0;
  model.ctx = model.canvas.getContext('2d');

  model.fgCanvas = document.createElement('canvas');
  model.fgCtx = model.fgCanvas.getContext('2d');
  model.bgCanvas = document.createElement('canvas');
  model.bgCtx = model.bgCanvas.getContext('2d');

  model.axes = new _AxesManager2.default();

  // Local cache of the selection data
  model.selectionData = null;
  model.visibleScores = [0, 1, 2];

  function drawSelectionData(score) {
    if (model.axes.selection && model.visibleScores) {
      return model.visibleScores.indexOf(score) !== -1;
    }
    return true;
  }

  function drawSelectionBars(selectionBarModel) {
    var resizeTargetSize = 6;
    var svg = _d2.default.select(model.container).select('svg');
    var selBarGroup = svg.select('g.selection-bars');

    // Make the selection bars
    var selectionBarNodes = selBarGroup.selectAll('rect.selection-bars').data(selectionBarModel);

    selectionBarNodes.enter().append('rect').classed('selection-bars', true).classed(_ParallelCoordinates2.default.selectionBars, true);

    selectionBarNodes.exit().remove();

    selBarGroup.selectAll('rect.selection-bars').classed(_ParallelCoordinates2.default.controlItem, true).style('fill', function (d, i) {
      return d.color;
    }).attr('width', model.selectionBarWidth).attr('height', function (d, i) {
      var barHeight = d.screenRangeY[1] - d.screenRangeY[0];
      if (barHeight < 0) barHeight = -barHeight;
      return barHeight;
    }).attr('transform', function (d, i) {
      var startPoint = d.screenRangeY[0] > d.screenRangeY[1] ? d.screenRangeY[1] : d.screenRangeY[0];
      return 'translate(' + (d.screenX - model.selectionBarWidth / 2) + ', ' + startPoint + ')';
    }).on('mousemove', function inner(d, i) {
      var moveCoords = _d2.default.mouse(svg.node());
      var resizeHandle = Math.min(resizeTargetSize, Math.floor(Math.abs(d.screenRangeY[1] - d.screenRangeY[0]) / 3));
      if (Math.abs(d.screenRangeY[0] - moveCoords[1]) <= resizeHandle || Math.abs(d.screenRangeY[1] - moveCoords[1]) <= resizeHandle) {
        _d2.default.select(this).style('cursor', 'ns-resize');
      } else {
        _d2.default.select(this).style('cursor', null);
      }
    }).on('mouseout', function inner(d, i) {
      _d2.default.select(this).style('cursor', null);
    }).on('mousedown', function inner(d, i) {
      var _this = this;

      _d2.default.event.preventDefault();
      var downCoords = _d2.default.mouse(svg.node());
      // resize within X pixels of the ends, or 1/3 of the bar size, whichever is less.
      var resizeHandle = Math.min(resizeTargetSize, Math.floor(Math.abs(d.screenRangeY[1] - d.screenRangeY[0]) / 3));
      var resizeIndex = -1;
      var resizeOffset = 0;
      if (Math.abs(d.screenRangeY[0] - downCoords[1]) <= resizeHandle) {
        resizeIndex = 0;
        resizeOffset = d.screenRangeY[0] - downCoords[1];
      } else if (Math.abs(d.screenRangeY[1] - downCoords[1]) <= resizeHandle) {
        resizeIndex = 1;
        resizeOffset = d.screenRangeY[1] - downCoords[1];
      }

      svg.on('mousemove', function (md, mi) {
        var moveCoords = _d2.default.mouse(svg.node());
        var deltaYScreen = moveCoords[1] - downCoords[1];
        if (resizeIndex >= 0) {
          d.screenRangeY[resizeIndex] = moveCoords[1] + resizeOffset;
          deltaYScreen = 0;
        }
        var startPoint = d.screenRangeY[0] > d.screenRangeY[1] ? d.screenRangeY[1] : d.screenRangeY[0];
        var barHeight = d.screenRangeY[1] - d.screenRangeY[0];
        if (barHeight < 0) barHeight = -barHeight;
        _d2.default.select(_this).attr('transform', 'translate(' + (d.screenX - model.selectionBarWidth / 2) + ', ' + (startPoint + deltaYScreen) + ')').attr('height', barHeight);
      });

      svg.on('mouseup', function (md, mi) {
        var upCoords = _d2.default.mouse(svg.node());
        var deltaYScreen = resizeIndex === -1 ? upCoords[1] - downCoords[1] : 0;
        var startPoint = d.screenRangeY[0] > d.screenRangeY[1] ? d.screenRangeY[1] : d.screenRangeY[0];
        var barHeight = d.screenRangeY[1] - d.screenRangeY[0];
        if (barHeight < 0) barHeight = -barHeight;
        var newStart = startPoint + deltaYScreen;
        var newEnd = newStart + barHeight;
        svg.on('mousemove', null);
        svg.on('mouseup', null);

        var axis = model.axes.getAxis(d.index);
        // Note: if bar is moved entirely outside the current range, it will be deleted.
        model.axes.updateSelection(d.index, d.selectionIndex, screenToData(model, newStart, axis), screenToData(model, newEnd, axis));
      });
    });
  }

  function drawAxisControls(controlsDataModel) {
    // Manipulate the control widgets svg DOM
    var svgGr = _d2.default.select(model.container).select('svg').select('g.axis-control-elements');

    var axisControlNodes = svgGr.selectAll('g.axis-control-element').data(controlsDataModel);

    var axisControls = axisControlNodes.enter().append('g').classed('axis-control-element', true).classed(_ParallelCoordinates2.default.axisControlElements, true)
    // Can't use .html on svg without polyfill: https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md#html
    // fails in IE11. Replace by explicit DOM manipulation.
    // .html(axisControlSvg);
    .append('g').classed('axis-controls-group-container', true).attr('width', 108).attr('height', 50).attr('viewBox', '0 0 108 50').append('g').classed('axis-controls-group', true);

    axisControls.append('rect').classed('center-rect', true).attr('x', 28).attr('y', 1).attr('width', 52).attr('height', 48);
    axisControls.append('rect').classed('right-rect', true).attr('x', 82).attr('y', 1).attr('width', 25).attr('height', 48);
    axisControls.append('rect').classed('left-rect', true).attr('x', 1).attr('y', 1).attr('width', 25).attr('height', 48);
    axisControls.append('polygon').classed('top', true).attr('points', '54 1 78 23 30 23 ');
    axisControls.append('polygon').classed('right', true).attr('points', '94 14 118 36 70 36 ').attr('transform', 'translate(94.0, 25.0) rotate(-270.0) translate(-94.0, -25.0) ');
    axisControls.append('polygon').classed('left', true).attr('points', '14 14 38 36 -10 36 ').attr('transform', 'translate(14.0, 25.0) scale(-1, 1) rotate(-270.0) translate(-14.0, -25.0) ');
    axisControls.append('polygon').classed('bottom', true).attr('points', '54 27 78 49 30 49 ').attr('transform', 'translate(54.0, 38.0) scale(1, -1) translate(-54.0, -38.0) ');

    axisControlNodes.exit().remove();

    var scale = 0.5;
    axisControlNodes.classed(_ParallelCoordinates2.default.upsideDown, function (d, i) {
      return !d.orient;
    }).classed(_ParallelCoordinates2.default.rightsideUp, function (d, i) {
      return d.orient;
    }).attr('transform', function inner(d, i) {
      var elt = _d2.default.select(this).select('g.axis-controls-group-container');
      var tx = d.centerX - elt.attr('width') * scale / 2;
      var ty = d.centerY - elt.attr('height') * scale / 2;
      return 'translate(' + tx + ', ' + ty + ') scale(' + scale + ')';
    }).on('click', function inner(d, i) {
      var cc = _d2.default.mouse(this);
      var elt = _d2.default.select(this).select('g.axis-controls-group-container');
      var ratio = cc[0] / elt.attr('width');
      if (ratio < 0.28) {
        // left arrow click
        model.axes.swapAxes(i - 1, i);
      } else if (ratio < 0.73) {
        // up/down click
        model.axes.toggleOrientation(i);
        publicAPI.render();
      } else {
        // right arrow click
        model.axes.swapAxes(i, i + 1);
      }
    }).selectAll('.axis-controls-group-container').classed(_ParallelCoordinates2.default.axisControlsGroupContainer, true);
  }

  function drawAxisLabels(labelDataModel) {
    var ypos = 15;
    var glyphRegion = 22;
    var glyphPadding = 3;
    var svg = _d2.default.select(model.container).select('svg');

    if (model.provider && model.provider.isA('LegendProvider')) {
      // Add legend key
      labelDataModel.forEach(function (entry) {
        entry.legend = model.provider.getLegend(entry.name);
      });
      var glyphSize = glyphRegion - glyphPadding - glyphPadding;
      if (glyphSize % 2 !== 0) {
        glyphSize += 1;
      }

      var glyphGroup = svg.selectAll('g.glyphs').data(labelDataModel, function (d) {
        return d ? d.name : 'none';
      });

      glyphGroup.exit().remove();

      var glyphEnter = glyphGroup.enter().append('g').classed('glyphs', true);

      // Create nested structure
      var svgGroup = glyphEnter.append('svg');
      svgGroup.append('use');

      // add a tooltip
      glyphEnter.append('title').text(function (d) {
        return d.name;
      });

      glyphGroup.attr('transform', function (d, i) {
        return 'translate(' + (d.centerX - glyphSize * 0.5) + ', ' + glyphPadding + ')';
      }).on('click', function (d, i) {
        if (d.annotated) {
          model.axes.clearSelection(i);
        }
      });

      glyphEnter.each(function applyLegendStyle(d, i) {
        _d2.default.select(this).select('svg').attr('fill', d.legend.color).attr('stroke', 'black').attr('width', glyphSize).attr('height', glyphSize).style('color', d.legend.color) // Firefox SVG use color bug workaround fix
        .classed(_ParallelCoordinates2.default.clickable, d.annotated).select('use').classed(_ParallelCoordinates2.default.colorToFill, true) // Firefox SVG use color bug workaround fix
        .classed(_ParallelCoordinates2.default.blackStroke, true).attr('xlink:href', d.legend.shape);
      });

      // Augment the legend glyphs with extra DOM for annotated axes
      var indicatorGroup = svg.select('g.axis-annotation-indicators');
      var indicatorNodes = indicatorGroup.selectAll('rect.axis-annotation-indicators').data(labelDataModel);

      indicatorNodes.enter().append('rect').classed('axis-annotation-indicators', true).classed(_ParallelCoordinates2.default.axisAnnotationIndicators, true);

      indicatorNodes.exit().remove();

      indicatorGroup.selectAll('rect.axis-annotation-indicators').attr('width', glyphSize + 3).attr('height', glyphSize + 3).attr('transform', function (d, i) {
        return 'translate(' + (d.centerX - (glyphSize * 0.5 + 1)) + ', ' + (glyphPadding - 1.5) + ')';
      }).classed(_ParallelCoordinates2.default.axisAnnotated, function (d, i) {
        return d.annotated;
      });
    } else {
      // Now manage the svg dom for the axis labels
      var axisLabelNodes = svg.selectAll('text.axis-labels').data(labelDataModel);

      axisLabelNodes.enter().append('text').classed('axis-labels', true).classed(_ParallelCoordinates2.default.axisLabels, true);

      axisLabelNodes.exit().remove();

      svg.selectAll('text.axis-labels').text(function (d, i) {
        return d.name;
      }).classed(_ParallelCoordinates2.default.annotatedAxisText, function (d, i) {
        return d.annotated;
      }).on('click', function (d, i) {
        model.axes.clearSelection(i);
      }).attr('text-anchor', function (d, i) {
        return d.align;
      }).attr('transform', function (d, i) {
        return 'translate(' + d.centerX + ', ' + ypos + ')';
      });
    }
  }

  function drawAxisTicks(tickDataModel) {
    // Manage the svg dom for the axis ticks
    var svg = _d2.default.select(model.container).select('svg');
    var ticksGroup = svg.select('g.axis-ticks');
    var axisTickNodes = ticksGroup.selectAll('text.axis-ticks').data(tickDataModel);

    axisTickNodes.enter().append('text').classed('axis-ticks', true).classed(_ParallelCoordinates2.default.axisTicks, true);

    axisTickNodes.exit().remove();

    var formatter = _d2.default.format('.3s');
    ticksGroup.selectAll('text.axis-ticks').text(function (d, i) {
      return formatter(d.value);
    }).attr('text-anchor', function (d, i) {
      return d.align;
    }).attr('transform', function (d, i) {
      return 'translate(' + d.xpos + ', ' + d.ypos + ')';
    });
  }

  function axisMouseDragHandler(data, index) {
    var svg = _d2.default.select(model.container).select('svg');
    var coords = _d2.default.mouse(model.container);
    var pendingSelection = svg.select('rect.axis-selection-pending');
    if (pendingSelection) {
      var rectHeight = coords[1] - pendingSelection.attr('data-initial-y');
      if (rectHeight >= 0) {
        pendingSelection.attr('height', rectHeight);
      } else {
        pendingSelection.attr('transform', 'translate(' + pendingSelection.attr('data-initial-x') + ', ' + coords[1] + ')').attr('height', -rectHeight);
      }
    }
  }

  function drawAxes(axesCenters) {
    if (axesCenters.length <= 1) {
      // let's not do anything if we don't have enough axes for rendering.
      return;
    }

    var svg = _d2.default.select(model.container).select('svg');
    var axisLineGroup = svg.select('g.axis-lines');

    // Now manage the svg dom
    var axisLineNodes = axisLineGroup.selectAll('rect.axis-lines').data(axesCenters);

    axisLineNodes.enter().append('rect').classed('axis-lines', true).classed(_ParallelCoordinates2.default.axisLines, true);

    axisLineNodes.exit().remove();

    axisLineGroup.selectAll('rect.axis-lines').classed(_ParallelCoordinates2.default.controlItem, true).attr('height', model.canvasArea.height - model.borderOffsetBottom - model.borderOffsetTop).attr('width', model.axisWidth).attr('transform', function (d, i) {
      return 'translate(' + (d - model.axisWidth / 2) + ', ' + model.borderOffsetTop + ')';
    }).on('mousedown', function (d, i) {
      _d2.default.event.preventDefault();
      var coords = _d2.default.mouse(model.container);
      var initialY = coords[1];
      var initialX = d - model.selectionBarWidth / 2;
      var prect = svg.append('rect');
      prect.classed('axis-selection-pending', true).classed(_ParallelCoordinates2.default.selectionBars, true).attr('height', 0.5).attr('width', model.selectionBarWidth).attr('transform', 'translate(' + initialX + ', ' + initialY + ')').attr('data-initial-x', initialX).attr('data-initial-y', initialY).attr('data-index', i);

      svg.on('mousemove', axisMouseDragHandler);
      svg.on('mouseup', function (data, index) {
        var finalY = _d2.default.mouse(model.container)[1];
        svg.select('rect.axis-selection-pending').remove();
        svg.on('mousemove', null);
        svg.on('mouseup', null);

        var axis = model.axes.getAxis(i);
        model.axes.addSelection(i, screenToData(model, initialY, axis), screenToData(model, finalY, axis));
      });
    });
  }

  function drawPolygons(axesCenters, gCtx, idxOne, idxTwo, histogram, colors) {
    if (!histogram) {
      return;
    }
    var axisOne = model.axes.getAxis(idxOne);
    var axisTwo = model.axes.getAxis(idxTwo);
    var xleft = axesCenters[idxOne];
    var xright = axesCenters[idxTwo];
    var bin = null;
    var opacity = 0.0;
    var yleft1 = 0.0;
    var yleft2 = 0.0;
    var yright1 = 0.0;
    var yright2 = 0.0;
    var yLeftMin = 0;
    var yLeftMax = 0;
    var yRightMin = 0;
    var yRightMax = 0;

    // Ensure proper range for X
    var deltaOne = (axisOne.range[1] - axisOne.range[0]) / (histogram.numberOfBins || model.numberOfBins);
    var deltaTwo = (axisTwo.range[1] - axisTwo.range[0]) / (histogram.numberOfBins || model.numberOfBins);

    for (var i = 0; i < histogram.bins.length; ++i) {
      bin = histogram.bins[i];
      opacity = affine(0, bin.count, model.maxBinCountForOpacityCalculation, 0.0, 1.0);
      yleft1 = dataToScreen(model, bin.x, axisOne);
      yleft2 = dataToScreen(model, bin.x + deltaOne, axisOne);
      yright1 = dataToScreen(model, bin.y, axisTwo);
      yright2 = dataToScreen(model, bin.y + deltaTwo, axisTwo);
      yLeftMin = 0;
      yLeftMax = 0;
      yRightMin = 0;
      yRightMax = 0;

      if (yleft1 <= yleft2) {
        yLeftMin = yleft1;
        yLeftMax = yleft2;
      } else {
        yLeftMin = yleft2;
        yLeftMax = yleft1;
      }

      if (yright1 <= yright2) {
        yRightMin = yright1;
        yRightMax = yright2;
      } else {
        yRightMin = yright2;
        yRightMax = yright1;
      }

      gCtx.beginPath();
      gCtx.moveTo(xleft, yLeftMin);
      gCtx.lineTo(xleft, yLeftMax);
      gCtx.lineTo(xright, yRightMax);
      gCtx.lineTo(xright, yRightMin);
      gCtx.closePath();
      gCtx.fillStyle = 'rgba(' + colors[0] + ',' + colors[1] + ',' + colors[2] + ',' + opacity + ')';
      gCtx.fill();
    }
  }

  publicAPI.render = function () {
    if (!model.allBgHistogram2dData || !model.axes.canRender() || !model.container || model.containerHidden === true) {
      _d2.default.select(model.container).select('svg.parallel-coords-overlay').classed(_ParallelCoordinates2.default.hidden, true);
      _d2.default.select(model.container).select('canvas').classed(_ParallelCoordinates2.default.hidden, true);
      _d2.default.select(model.container).select('div.parallel-coords-placeholder').classed(_ParallelCoordinates2.default.hidden, false);
      return;
    }

    _d2.default.select(model.container).select('svg.parallel-coords-overlay').classed(_ParallelCoordinates2.default.hidden, false);
    _d2.default.select(model.container).select('canvas').classed(_ParallelCoordinates2.default.hidden, false);
    _d2.default.select(model.container).select('div.parallel-coords-placeholder').classed(_ParallelCoordinates2.default.hidden, true);

    model.ctx.globalAlpha = 1.0;

    // Update canvas area and drawable info
    updateSizeInformation();

    model.hoverIndicatorHeight = model.drawableArea.height / model.numberOfBins;

    model.fgCanvas.width = model.canvas.width;
    model.fgCanvas.height = model.canvas.height;
    model.bgCanvas.width = model.canvas.width;
    model.bgCanvas.height = model.canvas.height;

    var svg = _d2.default.select(model.container).select('svg');
    svg.attr('width', model.canvas.width).attr('height', model.canvas.height).classed('parallel-coords-overlay', true).classed(_ParallelCoordinates2.default.parallelCoordsOverlay, true);

    if (_d2.default.select(model.container).selectAll('g').empty()) {
      // Have not added groups yet, do so now.  Order matters.
      svg.append('g').classed('axis-lines', true);
      svg.append('g').classed('selection-bars', true);
      svg.append('g').classed('hover-bins', true);
      svg.append('g').classed('axis-annotation-indicators', true);
      svg.append('g').classed('axis-control-elements', true);
      svg.append('g').classed('axis-ticks', true);
      svg.append('g').classed('glyphs', true);
    }

    model.ctx.clearRect(0, 0, model.canvasArea.width, model.canvasArea.height);
    model.fgCtx.clearRect(0, 0, model.canvasArea.width, model.canvasArea.height);
    model.bgCtx.clearRect(0, 0, model.canvasArea.width, model.canvasArea.height);

    // First lay down the "context" polygons
    model.maxBinCountForOpacityCalculation = model.allBgHistogram2dData.maxCount;

    var nbPolyDraw = model.axes.getNumberOf2DHistogram();
    var axesCenters = model.axes.extractAxesCenters(model);
    if (!model.showOnlySelection) {
      for (var j = 0; j < nbPolyDraw; ++j) {
        var axisOne = model.axes.getAxis(j);
        var axisTwo = model.axes.getAxis(j + 1);
        var histo2D = model.allBgHistogram2dData[axisOne.name] ? model.allBgHistogram2dData[axisOne.name][axisTwo.name] : null;
        drawPolygons(axesCenters, model.bgCtx, j, j + 1, histo2D, model.polygonColors);
      }

      model.ctx.globalAlpha = model.polygonOpacityAdjustment;
      model.ctx.drawImage(model.bgCanvas, 0, 0, model.canvasArea.width, model.canvasArea.height, 0, 0, model.canvasArea.width, model.canvasArea.height);
    }

    // If there is a selection, draw that (the "focus") on top of the polygons
    if (model.selectionData) {
      (function () {
        // Extract selection histogram2d
        var polygonsQueue = [];
        var maxCount = 0;
        var missingData = false;

        var processHistogram = function processHistogram(h, k) {
          if (drawSelectionData(h.role.score)) {
            maxCount = maxCount > h.maxCount ? maxCount : h.maxCount;
            // Add in queue
            polygonsQueue.push([axesCenters, model.fgCtx, k, k + 1, h, scoreToColor[h.role.score] || model.selectionColors]);
          }
        };

        var _loop = function _loop(k) {
          var histo = model.selectionData && model.selectionData[model.axes.getAxis(k).name] ? model.selectionData[model.axes.getAxis(k).name][model.axes.getAxis(k + 1).name] : null;
          missingData = !histo;

          if (histo) {
            histo.forEach(function (h) {
              return processHistogram(h, k);
            });
          }
        };

        for (var k = 0; k < nbPolyDraw && !missingData; ++k) {
          _loop(k);
        }

        if (!missingData) {
          model.maxBinCountForOpacityCalculation = maxCount;
          polygonsQueue.forEach(function (req) {
            return drawPolygons.apply(undefined, _toConsumableArray(req));
          });
          model.ctx.globalAlpha = model.selectionOpacityAdjustment;
          model.ctx.drawImage(model.fgCanvas, 0, 0, model.canvasArea.width, model.canvasArea.height, 0, 0, model.canvasArea.width, model.canvasArea.height);
        }
      })();
    }

    model.ctx.globalAlpha = 1.0;

    // Now draw all the decorations and controls
    drawAxisLabels(model.axes.extractLabels(model));
    drawAxisTicks(model.axes.extractAxisTicks(model));
    drawAxes(axesCenters);
    drawSelectionBars(model.axes.extractSelections(model, drawSelectionData));
    drawAxisControls(model.axes.extractAxesControl(model));
  };

  // -------------- Used to speed up action of opacity sliders ----------------
  // function fastRender() {
  //   model.ctx.clearRect(0, 0, model.canvasArea.width, model.canvasArea.height);

  //   model.ctx.globalAlpha = model.polygonOpacityAdjustment;
  //   model.ctx.drawImage(model.bgCanvas,
  //     0, 0, model.canvasArea.width, model.canvasArea.height,
  //     0, 0, model.canvasArea.width, model.canvasArea.height);

  //   model.ctx.globalAlpha = model.selectionOpacityAdjustment;
  //   model.ctx.drawImage(model.fgCanvas,
  //     0, 0, model.canvasArea.width, model.canvasArea.height,
  //     0, 0, model.canvasArea.width, model.canvasArea.height);

  //   model.ctx.globalAlpha = 1.0;

  //   const axesCenters = model.axes.extractAxesCenters(model);

  //   drawAxes(axesCenters);
  //   drawSelectionBars(model.axes.extractSelections(model));
  //   drawAxisLabels(model.axes.extractLabels(model));
  //   drawAxisControls(model.axes.extractAxesControl(model));
  // }

  publicAPI.propagateAnnotationInsteadOfSelection = function () {
    var useAnnotation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var defaultScore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var defaultWeight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    model.useAnnotation = useAnnotation;
    model.defaultScore = defaultScore;
    model.defaultWeight = defaultWeight;
  };

  publicAPI.setVisibleScoresForSelection = function (scoreList) {
    model.visibleScores = scoreList;
    if (model.selectionDataSubscription && model.visibleScores && model.propagatePartitionScores) {
      model.selectionDataSubscription.update(model.axes.getAxesPairs(), model.visibleScores);
    }
  };

  publicAPI.setScores = function (scores) {
    model.scores = scores;
    if (model.scores) {
      publicAPI.setVisibleScoresForSelection(scores.map(function (score, idx) {
        return idx;
      }));
      model.scores.forEach(function (score, idx) {
        scoreToColor[idx] = toColorArray(score.color);
      });
    }
  };

  if (model.provider && model.provider.isA('ScoresProvider')) {
    publicAPI.setScores(model.provider.getScores());
    model.subscriptions.push(model.provider.onScoresChange(publicAPI.setScores));
  }

  publicAPI.resize = function () {
    if (!model.container) {
      return;
    }
    var clientRect = model.canvas.parentElement.getBoundingClientRect();
    model.canvas.setAttribute('width', clientRect.width);
    model.canvas.setAttribute('height', clientRect.height);
    _d2.default.select(model.container).select('svg').selectAll('rect.hover-bin-indicator').remove();
    if (clientRect.width !== 0 && clientRect.height !== 0) {
      model.containerHidden = false;
      publicAPI.render();
    } else {
      model.containerHidden = true;
    }
  };

  publicAPI.setContainer = function (element) {
    if (model.container) {
      while (model.container.firstChild) {
        model.container.removeChild(model.container.firstChild);
      }
      model.container = null;
    }

    model.container = element;

    if (model.container) {
      model.container.innerHTML = _body2.default;
      _d2.default.select(model.container).select('div.parallel-coords-placeholder').select('img').attr('src', _ParallelCoordsIconSmall2.default);
      model.container.appendChild(model.canvas);
      _d2.default.select(model.container).append('svg');
      publicAPI.resize();
    }
  };

  function binNumberToScreenOffset(binNumber, rightSideUp) {
    var screenY = affine(0, binNumber, model.numberOfBins, model.canvasArea.height - model.borderOffsetBottom, model.borderOffsetTop);
    screenY -= model.hoverIndicatorHeight;

    if (rightSideUp === false) {
      screenY = affine(0, binNumber, model.numberOfBins, model.borderOffsetTop, model.canvasArea.height - model.borderOffsetBottom);
    }

    return perfRound(screenY);
  }

  function handleHoverBinUpdate(data) {
    if (!model.axes.canRender() || model.containerHidden === true) {
      // let's not do anything if we don't have enough axes for rendering.
      return;
    }

    // First update our internal data model
    model.hoverBinData = [];
    Object.keys(data.state).forEach(function (pName) {
      var binList = data.state[pName];
      if (model.axes.getAxisByName(pName) && binList.indexOf(-1) === -1) {
        for (var i = 0; i < binList.length; ++i) {
          model.hoverBinData.push({
            name: pName,
            bin: binList[i]
          });
        }
      }
    });

    // Now manage the svg dom
    var hoverBinNodes = _d2.default.select(model.container).select('svg').select('g.hover-bins').selectAll('rect.hover-bin-indicator').data(model.hoverBinData);

    hoverBinNodes.enter().append('rect').classed(_ParallelCoordinates2.default.hoverBinIndicator, true).classed('hover-bin-indicator', true);

    hoverBinNodes.exit().remove();

    var axesCenters = model.axes.extractAxesCenters(model);
    _d2.default.select(model.container).select('svg').select('g.hover-bins').selectAll('rect.hover-bin-indicator').attr('height', model.hoverIndicatorHeight).attr('width', model.hoverIndicatorWidth).attr('transform', function (d, i) {
      var axis = model.axes.getAxisByName(d.name);
      var screenOffset = binNumberToScreenOffset(d.bin, !axis.isUpsideDown());
      return 'translate(' + (axesCenters[axis.idx] - model.hoverIndicatorWidth / 2) + ', ' + screenOffset + ')';
    });
  }

  // Attach listener to provider
  model.subscriptions.push({ unsubscribe: publicAPI.setContainer });

  // Handle active field change, update axes
  if (model.provider.isA('FieldProvider')) {
    // Monitor any change
    model.subscriptions.push(model.provider.onFieldChange(function () {
      model.axes.updateAxes(model.provider.getActiveFieldNames().map(function (name) {
        return {
          name: name,
          range: model.provider.getField(name).range
        };
      }));

      if (model.provider.isA('Histogram2DProvider')) {
        model.histogram2DDataSubscription.update(model.axes.getAxesPairs());
      }

      if (model.provider.isA('SelectionProvider')) {
        model.selectionDataSubscription.update(model.axes.getAxesPairs());
      }
    }));
    // Use initial state
    model.axes.updateAxes(model.provider.getActiveFieldNames().map(function (name) {
      return { name: name, range: model.provider.getField(name).range };
    }));
  }

  // Handle bin hovering
  if (model.provider.onHoverBinChange) {
    model.subscriptions.push(model.provider.onHoverBinChange(handleHoverBinUpdate));
  }

  if (model.provider.isA('Histogram2DProvider')) {
    model.histogram2DDataSubscription = model.provider.subscribeToHistogram2D(function (allBgHistogram2d) {
      // Update axis range
      model.axes.getAxesPairs().forEach(function (pair, idx) {
        var hist2d = allBgHistogram2d[pair[0]][pair[1]];
        if (hist2d) {
          model.axes.getAxis(idx).updateRange(hist2d.x.extent);
          model.axes.getAxis(idx + 1).updateRange(hist2d.y.extent);
        }
      });

      var topLevelList = Object.keys(allBgHistogram2d);
      // We always get a maxCount, anything additional must be histogram2d
      if (topLevelList.length > 1) {
        model.allBgHistogram2dData = allBgHistogram2d;
        publicAPI.render();
      } else {
        model.allBgHistogram2dData = null;
        publicAPI.render();
      }
    }, model.axes.getAxesPairs(), {
      numberOfBins: model.numberOfBins,
      partial: false
    });

    model.subscriptions.push(model.axes.onAxisListChange(function (axisPairs) {
      model.histogram2DDataSubscription.update(axisPairs);
    }));

    model.subscriptions.push(model.histogram2DDataSubscription);
  }

  if (model.provider.isA('SelectionProvider')) {
    model.selectionDataSubscription = model.provider.subscribeToDataSelection('histogram2d', function (data) {
      model.selectionData = data;
      if (model.provider.getAnnotation()) {
        model.axes.resetSelections(model.provider.getAnnotation().selection, false, model.provider.getAnnotation().score, scoreToColor);
        if (data['##annotationGeneration##'] !== undefined) {
          if (model.provider.getAnnotation().generation === data['##annotationGeneration##']) {
            // render from selection data change (same generation)
            publicAPI.render();
          }
        } else {
          // render from selection data change (no generation)
          publicAPI.render();
        }
      } else {
        // render from selection data change (no annotation)
        publicAPI.render();
      }
    }, model.axes.getAxesPairs(), {
      partitionScores: model.visibleScores,
      numberOfBins: model.numberOfBins
    });

    model.subscriptions.push(model.selectionDataSubscription);

    model.subscriptions.push(model.provider.onSelectionChange(function (sel) {
      if (!model.useAnnotation) {
        if (sel && sel.type === 'empty') {
          model.selectionData = null;
        }
        model.axes.resetSelections(sel, false);
        publicAPI.render();
      }
    }));
    model.subscriptions.push(model.provider.onAnnotationChange(function (annotation) {
      if (annotation && annotation.selection.type === 'empty') {
        model.selectionData = null;
      }

      if (lastAnnotationPushed && annotation.selection.type === 'range' && annotation.id === lastAnnotationPushed.id && annotation.generation === lastAnnotationPushed.generation + 1) {
        // Assume that it is still ours but edited by someone else
        lastAnnotationPushed = annotation;

        // Capture the score and update our default
        model.defaultScore = lastAnnotationPushed.score[0];
      }
      model.axes.resetSelections(annotation.selection, false, annotation.score, scoreToColor);
    }));
    model.subscriptions.push(model.axes.onSelectionChange(function () {
      if (model.useAnnotation) {
        lastAnnotationPushed = model.provider.getAnnotation();

        // If parttion annotation special handle
        if (lastAnnotationPushed && lastAnnotationPushed.selection.type === 'partition') {
          var axisIdxToClear = model.axes.getAxesNames().indexOf(lastAnnotationPushed.selection.partition.variable);
          if (axisIdxToClear !== -1) {
            model.axes.getAxis(axisIdxToClear).clearSelection();
            model.axes.selection = null;
          }
        }

        var selection = model.axes.getSelection();
        if (selection.type === 'empty') {
          lastAnnotationPushed = _AnnotationBuilder2.default.EMPTY_ANNOTATION;
        } else if (!lastAnnotationPushed || model.provider.shouldCreateNewAnnotation() || lastAnnotationPushed.selection.type !== 'range') {
          lastAnnotationPushed = _AnnotationBuilder2.default.annotation(selection, [model.defaultScore], model.defaultWeight);
          if (lastAnnotationPushed.name === '') {
            // set default range annotation name
            _AnnotationBuilder2.default.setDefaultName(lastAnnotationPushed);
            if (model.provider.isA('AnnotationStoreProvider')) {
              lastAnnotationPushed.name = model.provider.getNextStoredAnnotationName(lastAnnotationPushed.name);
            }
          }
        } else {
          lastAnnotationPushed = _AnnotationBuilder2.default.update(lastAnnotationPushed, {
            selection: selection,
            score: [model.defaultScore],
            weight: model.defaultWeight
          });
        }
        _AnnotationBuilder2.default.updateReadOnlyFlag(lastAnnotationPushed, model.readOnlyFields);
        model.provider.setAnnotation(lastAnnotationPushed);
      } else {
        model.provider.setSelection(model.axes.getSelection());
      }
    }));
    model.subscriptions.push(model.axes.onAxisListChange(function (axisPairs) {
      model.selectionDataSubscription.update(axisPairs);
    }));
  } else {
    model.subscriptions.push(model.axes.onSelectionChange(function () {
      publicAPI.render();
    }));
  }

  publicAPI.setContainer(model.container);
  updateSizeInformation();

  publicAPI.setNumberOfBins = function (numberOfBins) {
    model.numberOfBins = numberOfBins;
    if (model.selectionDataSubscription) {
      model.selectionDataSubscription.update(model.axes.getAxesPairs(), {
        numberOfBins: numberOfBins
      });
    }
    if (model.histogram2DDataSubscription) {
      model.histogram2DDataSubscription.update(model.axes.getAxesPairs(), {
        numberOfBins: numberOfBins
      });
    }
  };
}

// ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------

var DEFAULT_VALUES = {
  container: null,
  provider: null,
  needData: true,

  containerHidden: false,

  borderOffsetTop: 35,
  borderOffsetRight: 12,
  borderOffsetBottom: 45,
  borderOffsetLeft: 12,

  axisWidth: 6,
  selectionBarWidth: 8,

  polygonColors: [0, 0, 0],
  selectionColors: [70, 130, 180],

  maxBinCountForOpacityCalculation: 0,

  selectionOpacityAdjustment: 1,
  polygonOpacityAdjustment: 1,

  hoverIndicatorHeight: 10,
  hoverIndicatorWidth: 7,

  numberOfBins: 32,

  useAnnotation: false,
  defaultScore: 0,
  defaultWeight: 1,

  showOnlySelection: false,

  visibleScores: [],
  propagatePartitionScores: false
  // scores: [{ name: 'Yes', color: '#00C900', value: 1 }, ...]
};

// ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, DEFAULT_VALUES, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, 'VizComponent');
  _CompositeClosureHelper2.default.get(publicAPI, model, ['provider', 'container', 'showOnlySelection', 'visibleScores', 'propagatePartitionScores', 'numberOfBins']);
  _CompositeClosureHelper2.default.set(publicAPI, model, ['showOnlySelection', 'propagatePartitionScores']);
  _CompositeClosureHelper2.default.dynamicArray(publicAPI, model, 'readOnlyFields');

  parallelCoordinate(publicAPI, model);
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = { newInstance: newInstance, extend: extend };

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
  var d3 = {
    version: "3.5.17"
  };
  var d3_arraySlice = [].slice, d3_array = function(list) {
    return d3_arraySlice.call(list);
  };
  var d3_document = this.document;
  function d3_documentElement(node) {
    return node && (node.ownerDocument || node.document || node).documentElement;
  }
  function d3_window(node) {
    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
  }
  if (d3_document) {
    try {
      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
    } catch (e) {
      d3_array = function(list) {
        var i = list.length, array = new Array(i);
        while (i--) array[i] = list[i];
        return array;
      };
    }
  }
  if (!Date.now) Date.now = function() {
    return +new Date();
  };
  if (d3_document) {
    try {
      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
    } catch (error) {
      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
      d3_element_prototype.setAttribute = function(name, value) {
        d3_element_setAttribute.call(this, name, value + "");
      };
      d3_element_prototype.setAttributeNS = function(space, local, value) {
        d3_element_setAttributeNS.call(this, space, local, value + "");
      };
      d3_style_prototype.setProperty = function(name, value, priority) {
        d3_style_setProperty.call(this, name, value + "", priority);
      };
    }
  }
  d3.ascending = d3_ascending;
  function d3_ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  d3.descending = function(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };
  d3.min = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }
    return a;
  };
  d3.max = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }
    return a;
  };
  d3.extent = function(array, f) {
    var i = -1, n = array.length, a, b, c;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = c = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = c = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }
    return [ a, c ];
  };
  function d3_number(x) {
    return x === null ? NaN : +x;
  }
  function d3_numeric(x) {
    return !isNaN(x);
  }
  d3.sum = function(array, f) {
    var s = 0, n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
    } else {
      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
    }
    return s;
  };
  d3.mean = function(array, f) {
    var s = 0, n = array.length, a, i = -1, j = n;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
    }
    if (j) return s / j;
  };
  d3.quantile = function(values, p) {
    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };
  d3.median = function(array, f) {
    var numbers = [], n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
    }
    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
  };
  d3.variance = function(array, f) {
    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
    if (arguments.length === 1) {
      while (++i < n) {
        if (d3_numeric(a = d3_number(array[i]))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    } else {
      while (++i < n) {
        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    }
    if (j > 1) return s / (j - 1);
  };
  d3.deviation = function() {
    var v = d3.variance.apply(this, arguments);
    return v ? Math.sqrt(v) : v;
  };
  function d3_bisector(compare) {
    return {
      left: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
        }
        return lo;
      },
      right: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
        }
        return lo;
      }
    };
  }
  var d3_bisect = d3_bisector(d3_ascending);
  d3.bisectLeft = d3_bisect.left;
  d3.bisect = d3.bisectRight = d3_bisect.right;
  d3.bisector = function(f) {
    return d3_bisector(f.length === 1 ? function(d, x) {
      return d3_ascending(f(d), x);
    } : f);
  };
  d3.shuffle = function(array, i0, i1) {
    if ((m = arguments.length) < 3) {
      i1 = array.length;
      if (m < 2) i0 = 0;
    }
    var m = i1 - i0, t, i;
    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
    }
    return array;
  };
  d3.permute = function(array, indexes) {
    var i = indexes.length, permutes = new Array(i);
    while (i--) permutes[i] = array[indexes[i]];
    return permutes;
  };
  d3.pairs = function(array) {
    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
    return pairs;
  };
  d3.transpose = function(matrix) {
    if (!(n = matrix.length)) return [];
    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {
      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {
        row[j] = matrix[j][i];
      }
    }
    return transpose;
  };
  function d3_transposeLength(d) {
    return d.length;
  }
  d3.zip = function() {
    return d3.transpose(arguments);
  };
  d3.keys = function(map) {
    var keys = [];
    for (var key in map) keys.push(key);
    return keys;
  };
  d3.values = function(map) {
    var values = [];
    for (var key in map) values.push(map[key]);
    return values;
  };
  d3.entries = function(map) {
    var entries = [];
    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });
    return entries;
  };
  d3.merge = function(arrays) {
    var n = arrays.length, m, i = -1, j = 0, merged, array;
    while (++i < n) j += arrays[i].length;
    merged = new Array(j);
    while (--n >= 0) {
      array = arrays[n];
      m = array.length;
      while (--m >= 0) {
        merged[--j] = array[m];
      }
    }
    return merged;
  };
  var abs = Math.abs;
  d3.range = function(start, stop, step) {
    if (arguments.length < 3) {
      step = 1;
      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }
    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };
  function d3_range_integerScale(x) {
    var k = 1;
    while (x * k % 1) k *= 10;
    return k;
  }
  function d3_class(ctor, properties) {
    for (var key in properties) {
      Object.defineProperty(ctor.prototype, key, {
        value: properties[key],
        enumerable: false
      });
    }
  }
  d3.map = function(object, f) {
    var map = new d3_Map();
    if (object instanceof d3_Map) {
      object.forEach(function(key, value) {
        map.set(key, value);
      });
    } else if (Array.isArray(object)) {
      var i = -1, n = object.length, o;
      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
    } else {
      for (var key in object) map.set(key, object[key]);
    }
    return map;
  };
  function d3_Map() {
    this._ = Object.create(null);
  }
  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
  d3_class(d3_Map, {
    has: d3_map_has,
    get: function(key) {
      return this._[d3_map_escape(key)];
    },
    set: function(key, value) {
      return this._[d3_map_escape(key)] = value;
    },
    remove: d3_map_remove,
    keys: d3_map_keys,
    values: function() {
      var values = [];
      for (var key in this._) values.push(this._[key]);
      return values;
    },
    entries: function() {
      var entries = [];
      for (var key in this._) entries.push({
        key: d3_map_unescape(key),
        value: this._[key]
      });
      return entries;
    },
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
    }
  });
  function d3_map_escape(key) {
    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
  }
  function d3_map_unescape(key) {
    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
  }
  function d3_map_has(key) {
    return d3_map_escape(key) in this._;
  }
  function d3_map_remove(key) {
    return (key = d3_map_escape(key)) in this._ && delete this._[key];
  }
  function d3_map_keys() {
    var keys = [];
    for (var key in this._) keys.push(d3_map_unescape(key));
    return keys;
  }
  function d3_map_size() {
    var size = 0;
    for (var key in this._) ++size;
    return size;
  }
  function d3_map_empty() {
    for (var key in this._) return false;
    return true;
  }
  d3.nest = function() {
    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [ object ]);
        }
      }
      if (mapType) {
        object = mapType();
        setter = function(keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};
        setter = function(keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }
      valuesByKey.forEach(setter);
      return object;
    }
    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [], sortKey = sortKeys[depth++];
      map.forEach(function(key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    nest.map = function(array, mapType) {
      return map(mapType, array, 0);
    };
    nest.entries = function(array) {
      return entries(map(d3.map, array, 0), 0);
    };
    nest.key = function(d) {
      keys.push(d);
      return nest;
    };
    nest.sortKeys = function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };
    nest.sortValues = function(order) {
      sortValues = order;
      return nest;
    };
    nest.rollup = function(f) {
      rollup = f;
      return nest;
    };
    return nest;
  };
  d3.set = function(array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };
  function d3_Set() {
    this._ = Object.create(null);
  }
  d3_class(d3_Set, {
    has: d3_map_has,
    add: function(key) {
      this._[d3_map_escape(key += "")] = true;
      return key;
    },
    remove: d3_map_remove,
    values: d3_map_keys,
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this._) f.call(this, d3_map_unescape(key));
    }
  });
  d3.behavior = {};
  function d3_identity(d) {
    return d;
  }
  d3.rebind = function(target, source) {
    var i = 1, n = arguments.length, method;
    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
    return target;
  };
  function d3_rebind(target, source, method) {
    return function() {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }
  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.slice(1);
    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }
  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
  function d3_noop() {}
  d3.dispatch = function() {
    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    return dispatch;
  };
  function d3_dispatch() {}
  d3_dispatch.prototype.on = function(type, listener) {
    var i = type.indexOf("."), name = "";
    if (i >= 0) {
      name = type.slice(i + 1);
      type = type.slice(0, i);
    }
    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };
  function d3_dispatch_event(dispatch) {
    var listeners = [], listenerByName = new d3_Map();
    function event() {
      var z = listeners, i = -1, n = z.length, l;
      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
      return dispatch;
    }
    event.on = function(name, listener) {
      var l = listenerByName.get(name), i;
      if (arguments.length < 2) return l && l.on;
      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }
      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };
    return event;
  }
  d3.event = null;
  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }
  function d3_eventSource() {
    var e = d3.event, s;
    while (s = e.sourceEvent) e = s;
    return e;
  }
  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    dispatch.of = function(thiz, argumentz) {
      return function(e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };
    return dispatch;
  }
  d3.requote = function(s) {
    return s.replace(d3_requote_re, "\\$&");
  };
  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function(object, prototype) {
    object.__proto__ = prototype;
  } : function(object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };
  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }
  var d3_select = function(s, n) {
    return n.querySelector(s);
  }, d3_selectAll = function(s, n) {
    return n.querySelectorAll(s);
  }, d3_selectMatches = function(n, s) {
    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
    d3_selectMatches = function(n, s) {
      return d3_selectMatcher.call(n, s);
    };
    return d3_selectMatches(n, s);
  };
  if (typeof Sizzle === "function") {
    d3_select = function(s, n) {
      return Sizzle(s, n)[0] || null;
    };
    d3_selectAll = Sizzle;
    d3_selectMatches = Sizzle.matchesSelector;
  }
  d3.selection = function() {
    return d3.select(d3_document.documentElement);
  };
  var d3_selectionPrototype = d3.selection.prototype = [];
  d3_selectionPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, group, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_select(selector, this);
    };
  }
  d3_selectionPrototype.selectAll = function(selector) {
    var subgroups = [], subgroup, node;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_selectAll(selector, this);
    };
  }
  var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: d3_nsXhtml,
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function(name) {
      var i = name.indexOf(":"), prefix = name;
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };
  d3_selectionPrototype.attr = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }
      for (value in name) this.each(d3_selection_attr(value, name[value]));
      return this;
    }
    return this.each(d3_selection_attr(name, value));
  };
  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrConstant() {
      this.setAttribute(name, value);
    }
    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }
    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
    }
    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
    }
    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }
  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }
  d3_selectionPrototype.classed = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");
          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }
        return true;
      }
      for (value in name) this.each(d3_selection_classed(value, name[value]));
      return this;
    }
    return this.each(d3_selection_classed(name, value));
  };
  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }
  function d3_selection_classes(name) {
    return (name + "").trim().split(/^|\s+/);
  }
  function d3_selection_classed(name, value) {
    name = d3_selection_classes(name).map(d3_selection_classedName);
    var n = name.length;
    function classedConstant() {
      var i = -1;
      while (++i < n) name[i](this, value);
    }
    function classedFunction() {
      var i = -1, x = value.apply(this, arguments);
      while (++i < n) name[i](this, x);
    }
    return typeof value === "function" ? classedFunction : classedConstant;
  }
  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function(node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";
      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }
  d3_selectionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
        return this;
      }
      if (n < 2) {
        var node = this.node();
        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
      }
      priority = "";
    }
    return this.each(d3_selection_style(name, value, priority));
  };
  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }
    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
    }
    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }
  d3_selectionPrototype.property = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];
      for (value in name) this.each(d3_selection_property(value, name[value]));
      return this;
    }
    return this.each(d3_selection_property(name, value));
  };
  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }
    function propertyConstant() {
      this[name] = value;
    }
    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name]; else this[name] = x;
    }
    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }
  d3_selectionPrototype.text = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function() {
      this.textContent = "";
    } : function() {
      this.textContent = value;
    }) : this.node().textContent;
  };
  d3_selectionPrototype.html = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function() {
      this.innerHTML = "";
    } : function() {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };
  d3_selectionPrototype.append = function(name) {
    name = d3_selection_creator(name);
    return this.select(function() {
      return this.appendChild(name.apply(this, arguments));
    });
  };
  function d3_selection_creator(name) {
    function create() {
      var document = this.ownerDocument, namespace = this.namespaceURI;
      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
    }
    function createNS() {
      return this.ownerDocument.createElementNS(name.space, name.local);
    }
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
  }
  d3_selectionPrototype.insert = function(name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function() {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
    });
  };
  d3_selectionPrototype.remove = function() {
    return this.each(d3_selectionRemove);
  };
  function d3_selectionRemove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
  }
  d3_selectionPrototype.data = function(value, key) {
    var i = -1, n = this.length, group, node;
    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);
      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }
      return value;
    }
    function bind(group, groupData) {
      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
      if (key) {
        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
        for (i = -1; ++i < n; ) {
          if (node = group[i]) {
            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
              exitNodes[i] = node;
            } else {
              nodeByKeyValue.set(keyValue, node);
            }
            keyValues[i] = keyValue;
          }
        }
        for (i = -1; ++i < m; ) {
          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          } else if (node !== true) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          }
          nodeByKeyValue.set(keyValue, true);
        }
        for (i = -1; ++i < n; ) {
          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0; ) {
          node = group[i];
          nodeData = groupData[i];
          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }
        for (;i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }
        for (;i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }
      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }
    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }
    update.enter = function() {
      return enter;
    };
    update.exit = function() {
      return exit;
    };
    return update;
  };
  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }
  d3_selectionPrototype.datum = function(value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };
  d3_selectionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_filter(selector) {
    return function() {
      return d3_selectMatches(this, selector);
    };
  }
  d3_selectionPrototype.order = function() {
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  };
  d3_selectionPrototype.sort = function(comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);
    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
    return this.order();
  };
  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3_ascending;
    return function(a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }
  d3_selectionPrototype.each = function(callback) {
    return d3_selection_each(this, function(node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };
  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }
    return groups;
  }
  d3_selectionPrototype.call = function(callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };
  d3_selectionPrototype.empty = function() {
    return !this.node();
  };
  d3_selectionPrototype.node = function() {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  };
  d3_selectionPrototype.size = function() {
    var n = 0;
    d3_selection_each(this, function() {
      ++n;
    });
    return n;
  };
  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }
  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
  d3_selection_enterPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, upgroup, group, node;
    for (var j = -1, m = this.length; ++j < m; ) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  d3_selection_enterPrototype.insert = function(name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };
  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function(d, i, j) {
      var group = enter[j].update, n = group.length, node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;
      while (!(node = group[i0]) && ++i0 < n) ;
      return node;
    };
  }
  d3.select = function(node) {
    var group;
    if (typeof node === "string") {
      group = [ d3_select(node, d3_document) ];
      group.parentNode = d3_document.documentElement;
    } else {
      group = [ node ];
      group.parentNode = d3_documentElement(node);
    }
    return d3_selection([ group ]);
  };
  d3.selectAll = function(nodes) {
    var group;
    if (typeof nodes === "string") {
      group = d3_array(d3_selectAll(nodes, d3_document));
      group.parentNode = d3_document.documentElement;
    } else {
      group = d3_array(nodes);
      group.parentNode = null;
    }
    return d3_selection([ group ]);
  };
  d3_selectionPrototype.on = function(type, listener, capture) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;
        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
        return this;
      }
      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }
    return this.each(d3_selection_on(type, listener, capture));
  };
  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
    if (i > 0) type = type.slice(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;
    function onRemove() {
      var l = this[name];
      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }
    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }
    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }
    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }
  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  if (d3_document) {
    d3_selection_onFilters.forEach(function(k) {
      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
    });
  }
  function d3_selection_onListener(listener, argumentz) {
    return function(e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;
      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }
  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function(e) {
      var target = this, related = e.relatedTarget;
      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }
  var d3_event_dragSelect, d3_event_dragId = 0;
  function d3_event_dragSuppress(node) {
    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
    if (d3_event_dragSelect == null) {
      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
    }
    if (d3_event_dragSelect) {
      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
      style[d3_event_dragSelect] = "none";
    }
    return function(suppressClick) {
      w.on(name, null);
      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
      if (suppressClick) {
        var off = function() {
          w.on(click, null);
        };
        w.on(click, function() {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }
  d3.mouse = function(container) {
    return d3_mousePoint(container, d3_eventSource());
  };
  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
  function d3_mousePoint(container, e) {
    if (e.changedTouches) e = e.changedTouches[0];
    var svg = container.ownerSVGElement || container;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      if (d3_mouse_bug44083 < 0) {
        var window = d3_window(container);
        if (window.scrollX || window.scrollY) {
          svg = d3.select("body").append("svg").style({
            position: "absolute",
            top: 0,
            left: 0,
            margin: 0,
            padding: 0,
            border: "none"
          }, "important");
          var ctm = svg[0][0].getScreenCTM();
          d3_mouse_bug44083 = !(ctm.f || ctm.e);
          svg.remove();
        }
      }
      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
      point.y = e.clientY;
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [ point.x, point.y ];
    }
    var rect = container.getBoundingClientRect();
    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
  }
  d3.touch = function(container, touches, identifier) {
    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return d3_mousePoint(container, touch);
      }
    }
  };
  d3.behavior.drag = function() {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }
    function dragstart(id, position, subject, move, end) {
      return function() {
        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
        if (origin) {
          dragOffset = origin.apply(that, arguments);
          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
        } else {
          dragOffset = [ 0, 0 ];
        }
        dispatch({
          type: "dragstart"
        });
        function moved() {
          var position1 = position(parent, dragId), dx, dy;
          if (!position1) return;
          dx = position1[0] - position0[0];
          dy = position1[1] - position0[1];
          dragged |= dx | dy;
          position0 = position1;
          dispatch({
            type: "drag",
            x: position1[0] + dragOffset[0],
            y: position1[1] + dragOffset[1],
            dx: dx,
            dy: dy
          });
        }
        function ended() {
          if (!position(parent, dragId)) return;
          dragSubject.on(move + dragName, null).on(end + dragName, null);
          dragRestore(dragged);
          dispatch({
            type: "dragend"
          });
        }
      };
    }
    drag.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };
    return d3.rebind(drag, event, "on");
  };
  function d3_behavior_dragTouchId() {
    return d3.event.changedTouches[0].identifier;
  }
  d3.touches = function(container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function(touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };
  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }
  function d3_cross2d(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }
  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }
  function d3_asin(x) {
    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
  }
  function d3_sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
  }
  function d3_cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }
  function d3_tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
  }
  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }
  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
  d3.interpolateZoom = function(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
    if (d2 < ε2) {
      S = Math.log(w1 / w0) / ρ;
      i = function(t) {
        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];
      };
    } else {
      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / ρ;
      i = function(t) {
        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
      };
    }
    i.duration = S * 1e3;
    return i;
  };
  d3.behavior.zoom = function() {
    var view = {
      x: 0,
      y: 0,
      k: 1
    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
    if (!d3_behavior_zoomWheel) {
      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
        return d3.event.wheelDelta;
      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
        return -d3.event.detail;
      }, "MozMousePixelScroll");
    }
    function zoom(g) {
      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }
    zoom.event = function(g) {
      g.each(function() {
        var dispatch = event.of(this, arguments), view1 = view;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.zoom", function() {
            view = this.__chart__ || {
              x: 0,
              y: 0,
              k: 1
            };
            zoomstarted(dispatch);
          }).tween("zoom:zoom", function() {
            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
            return function(t) {
              var l = i(t), k = dx / l[2];
              this.__chart__ = view = {
                x: cx - l[0] * k,
                y: cy - l[1] * k,
                k: k
              };
              zoomed(dispatch);
            };
          }).each("interrupt.zoom", function() {
            zoomended(dispatch);
          }).each("end.zoom", function() {
            zoomended(dispatch);
          });
        } else {
          this.__chart__ = view;
          zoomstarted(dispatch);
          zoomed(dispatch);
          zoomended(dispatch);
        }
      });
    };
    zoom.translate = function(_) {
      if (!arguments.length) return [ view.x, view.y ];
      view = {
        x: +_[0],
        y: +_[1],
        k: view.k
      };
      rescale();
      return zoom;
    };
    zoom.scale = function(_) {
      if (!arguments.length) return view.k;
      view = {
        x: view.x,
        y: view.y,
        k: null
      };
      scaleTo(+_);
      rescale();
      return zoom;
    };
    zoom.scaleExtent = function(_) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.center = function(_) {
      if (!arguments.length) return center;
      center = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.size = function(_) {
      if (!arguments.length) return size;
      size = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.duration = function(_) {
      if (!arguments.length) return duration;
      duration = +_;
      return zoom;
    };
    zoom.x = function(z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    zoom.y = function(z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    function location(p) {
      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
    }
    function point(l) {
      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
    }
    function scaleTo(s) {
      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }
    function translateTo(p, l) {
      l = point(l);
      view.x += p[0] - l[0];
      view.y += p[1] - l[1];
    }
    function zoomTo(that, p, l, k) {
      that.__chart__ = {
        x: view.x,
        y: view.y,
        k: view.k
      };
      scaleTo(Math.pow(2, k));
      translateTo(center0 = p, l);
      that = d3.select(that);
      if (duration > 0) that = that.transition().duration(duration);
      that.call(zoom.event);
    }
    function rescale() {
      if (x1) x1.domain(x0.range().map(function(x) {
        return (x - view.x) / view.k;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function(y) {
        return (y - view.y) / view.k;
      }).map(y0.invert));
    }
    function zoomstarted(dispatch) {
      if (!zooming++) dispatch({
        type: "zoomstart"
      });
    }
    function zoomed(dispatch) {
      rescale();
      dispatch({
        type: "zoom",
        scale: view.k,
        translate: [ view.x, view.y ]
      });
    }
    function zoomended(dispatch) {
      if (!--zooming) dispatch({
        type: "zoomend"
      }), center0 = null;
    }
    function mousedowned() {
      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
      d3_selection_interrupt.call(that);
      zoomstarted(dispatch);
      function moved() {
        dragged = 1;
        translateTo(d3.mouse(that), location0);
        zoomed(dispatch);
      }
      function ended() {
        subject.on(mousemove, null).on(mouseup, null);
        dragRestore(dragged);
        zoomended(dispatch);
      }
    }
    function touchstarted() {
      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
      started();
      zoomstarted(dispatch);
      subject.on(mousedown, null).on(touchstart, started);
      function relocate() {
        var touches = d3.touches(that);
        scale0 = view.k;
        touches.forEach(function(t) {
          if (t.identifier in locations0) locations0[t.identifier] = location(t);
        });
        return touches;
      }
      function started() {
        var target = d3.event.target;
        d3.select(target).on(touchmove, moved).on(touchend, ended);
        targets.push(target);
        var changed = d3.event.changedTouches;
        for (var i = 0, n = changed.length; i < n; ++i) {
          locations0[changed[i].identifier] = null;
        }
        var touches = relocate(), now = Date.now();
        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0];
            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
            d3_eventPreventDefault();
          }
          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }
      function moved() {
        var touches = d3.touches(that), p0, l0, p1, l1;
        d3_selection_interrupt.call(that);
        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
          p1 = touches[i];
          if (l1 = locations0[p1.identifier]) {
            if (l0) break;
            p0 = p1, l0 = l1;
          }
        }
        if (l1) {
          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
          scaleTo(scale1 * scale0);
        }
        touchtime = null;
        translateTo(p0, l0);
        zoomed(dispatch);
      }
      function ended() {
        if (d3.event.touches.length) {
          var changed = d3.event.changedTouches;
          for (var i = 0, n = changed.length; i < n; ++i) {
            delete locations0[changed[i].identifier];
          }
          for (var identifier in locations0) {
            return void relocate();
          }
        }
        d3.selectAll(targets).on(zoomName, null);
        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
        dragRestore();
        zoomended(dispatch);
      }
    }
    function mousewheeled() {
      var dispatch = event.of(this, arguments);
      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
      mousewheelTimer = setTimeout(function() {
        mousewheelTimer = null;
        zoomended(dispatch);
      }, 50);
      d3_eventPreventDefault();
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
      translateTo(center0, translate0);
      zoomed(dispatch);
    }
    function dblclicked() {
      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
    }
    return d3.rebind(zoom, event, "on");
  };
  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
  d3.color = d3_color;
  function d3_color() {}
  d3_color.prototype.toString = function() {
    return this.rgb() + "";
  };
  d3.hsl = d3_hsl;
  function d3_hsl(h, s, l) {
    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
  }
  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
  d3_hslPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, this.l / k);
  };
  d3_hslPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, k * this.l);
  };
  d3_hslPrototype.rgb = function() {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };
  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;
    function v(h) {
      if (h > 360) h -= 360; else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }
    function vv(h) {
      return Math.round(v(h) * 255);
    }
    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }
  d3.hcl = d3_hcl;
  function d3_hcl(h, c, l) {
    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
  }
  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
  d3_hclPrototype.brighter = function(k) {
    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.darker = function(k) {
    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.rgb = function() {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };
  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }
  d3.lab = d3_lab;
  function d3_lab(l, a, b) {
    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
  }
  var d3_lab_K = 18;
  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_lab.prototype = new d3_color();
  d3_labPrototype.brighter = function(k) {
    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.darker = function(k) {
    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.rgb = function() {
    return d3_lab_rgb(this.l, this.a, this.b);
  };
  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }
  function d3_lab_hcl(l, a, b) {
    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
  }
  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }
  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }
  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }
  d3.rgb = d3_rgb;
  function d3_rgb(r, g, b) {
    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
  }
  function d3_rgbNumber(value) {
    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }
  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }
  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
  d3_rgbPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r, g = this.g, b = this.b, i = 30;
    if (!r && !g && !b) return new d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
  };
  d3_rgbPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_rgb(k * this.r, k * this.g, k * this.b);
  };
  d3_rgbPrototype.hsl = function() {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };
  d3_rgbPrototype.toString = function() {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };
  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }
  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0, g = 0, b = 0, m1, m2, color;
    m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());
    if (m1) {
      m2 = m1[2].split(",");
      switch (m1[1]) {
       case "hsl":
        {
          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
        }

       case "rgb":
        {
          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
        }
      }
    }
    if (color = d3_rgb_names.get(format)) {
      return rgb(color.r, color.g, color.b);
    }
    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
      if (format.length === 4) {
        r = (color & 3840) >> 4;
        r = r >> 4 | r;
        g = color & 240;
        g = g >> 4 | g;
        b = color & 15;
        b = b << 4 | b;
      } else if (format.length === 7) {
        r = (color & 16711680) >> 16;
        g = (color & 65280) >> 8;
        b = color & 255;
      }
    }
    return rgb(r, g, b);
  }
  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new d3_hsl(h, s, l);
  }
  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }
  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }
  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }
  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function(key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });
  function d3_functor(v) {
    return typeof v === "function" ? v : function() {
      return v;
    };
  }
  d3.functor = d3_functor;
  d3.xhr = d3_xhrType(d3_identity);
  function d3_xhrType(response) {
    return function(url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
      mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }
  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
      request.readyState > 3 && respond();
    };
    function respond() {
      var status = request.status, result;
      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }
        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }
    request.onprogress = function(event) {
      var o = d3.event;
      d3.event = event;
      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };
    xhr.header = function(name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name]; else headers[name] = value + "";
      return xhr;
    };
    xhr.mimeType = function(value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };
    xhr.responseType = function(value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };
    xhr.response = function(value) {
      response = value;
      return xhr;
    };
    [ "get", "post" ].forEach(function(method) {
      xhr[method] = function() {
        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
      };
    });
    xhr.send = function(method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function(request) {
        callback(null, request);
      });
      dispatch.beforesend.call(xhr, request);
      request.send(data == null ? null : data);
      return xhr;
    };
    xhr.abort = function() {
      request.abort();
      return xhr;
    };
    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }
  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function(error, request) {
      callback(error == null ? request : null);
    } : callback;
  }
  function d3_xhrHasResponse(request) {
    var type = request.responseType;
    return type && type !== "text" ? request.response : request.responseText;
  }
  d3.dsv = function(delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
      xhr.row = function(_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };
      return xhr;
    }
    function response(request) {
      return dsv.parse(request.responseText);
    }
    function typedResponse(f) {
      return function(request) {
        return dsv.parse(request.responseText, f);
      };
    }
    dsv.parse = function(text, f) {
      var o;
      return dsv.parseRows(text, function(row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function(name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function(row, i) {
          return f(a(row), i);
        } : a;
      });
    };
    dsv.parseRows = function(text, f) {
      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;
        if (text.charCodeAt(j) === 34) {
          var i = j;
          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }
          I = i + 2;
          var c = text.charCodeAt(i + 1);
          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }
          return text.slice(j + 1, i).replace(/""/g, '"');
        }
        while (I < N) {
          var c = text.charCodeAt(I++), k = 1;
          if (c === 10) eol = true; else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.slice(j, I - k);
        }
        return text.slice(j);
      }
      while ((t = token()) !== EOF) {
        var a = [];
        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }
        if (f && (a = f(a, n++)) == null) continue;
        rows.push(a);
      }
      return rows;
    };
    dsv.format = function(rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(), fields = [];
      rows.forEach(function(row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
        return fields.map(function(field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };
    dsv.formatRows = function(rows) {
      return rows.map(formatRow).join("\n");
    };
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }
    return dsv;
  };
  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv("	", "text/tab-separated-values");
  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
    setTimeout(callback, 17);
  };
  d3.timer = function() {
    d3_timer.apply(this, arguments);
  };
  function d3_timer(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay, timer = {
      c: callback,
      t: time,
      n: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;
    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
    return timer;
  }
  function d3_timer_step() {
    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }
      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }
  d3.timer.flush = function() {
    d3_timer_mark();
    d3_timer_sweep();
  };
  function d3_timer_mark() {
    var now = Date.now(), timer = d3_timer_queueHead;
    while (timer) {
      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;
      timer = timer.n;
    }
    return now;
  }
  function d3_timer_sweep() {
    var t0, t1 = d3_timer_queueHead, time = Infinity;
    while (t1) {
      if (t1.c) {
        if (t1.t < time) time = t1.t;
        t1 = (t0 = t1).n;
      } else {
        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
      }
    }
    d3_timer_queueTail = t0;
    return time;
  }
  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }
  d3.round = function(x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };
  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
  d3.formatPrefix = function(value, precision) {
    var i = 0;
    if (value = +value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
    }
    return d3_formatPrefixes[8 + i / 3];
  };
  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, abs(8 - i) * 3);
    return {
      scale: i > 8 ? function(d) {
        return d / k;
      } : function(d) {
        return d * k;
      },
      symbol: d
    };
  }
  function d3_locale_numberFormat(locale) {
    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
      while (i > 0 && g > 0) {
        if (length + g + 1 > width) g = Math.max(1, width - length);
        t.push(value.substring(i -= g, i + g));
        if ((length += g + 1) > width) break;
        g = locale_grouping[j = (j + 1) % locale_grouping.length];
      }
      return t.reverse().join(locale_thousands);
    } : d3_identity;
    return function(specifier) {
      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
      if (precision) precision = +precision.substring(1);
      if (zfill || fill === "0" && align === "=") {
        zfill = fill = "0";
        align = "=";
      }
      switch (type) {
       case "n":
        comma = true;
        type = "g";
        break;

       case "%":
        scale = 100;
        suffix = "%";
        type = "f";
        break;

       case "p":
        scale = 100;
        suffix = "%";
        type = "r";
        break;

       case "b":
       case "o":
       case "x":
       case "X":
        if (symbol === "#") prefix = "0" + type.toLowerCase();

       case "c":
        exponent = false;

       case "d":
        integer = true;
        precision = 0;
        break;

       case "s":
        scale = -1;
        type = "r";
        break;
      }
      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
      if (type == "r" && !precision) type = "g";
      if (precision != null) {
        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
      }
      type = d3_format_types.get(type) || d3_format_typeDefault;
      var zcomma = zfill && comma;
      return function(value) {
        var fullSuffix = suffix;
        if (integer && value % 1) return "";
        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
        if (scale < 0) {
          var unit = d3.formatPrefix(value, precision);
          value = unit.scale(value);
          fullSuffix = unit.symbol + suffix;
        } else {
          value *= scale;
        }
        value = type(value, precision);
        var i = value.lastIndexOf("."), before, after;
        if (i < 0) {
          var j = exponent ? value.lastIndexOf("e") : -1;
          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
        } else {
          before = value.substring(0, i);
          after = locale_decimal + value.substring(i + 1);
        }
        if (!zfill && comma) before = formatGroup(before, Infinity);
        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
        negative += prefix;
        value = before + after;
        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
      };
    };
  }
  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function(x) {
      return x.toString(2);
    },
    c: function(x) {
      return String.fromCharCode(x);
    },
    o: function(x) {
      return x.toString(8);
    },
    x: function(x) {
      return x.toString(16);
    },
    X: function(x) {
      return x.toString(16).toUpperCase();
    },
    g: function(x, p) {
      return x.toPrecision(p);
    },
    e: function(x, p) {
      return x.toExponential(p);
    },
    f: function(x, p) {
      return x.toFixed(p);
    },
    r: function(x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });
  function d3_format_typeDefault(x) {
    return x + "";
  }
  var d3_time = d3.time = {}, d3_date = Date;
  function d3_date_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }
  d3_date_utc.prototype = {
    getDate: function() {
      return this._.getUTCDate();
    },
    getDay: function() {
      return this._.getUTCDay();
    },
    getFullYear: function() {
      return this._.getUTCFullYear();
    },
    getHours: function() {
      return this._.getUTCHours();
    },
    getMilliseconds: function() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function() {
      return this._.getUTCMinutes();
    },
    getMonth: function() {
      return this._.getUTCMonth();
    },
    getSeconds: function() {
      return this._.getUTCSeconds();
    },
    getTime: function() {
      return this._.getTime();
    },
    getTimezoneOffset: function() {
      return 0;
    },
    valueOf: function() {
      return this._.valueOf();
    },
    setDate: function() {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function() {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function() {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function() {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function() {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function() {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function() {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function() {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function() {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;
  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date), d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }
    function ceil(date) {
      step(date = local(new d3_date(date - 1)), 1);
      return date;
    }
    function offset(date, k) {
      step(date = new d3_date(+date), k);
      return date;
    }
    function range(t0, t1, dt) {
      var time = ceil(t0), times = [];
      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }
      return times;
    }
    function range_utc(t0, t1, dt) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_date = Date;
      }
    }
    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }
  function d3_time_interval_utc(method) {
    return function(date, k) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_date = Date;
      }
    };
  }
  d3_time.year = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function(date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function(date) {
    return date.getFullYear();
  });
  d3_time.years = d3_time.year.range;
  d3_time.years.utc = d3_time.year.utc.range;
  d3_time.day = d3_time_interval(function(date) {
    var day = new d3_date(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function(date, offset) {
    date.setDate(date.getDate() + offset);
  }, function(date) {
    return date.getDate() - 1;
  });
  d3_time.days = d3_time.day.range;
  d3_time.days.utc = d3_time.day.utc.range;
  d3_time.dayOfYear = function(date) {
    var year = d3_time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };
  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
    i = 7 - i;
    var interval = d3_time[day] = d3_time_interval(function(date) {
      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function(date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3_time[day + "s"] = interval.range;
    d3_time[day + "s"].utc = interval.utc.range;
    d3_time[day + "OfYear"] = function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3_time.week = d3_time.sunday;
  d3_time.weeks = d3_time.sunday.range;
  d3_time.weeks.utc = d3_time.sunday.utc.range;
  d3_time.weekOfYear = d3_time.sundayOfYear;
  function d3_locale_timeFormat(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    function d3_time_format(template) {
      var n = template.length;
      function format(date) {
        var string = [], i = -1, j = 0, c, p, f;
        while (++i < n) {
          if (template.charCodeAt(i) === 37) {
            string.push(template.slice(j, i));
            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
            string.push(c);
            j = i + 1;
          }
        }
        string.push(template.slice(j, i));
        return string.join("");
      }
      format.parse = function(string) {
        var d = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        }, i = d3_time_parse(d, template, string, 0);
        if (i != string.length) return null;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("W" in d || "U" in d) {
          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
          date.setFullYear(d.y, 0, 1);
          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
        } else date.setFullYear(d.y, d.m, d.d);
        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
        return localZ ? date._ : date;
      };
      format.toString = function() {
        return template;
      };
      return format;
    }
    function d3_time_parse(date, template, string, j) {
      var c, p, t, i = 0, n = template.length, m = string.length;
      while (i < n) {
        if (j >= m) return -1;
        c = template.charCodeAt(i++);
        if (c === 37) {
          t = template.charAt(i++);
          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
          if (!p || (j = p(date, string, j)) < 0) return -1;
        } else if (c != string.charCodeAt(j++)) {
          return -1;
        }
      }
      return j;
    }
    d3_time_format.utc = function(template) {
      var local = d3_time_format(template);
      function format(date) {
        try {
          d3_date = d3_date_utc;
          var utc = new d3_date();
          utc._ = date;
          return local(utc);
        } finally {
          d3_date = Date;
        }
      }
      format.parse = function(string) {
        try {
          d3_date = d3_date_utc;
          var date = local.parse(string);
          return date && date._;
        } finally {
          d3_date = Date;
        }
      };
      format.toString = local.toString;
      return format;
    };
    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
    locale_periods.forEach(function(p, i) {
      d3_time_periodLookup.set(p.toLowerCase(), i);
    });
    var d3_time_formats = {
      a: function(d) {
        return locale_shortDays[d.getDay()];
      },
      A: function(d) {
        return locale_days[d.getDay()];
      },
      b: function(d) {
        return locale_shortMonths[d.getMonth()];
      },
      B: function(d) {
        return locale_months[d.getMonth()];
      },
      c: d3_time_format(locale_dateTime),
      d: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      e: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      H: function(d, p) {
        return d3_time_formatPad(d.getHours(), p, 2);
      },
      I: function(d, p) {
        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
      },
      j: function(d, p) {
        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
      },
      L: function(d, p) {
        return d3_time_formatPad(d.getMilliseconds(), p, 3);
      },
      m: function(d, p) {
        return d3_time_formatPad(d.getMonth() + 1, p, 2);
      },
      M: function(d, p) {
        return d3_time_formatPad(d.getMinutes(), p, 2);
      },
      p: function(d) {
        return locale_periods[+(d.getHours() >= 12)];
      },
      S: function(d, p) {
        return d3_time_formatPad(d.getSeconds(), p, 2);
      },
      U: function(d, p) {
        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
      },
      w: function(d) {
        return d.getDay();
      },
      W: function(d, p) {
        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
      },
      x: d3_time_format(locale_date),
      X: d3_time_format(locale_time),
      y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
      },
      Y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
      },
      Z: d3_time_zone,
      "%": function() {
        return "%";
      }
    };
    var d3_time_parsers = {
      a: d3_time_parseWeekdayAbbrev,
      A: d3_time_parseWeekday,
      b: d3_time_parseMonthAbbrev,
      B: d3_time_parseMonth,
      c: d3_time_parseLocaleFull,
      d: d3_time_parseDay,
      e: d3_time_parseDay,
      H: d3_time_parseHour24,
      I: d3_time_parseHour24,
      j: d3_time_parseDayOfYear,
      L: d3_time_parseMilliseconds,
      m: d3_time_parseMonthNumber,
      M: d3_time_parseMinutes,
      p: d3_time_parseAmPm,
      S: d3_time_parseSeconds,
      U: d3_time_parseWeekNumberSunday,
      w: d3_time_parseWeekdayNumber,
      W: d3_time_parseWeekNumberMonday,
      x: d3_time_parseLocaleDate,
      X: d3_time_parseLocaleTime,
      y: d3_time_parseYear,
      Y: d3_time_parseFullYear,
      Z: d3_time_parseZone,
      "%": d3_time_parseLiteralPercent
    };
    function d3_time_parseWeekdayAbbrev(date, string, i) {
      d3_time_dayAbbrevRe.lastIndex = 0;
      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseWeekday(date, string, i) {
      d3_time_dayRe.lastIndex = 0;
      var n = d3_time_dayRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonthAbbrev(date, string, i) {
      d3_time_monthAbbrevRe.lastIndex = 0;
      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonth(date, string, i) {
      d3_time_monthRe.lastIndex = 0;
      var n = d3_time_monthRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseLocaleFull(date, string, i) {
      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
    }
    function d3_time_parseLocaleDate(date, string, i) {
      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
    }
    function d3_time_parseLocaleTime(date, string, i) {
      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
    }
    function d3_time_parseAmPm(date, string, i) {
      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
      return n == null ? -1 : (date.p = n, i);
    }
    return d3_time_format;
  }
  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }
  function d3_time_formatLookup(names) {
    var map = new d3_Map(), i = -1, n = names.length;
    while (++i < n) map.set(names[i].toLowerCase(), i);
    return map;
  }
  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }
  function d3_time_parseZone(date, string, i) {
    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
    i + 5) : -1;
  }
  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }
  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }
  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }
  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }
  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function d3_time_formatMulti(formats) {
    var n = formats.length, i = -1;
    while (++i < n) formats[i][0] = this(formats[i][0]);
    return function(date) {
      var i = 0, f = formats[i];
      while (!f[1](date)) f = formats[++i];
      return f[0](date);
    };
  }
  d3.locale = function(locale) {
    return {
      numberFormat: d3_locale_numberFormat(locale),
      timeFormat: d3_locale_timeFormat(locale)
    };
  };
  var d3_locale_enUS = d3.locale({
    decimal: ".",
    thousands: ",",
    grouping: [ 3 ],
    currency: [ "$", "" ],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: [ "AM", "PM" ],
    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
  });
  d3.format = d3_locale_enUS.numberFormat;
  d3.geo = {};
  function d3_adder() {}
  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function(y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
    },
    reset: function() {
      this.s = this.t = 0;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();
  function d3_adderSum(a, b, o) {
    var x = o.s = a + b, bv = x - a, av = x - bv;
    o.t = a - av + (b - bv);
  }
  d3.geo.stream = function(object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };
  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }
  var d3_geo_streamObjectType = {
    Feature: function(feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function(object, listener) {
      var features = object.features, i = -1, n = features.length;
      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function(object, listener) {
      listener.sphere();
    },
    Point: function(object, listener) {
      object = object.coordinates;
      listener.point(object[0], object[1], object[2]);
    },
    MultiPoint: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
    },
    LineString: function(object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function(object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function(object, listener) {
      var geometries = object.geometries, i = -1, n = geometries.length;
      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };
  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    listener.lineStart();
    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
    listener.lineEnd();
  }
  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1, n = coordinates.length;
    listener.polygonStart();
    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
    listener.polygonEnd();
  }
  d3.geo.area = function(object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };
  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function() {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function() {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };
  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;
    d3_geo_area.point = function(λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
      sinφ0 = Math.sin(φ);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }
    d3_geo_area.lineEnd = function() {
      nextPoint(λ00, φ00);
    };
  }
  function d3_geo_cartesian(spherical) {
    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
  }
  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function d3_geo_cartesianCross(a, b) {
    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
  }
  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function d3_geo_cartesianScale(vector, k) {
    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
  }
  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function d3_geo_spherical(cartesian) {
    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
  }
  function d3_geo_sphericalEqual(a, b) {
    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
  }
  d3.geo.bounds = function() {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function() {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };
    function point(λ, φ) {
      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }
    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }
        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }
      p0 = p, λ_ = λ;
    }
    function lineStart() {
      bound.point = linePoint;
    }
    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }
    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;
      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }
    function ringStart() {
      d3_geo_area.lineStart();
    }
    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }
    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }
    function compareRanges(a, b) {
      return a[0] - b[0];
    }
    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }
    return function(feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;
      if (n) {
        ranges.sort(compareRanges);
        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
          b = ranges[i];
          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }
        var best = -Infinity, dλ;
        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }
      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
    };
  }();
  d3.geo.centroid = function(object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [ NaN, NaN ];
    }
    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
  };
  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };
  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }
  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }
  function d3_geo_centroidLineStart() {
    var x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }
  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    d3_geo_centroid.lineEnd = function() {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }
  function d3_true() {
    return true;
  }
  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
    var subject = [], clip = [];
    segments.forEach(function(segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n, p0 = segment[0], p1 = segment[n];
      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();
        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
        listener.lineEnd();
        return;
      }
      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
      a.o = b;
      subject.push(a);
      clip.push(b);
      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
      a.o = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;
    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
      clip[i].e = entry = !entry;
    }
    var start = subject[0], points, point;
    while (1) {
      var current = start, isSubject = true;
      while (current.v) if ((current = current.n) === start) return;
      points = current.z;
      listener.lineStart();
      do {
        current.v = current.o.v = true;
        if (current.e) {
          if (isSubject) {
            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.n.x, 1, listener);
          }
          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;
            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.p.x, -1, listener);
          }
          current = current.p;
        }
        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);
      listener.lineEnd();
    }
  }
  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while (++i < n) {
      a.n = b = array[i];
      b.p = a;
      a = b;
    }
    a.n = b = array[0];
    b.p = a;
  }
  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }
  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
    return function(rotate, listener) {
      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
          if (segments.length) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
          } else if (clipStartInside) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }
          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function() {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };
      function point(λ, φ) {
        var point = rotate(λ, φ);
        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
      }
      function pointLine(λ, φ) {
        var point = rotate(λ, φ);
        line.point(point[0], point[1]);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }
      var segments;
      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
      function pointRing(λ, φ) {
        ring.push([ λ, φ ]);
        var point = rotate(λ, φ);
        ringListener.point(point[0], point[1]);
      }
      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;
        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1, i = -1, point;
          if (n > 0) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            while (++i < n) listener.point((point = segment[i])[0], point[1]);
            listener.lineEnd();
          }
          return;
        }
        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }
      return clip;
    };
  }
  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }
  function d3_geo_clipBufferListener() {
    var lines = [], line;
    return {
      lineStart: function() {
        lines.push(line = []);
      },
      point: function(λ, φ) {
        line.push([ λ, φ ]);
      },
      lineEnd: d3_noop,
      buffer: function() {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function() {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }
  function d3_geo_clipSort(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
  }
  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
    return {
      lineStart: function() {
        listener.lineStart();
        clean = 1;
      },
      point: function(λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
        if (abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }
        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function() {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }
  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;
    if (from == null) {
      φ = direction * halfπ;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (abs(from[0] - to[0]) > ε) {
      var s = from[0] < to[0] ? π : -π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }
  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
    d3_geo_areaRingSum.reset();
    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i], m = ring.length;
      if (!m) continue;
      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }
        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
    }
    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;
  }
  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }
    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(λ, φ) {
          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();
          if (v !== v0) {
            point2 = intersect(point0, point1);
            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }
          if (v !== v0) {
            clean = 0;
            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }
            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }
          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function() {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [ q, d3_geo_spherical(q1) ];
      }
    }
    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius, code = 0;
      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
      return code;
    }
  }
  function d3_geom_clipLine(x0, y0, x1, y1) {
    return function(line) {
      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      if (t0 > 0) line.a = {
        x: ax + t0 * dx,
        y: ay + t0 * dy
      };
      if (t1 < 1) line.b = {
        x: ax + t1 * dx,
        y: ay + t1 * dy
      };
      return line;
    };
  }
  var d3_geo_clipExtentMAX = 1e9;
  d3.geo.clipExtent = function() {
    var x0, y0, x1, y1, stream, clip, clipExtent = {
      stream: function(output) {
        if (stream) stream.valid = false;
        stream = clip(output);
        stream.valid = true;
        return stream;
      },
      extent: function(_) {
        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
        if (stream) stream.valid = false, stream = null;
        return clipExtent;
      }
    };
    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
  };
  function d3_geo_clipExtent(x0, y0, x1, y1) {
    return function(listener) {
      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          listener = bufferListener;
          segments = [];
          polygon = [];
          clean = true;
        },
        polygonEnd: function() {
          listener = listener_;
          segments = d3.merge(segments);
          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
          if (inside || visible) {
            listener.polygonStart();
            if (inside) {
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
            }
            if (visible) {
              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
            }
            listener.polygonEnd();
          }
          segments = polygon = ring = null;
        }
      };
      function insidePolygon(p) {
        var wn = 0, n = polygon.length, y = p[1];
        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];
            if (a[1] <= y) {
              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
            }
            a = b;
          }
        }
        return wn !== 0;
      }
      function interpolate(from, to, direction, listener) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }
      function pointVisible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }
      function point(x, y) {
        if (pointVisible(x, y)) listener.point(x, y);
      }
      var x__, y__, v__, x_, y_, v_, first, clean;
      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }
        clip.point = point;
        if (v_) listener.lineEnd();
      }
      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
        var v = pointVisible(x, y);
        if (polygon) ring.push([ x, y ]);
        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;
          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y); else {
            var l = {
              a: {
                x: x_,
                y: y_
              },
              b: {
                x: x,
                y: y
              }
            };
            if (clipLine(l)) {
              if (!v_) {
                listener.lineStart();
                listener.point(l.a.x, l.a.y);
              }
              listener.point(l.b.x, l.b.y);
              if (!v) listener.lineEnd();
              clean = false;
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
              clean = false;
            }
          }
        }
        x_ = x, y_ = y, v_ = v;
      }
      return clip;
    };
    function corner(p, direction) {
      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compare(a, b) {
      return comparePoints(a.x, b.x);
    }
    function comparePoints(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
  }
  function d3_geo_conic(projectAt) {
    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
    p.parallels = function(_) {
      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };
    return p;
  }
  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = ρ0 - y;
      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
    };
    return forward;
  }
  (d3.geo.conicEqualArea = function() {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;
  d3.geo.albers = function() {
    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
  };
  d3.geo.albersUsa = function() {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
    var point, pointStream = {
      point: function(x, y) {
        point = [ x, y ];
      }
    }, lower48Point, alaskaPoint, hawaiiPoint;
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
      return {
        point: function(x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function() {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function() {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function() {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function() {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function() {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      return albersUsa;
    };
    return albersUsa.scale(1070);
  };
  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
    }
  };
  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathArea.point = function(x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };
    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }
    d3_geo_pathArea.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }
  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function() {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };
    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }
    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      buffer.push("Z");
    }
    return stream;
  }
  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function() {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };
  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }
  function d3_geo_pathCentroidLineStart() {
    var x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }
  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }
  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
    d3_geo_pathCentroid.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };
    function point(x, y) {
      context.moveTo(x + pointRadius, y);
      context.arc(x, y, pointRadius, 0, τ);
    }
    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      context.lineTo(x, y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      context.closePath();
    }
    return stream;
  }
  function d3_geo_resample(project) {
    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
    function resample(stream) {
      return (maxDepth ? resampleRecursive : resampleNone)(stream);
    }
    function resampleNone(stream) {
      return d3_geo_transformPoint(stream, function(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      });
    }
    function resampleRecursive(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }
      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }
      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }
      return resample;
    }
    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }
    resample.precision = function(_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };
    return resample;
  }
  d3.geo.path = function() {
    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }
      return contextStream.result();
    }
    path.area = function(object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };
    path.centroid = function(object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
    };
    path.bounds = function(object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
    };
    path.projection = function(_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };
    path.context = function(_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };
    path.pointRadius = function(_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    function reset() {
      cacheStream = null;
      return path;
    }
    return path.projection(d3.geo.albersUsa()).context(null);
  };
  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function(x, y) {
      return project([ x * d3_degrees, y * d3_degrees ]);
    });
    return function(stream) {
      return d3_geo_projectionRadians(resample(stream));
    };
  }
  d3.geo.transform = function(methods) {
    return {
      stream: function(stream) {
        var transform = new d3_geo_transform(stream);
        for (var k in methods) transform[k] = methods[k];
        return transform;
      }
    };
  };
  function d3_geo_transform(stream) {
    this.stream = stream;
  }
  d3_geo_transform.prototype = {
    point: function(x, y) {
      this.stream.point(x, y);
    },
    sphere: function() {
      this.stream.sphere();
    },
    lineStart: function() {
      this.stream.lineStart();
    },
    lineEnd: function() {
      this.stream.lineEnd();
    },
    polygonStart: function() {
      this.stream.polygonStart();
    },
    polygonEnd: function() {
      this.stream.polygonEnd();
    }
  };
  function d3_geo_transformPoint(stream, point) {
    return {
      point: point,
      sphere: function() {
        stream.sphere();
      },
      lineStart: function() {
        stream.lineStart();
      },
      lineEnd: function() {
        stream.lineEnd();
      },
      polygonStart: function() {
        stream.polygonStart();
      },
      polygonEnd: function() {
        stream.polygonEnd();
      }
    };
  }
  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;
  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function() {
      return project;
    })();
  }
  function d3_geo_projectionMutator(projectAt) {
    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
      x = project(x, y);
      return [ x[0] * k + δx, δy - x[1] * k ];
    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [ point[0] * k + δx, δy - point[1] * k ];
    }
    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
    }
    projection.stream = function(output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };
    projection.clipAngle = function(_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };
    projection.clipExtent = function(_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
      return invalidate();
    };
    projection.scale = function(_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };
    projection.translate = function(_) {
      if (!arguments.length) return [ x, y ];
      x = +_[0];
      y = +_[1];
      return reset();
    };
    projection.center = function(_) {
      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };
    projection.rotate = function(_) {
      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };
    d3.rebind(projection, projectResample, "precision");
    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }
    function invalidate() {
      if (stream) stream.valid = false, stream = null;
      return projection;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }
  function d3_geo_projectionRadians(stream) {
    return d3_geo_transformPoint(stream, function(x, y) {
      stream.point(x * d3_radians, y * d3_radians);
    });
  }
  function d3_geo_equirectangular(λ, φ) {
    return [ λ, φ ];
  }
  (d3.geo.equirectangular = function() {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
  d3.geo.rotation = function(rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };
    return forward;
  };
  function d3_geo_identityRotation(λ, φ) {
    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
  }
  d3_geo_identityRotation.invert = d3_geo_equirectangular;
  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
  }
  function d3_geo_forwardRotationλ(δλ) {
    return function(λ, φ) {
      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
    };
  }
  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }
  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
    function rotation(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
    }
    rotation.invert = function(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
    };
    return rotation;
  }
  d3.geo.circle = function() {
    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
      interpolate(null, null, 1, {
        point: function(x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ ring ]
      };
    }
    circle.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };
    circle.angle = function(x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };
    circle.precision = function(_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };
    return circle.angle(90);
  };
  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius), sr = Math.sin(radius);
    return function(from, to, direction, listener) {
      var step = direction * precision;
      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * τ;
      } else {
        from = radius + direction * τ;
        to = radius - .5 * step;
      }
      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
      }
    };
  }
  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }
  d3.geo.distance = function(a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };
  d3.geo.graticule = function() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }
    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return abs(y % DY) > ε;
      }).map(y));
    }
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };
    graticule.outline = function() {
      return {
        type: "Polygon",
        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
      };
    };
    graticule.extent = function(_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };
    graticule.majorExtent = function(_) {
      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };
    graticule.minorExtent = function(_) {
      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };
    graticule.majorStep = function(_) {
      if (!arguments.length) return [ DX, DY ];
      DX = +_[0], DY = +_[1];
      return graticule;
    };
    graticule.minorStep = function(_) {
      if (!arguments.length) return [ dx, dy ];
      dx = +_[0], dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
  };
  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function(x) {
      return y.map(function(y) {
        return [ x, y ];
      });
    };
  }
  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function(y) {
      return x.map(function(x) {
        return [ x, y ];
      });
    };
  }
  function d3_source(d) {
    return d.source;
  }
  function d3_target(d) {
    return d.target;
  }
  d3.geo.greatArc = function() {
    var source = d3_source, source_, target = d3_target, target_;
    function greatArc() {
      return {
        type: "LineString",
        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
      };
    }
    greatArc.distance = function() {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };
    greatArc.source = function(_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.target = function(_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.precision = function() {
      return arguments.length ? greatArc : 0;
    };
    return greatArc;
  };
  d3.geo.interpolate = function(source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };
  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
    var interpolate = d ? function(t) {
      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
    } : function() {
      return [ x0 * d3_degrees, y0 * d3_degrees ];
    };
    interpolate.distance = d;
    return interpolate;
  }
  d3.geo.length = function(object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };
  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;
    d3_geo_length.point = function(λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };
    d3_geo_length.lineEnd = function() {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };
    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }
  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
    }
    azimuthal.invert = function(x, y) {
      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
    };
    return azimuthal;
  }
  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function(ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function() {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function() {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;
  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), t = function(φ) {
      return Math.tan(π / 4 + φ / 2);
    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
    if (!n) return d3_geo_mercator;
    function forward(λ, φ) {
      if (F > 0) {
        if (φ < -halfπ + ε) φ = -halfπ + ε;
      } else {
        if (φ > halfπ - ε) φ = halfπ - ε;
      }
      var ρ = F / Math.pow(t(φ), n);
      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
    };
    return forward;
  }
  (d3.geo.conicConformal = function() {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;
  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
    if (abs(n) < ε) return d3_geo_equirectangular;
    function forward(λ, φ) {
      var ρ = G - φ;
      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = G - y;
      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
    };
    return forward;
  }
  (d3.geo.conicEquidistant = function() {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function() {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;
  function d3_geo_mercator(λ, φ) {
    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
  }
  d3_geo_mercator.invert = function(x, y) {
    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
  };
  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
    m.scale = function() {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.translate = function() {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.clipExtent = function(_) {
      var v = clipExtent.apply(m, arguments);
      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(), t = translate();
          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
        }
      } else if (clipAuto) {
        v = null;
      }
      return v;
    };
    return m.clipExtent(null);
  }
  (d3.geo.mercator = function() {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function() {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function() {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function(ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function() {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;
  function d3_geo_transverseMercator(λ, φ) {
    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
  }
  d3_geo_transverseMercator.invert = function(x, y) {
    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
  };
  (d3.geo.transverseMercator = function() {
    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
    projection.center = function(_) {
      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
    };
    projection.rotate = function(_) {
      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
      [ _[0], _[1], _[2] - 90 ]);
    };
    return rotate([ 0, 0, 90 ]);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};
  function d3_geom_pointX(d) {
    return d[0];
  }
  function d3_geom_pointY(d) {
    return d[1];
  }
  d3.geom.hull = function(vertices) {
    var x = d3_geom_pointX, y = d3_geom_pointY;
    if (arguments.length) return hull(vertices);
    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
      for (i = 0; i < n; i++) {
        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
      }
      points.sort(d3_geom_hullOrder);
      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
      return polygon;
    }
    hull.x = function(_) {
      return arguments.length ? (x = _, hull) : x;
    };
    hull.y = function(_) {
      return arguments.length ? (y = _, hull) : y;
    };
    return hull;
  };
  function d3_geom_hullUpper(points) {
    var n = points.length, hull = [ 0, 1 ], hs = 2;
    for (var i = 2; i < n; i++) {
      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
      hull[hs++] = i;
    }
    return hull.slice(0, hs);
  }
  function d3_geom_hullOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }
  d3.geom.polygon = function(coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };
  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
  d3_geom_polygonPrototype.area = function() {
    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }
    return area * .5;
  };
  d3_geom_polygonPrototype.centroid = function(k) {
    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
    if (!arguments.length) k = -1 / (6 * this.area());
    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }
    return [ x * k, y * k ];
  };
  d3_geom_polygonPrototype.clip = function(subject) {
    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;
      while (++j < m) {
        d = input[j];
        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }
          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }
        c = d;
      }
      if (closed) subject.push(subject[0]);
      a = b;
    }
    return subject;
  };
  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }
  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [ x1 + ua * x21, y1 + ua * y21 ];
  }
  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0], b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }
  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
  function d3_geom_voronoiBeach() {
    d3_geom_voronoiRedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }
  function d3_geom_voronoiCreateBeach(site) {
    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
    beach.site = site;
    return beach;
  }
  function d3_geom_voronoiDetachBeach(beach) {
    d3_geom_voronoiDetachCircle(beach);
    d3_geom_voronoiBeaches.remove(beach);
    d3_geom_voronoiBeachPool.push(beach);
    d3_geom_voronoiRedBlackNode(beach);
  }
  function d3_geom_voronoiRemoveBeach(beach) {
    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
      x: x,
      y: y
    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
    d3_geom_voronoiDetachBeach(beach);
    var lArc = previous;
    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
      previous = lArc.P;
      disappearing.unshift(lArc);
      d3_geom_voronoiDetachBeach(lArc);
      lArc = previous;
    }
    disappearing.unshift(lArc);
    d3_geom_voronoiDetachCircle(lArc);
    var rArc = next;
    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
      next = rArc.N;
      disappearing.push(rArc);
      d3_geom_voronoiDetachBeach(rArc);
      rArc = next;
    }
    disappearing.push(rArc);
    d3_geom_voronoiDetachCircle(rArc);
    var nArcs = disappearing.length, iArc;
    for (iArc = 1; iArc < nArcs; ++iArc) {
      rArc = disappearing[iArc];
      lArc = disappearing[iArc - 1];
      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
    }
    lArc = disappearing[0];
    rArc = disappearing[nArcs - 1];
    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiAddBeach(site) {
    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
    while (node) {
      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
      if (dxl > ε) node = node.L; else {
        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
        if (dxr > ε) {
          if (!node.R) {
            lArc = node;
            break;
          }
          node = node.R;
        } else {
          if (dxl > -ε) {
            lArc = node.P;
            rArc = node;
          } else if (dxr > -ε) {
            lArc = node;
            rArc = node.N;
          } else {
            lArc = rArc = node;
          }
          break;
        }
      }
    }
    var newArc = d3_geom_voronoiCreateBeach(site);
    d3_geom_voronoiBeaches.insert(lArc, newArc);
    if (!lArc && !rArc) return;
    if (lArc === rArc) {
      d3_geom_voronoiDetachCircle(lArc);
      rArc = d3_geom_voronoiCreateBeach(lArc.site);
      d3_geom_voronoiBeaches.insert(newArc, rArc);
      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      d3_geom_voronoiAttachCircle(lArc);
      d3_geom_voronoiAttachCircle(rArc);
      return;
    }
    if (!rArc) {
      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      return;
    }
    d3_geom_voronoiDetachCircle(lArc);
    d3_geom_voronoiDetachCircle(rArc);
    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
      x: (cy * hb - by * hc) / d + ax,
      y: (bx * hc - cx * hb) / d + ay
    };
    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
    if (!pby2) return rfocx;
    var lArc = arc.P;
    if (!lArc) return -Infinity;
    site = lArc.site;
    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
    if (!plby2) return lfocx;
    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
    return (rfocx + lfocx) / 2;
  }
  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
    var rArc = arc.N;
    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
    var site = arc.site;
    return site.y === directrix ? site.x : Infinity;
  }
  function d3_geom_voronoiCell(site) {
    this.site = site;
    this.edges = [];
  }
  d3_geom_voronoiCell.prototype.prepare = function() {
    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
    while (iHalfEdge--) {
      edge = halfEdges[iHalfEdge].edge;
      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
    }
    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
    return halfEdges.length;
  };
  function d3_geom_voronoiCloseCells(extent) {
    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
    while (iCell--) {
      cell = cells[iCell];
      if (!cell || !cell.prepare()) continue;
      halfEdges = cell.edges;
      nHalfEdges = halfEdges.length;
      iHalfEdge = 0;
      while (iHalfEdge < nHalfEdges) {
        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
            x: x0,
            y: abs(x2 - x0) < ε ? y2 : y1
          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
            x: abs(y2 - y1) < ε ? x2 : x1,
            y: y1
          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
            x: x1,
            y: abs(x2 - x1) < ε ? y2 : y0
          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
            x: abs(y2 - y0) < ε ? x2 : x0,
            y: y0
          } : null), cell.site, null));
          ++nHalfEdges;
        }
      }
    }
  }
  function d3_geom_voronoiHalfEdgeOrder(a, b) {
    return b.angle - a.angle;
  }
  function d3_geom_voronoiCircle() {
    d3_geom_voronoiRedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }
  function d3_geom_voronoiAttachCircle(arc) {
    var lArc = arc.P, rArc = arc.N;
    if (!lArc || !rArc) return;
    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
    if (lSite === rSite) return;
    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
    var d = 2 * (ax * cy - ay * cx);
    if (d >= -ε2) return;
    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
    circle.arc = arc;
    circle.site = cSite;
    circle.x = x + bx;
    circle.y = cy + Math.sqrt(x * x + y * y);
    circle.cy = cy;
    arc.circle = circle;
    var before = null, node = d3_geom_voronoiCircles._;
    while (node) {
      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
        if (node.L) node = node.L; else {
          before = node.P;
          break;
        }
      } else {
        if (node.R) node = node.R; else {
          before = node;
          break;
        }
      }
    }
    d3_geom_voronoiCircles.insert(before, circle);
    if (!before) d3_geom_voronoiFirstCircle = circle;
  }
  function d3_geom_voronoiDetachCircle(arc) {
    var circle = arc.circle;
    if (circle) {
      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
      d3_geom_voronoiCircles.remove(circle);
      d3_geom_voronoiCirclePool.push(circle);
      d3_geom_voronoiRedBlackNode(circle);
      arc.circle = null;
    }
  }
  function d3_geom_voronoiClipEdges(extent) {
    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
    while (i--) {
      e = edges[i];
      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
        e.a = e.b = null;
        edges.splice(i, 1);
      }
    }
  }
  function d3_geom_voronoiConnectEdge(edge, extent) {
    var vb = edge.b;
    if (vb) return true;
    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
    if (ry === ly) {
      if (fx < x0 || fx >= x1) return;
      if (lx > rx) {
        if (!va) va = {
          x: fx,
          y: y0
        }; else if (va.y >= y1) return;
        vb = {
          x: fx,
          y: y1
        };
      } else {
        if (!va) va = {
          x: fx,
          y: y1
        }; else if (va.y < y0) return;
        vb = {
          x: fx,
          y: y0
        };
      }
    } else {
      fm = (lx - rx) / (ry - ly);
      fb = fy - fm * fx;
      if (fm < -1 || fm > 1) {
        if (lx > rx) {
          if (!va) va = {
            x: (y0 - fb) / fm,
            y: y0
          }; else if (va.y >= y1) return;
          vb = {
            x: (y1 - fb) / fm,
            y: y1
          };
        } else {
          if (!va) va = {
            x: (y1 - fb) / fm,
            y: y1
          }; else if (va.y < y0) return;
          vb = {
            x: (y0 - fb) / fm,
            y: y0
          };
        }
      } else {
        if (ly < ry) {
          if (!va) va = {
            x: x0,
            y: fm * x0 + fb
          }; else if (va.x >= x1) return;
          vb = {
            x: x1,
            y: fm * x1 + fb
          };
        } else {
          if (!va) va = {
            x: x1,
            y: fm * x1 + fb
          }; else if (va.x < x0) return;
          vb = {
            x: x0,
            y: fm * x0 + fb
          };
        }
      }
    }
    edge.a = va;
    edge.b = vb;
    return true;
  }
  function d3_geom_voronoiEdge(lSite, rSite) {
    this.l = lSite;
    this.r = rSite;
    this.a = this.b = null;
  }
  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, rSite);
    d3_geom_voronoiEdges.push(edge);
    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
    return edge;
  }
  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, null);
    edge.a = va;
    edge.b = vb;
    d3_geom_voronoiEdges.push(edge);
    return edge;
  }
  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
    if (!edge.a && !edge.b) {
      edge.a = vertex;
      edge.l = lSite;
      edge.r = rSite;
    } else if (edge.l === rSite) {
      edge.b = vertex;
    } else {
      edge.a = vertex;
    }
  }
  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
    var va = edge.a, vb = edge.b;
    this.edge = edge;
    this.site = lSite;
    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
  }
  d3_geom_voronoiHalfEdge.prototype = {
    start: function() {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function() {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  };
  function d3_geom_voronoiRedBlackTree() {
    this._ = null;
  }
  function d3_geom_voronoiRedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }
  d3_geom_voronoiRedBlackTree.prototype = {
    insert: function(after, node) {
      var parent, grandpa, uncle;
      if (after) {
        node.P = after;
        node.N = after.N;
        if (after.N) after.N.P = node;
        after.N = node;
        if (after.R) {
          after = after.R;
          while (after.L) after = after.L;
          after.L = node;
        } else {
          after.R = node;
        }
        parent = after;
      } else if (this._) {
        after = d3_geom_voronoiRedBlackFirst(this._);
        node.P = null;
        node.N = after;
        after.P = after.L = node;
        parent = after;
      } else {
        node.P = node.N = null;
        this._ = node;
        parent = null;
      }
      node.L = node.R = null;
      node.U = parent;
      node.C = true;
      after = node;
      while (parent && parent.C) {
        grandpa = parent.U;
        if (parent === grandpa.L) {
          uncle = grandpa.R;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.R) {
              d3_geom_voronoiRedBlackRotateLeft(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
          }
        } else {
          uncle = grandpa.L;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.L) {
              d3_geom_voronoiRedBlackRotateRight(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
          }
        }
        parent = after.U;
      }
      this._.C = false;
    },
    remove: function(node) {
      if (node.N) node.N.P = node.P;
      if (node.P) node.P.N = node.N;
      node.N = node.P = null;
      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
      if (parent) {
        if (parent.L === node) parent.L = next; else parent.R = next;
      } else {
        this._ = next;
      }
      if (left && right) {
        red = next.C;
        next.C = node.C;
        next.L = left;
        left.U = next;
        if (next !== right) {
          parent = next.U;
          next.U = node.U;
          node = next.R;
          parent.L = node;
          next.R = right;
          right.U = next;
        } else {
          next.U = parent;
          parent = next;
          node = next.R;
        }
      } else {
        red = node.C;
        node = next;
      }
      if (node) node.U = parent;
      if (red) return;
      if (node && node.C) {
        node.C = false;
        return;
      }
      do {
        if (node === this._) break;
        if (node === parent.L) {
          sibling = parent.R;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            sibling = parent.R;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.R || !sibling.R.C) {
              sibling.L.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateRight(this, sibling);
              sibling = parent.R;
            }
            sibling.C = parent.C;
            parent.C = sibling.R.C = false;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            node = this._;
            break;
          }
        } else {
          sibling = parent.L;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            sibling = parent.L;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.L || !sibling.L.C) {
              sibling.R.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
              sibling = parent.L;
            }
            sibling.C = parent.C;
            parent.C = sibling.L.C = false;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            node = this._;
            break;
          }
        }
        sibling.C = true;
        node = parent;
        parent = parent.U;
      } while (!node.C);
      if (node) node.C = false;
    }
  };
  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
    var p = node, q = node.R, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.R = q.L;
    if (p.R) p.R.U = p;
    q.L = p;
  }
  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
    var p = node, q = node.L, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.L = q.R;
    if (p.L) p.L.U = p;
    q.R = p;
  }
  function d3_geom_voronoiRedBlackFirst(node) {
    while (node.L) node = node.L;
    return node;
  }
  function d3_geom_voronoi(sites, bbox) {
    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
    d3_geom_voronoiEdges = [];
    d3_geom_voronoiCells = new Array(sites.length);
    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
    while (true) {
      circle = d3_geom_voronoiFirstCircle;
      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
        if (site.x !== x0 || site.y !== y0) {
          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
          d3_geom_voronoiAddBeach(site);
          x0 = site.x, y0 = site.y;
        }
        site = sites.pop();
      } else if (circle) {
        d3_geom_voronoiRemoveBeach(circle.arc);
      } else {
        break;
      }
    }
    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
    var diagram = {
      cells: d3_geom_voronoiCells,
      edges: d3_geom_voronoiEdges
    };
    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
    return diagram;
  }
  function d3_geom_voronoiVertexOrder(a, b) {
    return b.y - a.y || b.x - a.x;
  }
  d3.geom.voronoi = function(points) {
    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
    if (points) return voronoi(points);
    function voronoi(data) {
      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
          var s = e.start();
          return [ s.x, s.y ];
        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
        polygon.point = data[i];
      });
      return polygons;
    }
    function sites(data) {
      return data.map(function(d, i) {
        return {
          x: Math.round(fx(d, i) / ε) * ε,
          y: Math.round(fy(d, i) / ε) * ε,
          i: i
        };
      });
    }
    voronoi.links = function(data) {
      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
        return edge.l && edge.r;
      }).map(function(edge) {
        return {
          source: data[edge.l.i],
          target: data[edge.r.i]
        };
      });
    };
    voronoi.triangles = function(data) {
      var triangles = [];
      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
        while (++j < m) {
          e0 = e1;
          s0 = s1;
          e1 = edges[j].edge;
          s1 = e1.l === site ? e1.r : e1.l;
          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
          }
        }
      });
      return triangles;
    };
    voronoi.x = function(_) {
      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
    };
    voronoi.y = function(_) {
      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
    };
    voronoi.clipExtent = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
      return voronoi;
    };
    voronoi.size = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
    };
    return voronoi;
  };
  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
  function d3_geom_voronoiTriangleArea(a, b, c) {
    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
  }
  d3.geom.delaunay = function(vertices) {
    return d3.geom.voronoi().triangles(vertices);
  };
  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;
      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }
      return quadtree(points);
    }
    function quadtree(data) {
      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }
      var dx = x2_ - x1_, dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
      function insert(n, d, x, y, x1, y1, x2, y2) {
        if (isNaN(x) || isNaN(y)) return;
        if (n.leaf) {
          var nx = n.x, ny = n.y;
          if (nx != null) {
            if (abs(nx - x) + abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              var nPoint = n.point;
              n.x = n.y = n.point = null;
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }
      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
        n.leaf = false;
        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
        if (right) x1 = xm; else x2 = xm;
        if (below) y1 = ym; else y2 = ym;
        insert(n, d, x, y, x1, y1, x2, y2);
      }
      var root = d3_geom_quadtreeNode();
      root.add = function(d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };
      root.visit = function(f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };
      root.find = function(point) {
        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
      };
      i = -1;
      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }
        --i;
      } else data.forEach(root.add);
      xs = ys = data = d = null;
      return root;
    }
    quadtree.x = function(_) {
      return arguments.length ? (x = _, quadtree) : x;
    };
    quadtree.y = function(_) {
      return arguments.length ? (y = _, quadtree) : y;
    };
    quadtree.extent = function(_) {
      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
      y2 = +_[1][1];
      return quadtree;
    };
    quadtree.size = function(_) {
      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };
    return quadtree;
  };
  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }
  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }
  function d3_geom_quadtreeNode() {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }
  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }
  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
    var minDistance2 = Infinity, closestPoint;
    (function find(node, x1, y1, x2, y2) {
      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
      if (point = node.point) {
        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
        if (distance2 < minDistance2) {
          var distance = Math.sqrt(minDistance2 = distance2);
          x0 = x - distance, y0 = y - distance;
          x3 = x + distance, y3 = y + distance;
          closestPoint = point;
        }
      }
      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
        if (node = children[i & 3]) switch (i & 3) {
         case 0:
          find(node, x1, y1, xm, ym);
          break;

         case 1:
          find(node, xm, y1, x2, ym);
          break;

         case 2:
          find(node, x1, ym, xm, y2);
          break;

         case 3:
          find(node, xm, ym, x2, y2);
          break;
        }
      }
    })(root, x0, y0, x3, y3);
    return closestPoint;
  }
  d3.interpolateRgb = d3_interpolateRgb;
  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
    return function(t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }
  d3.interpolateObject = d3_interpolateObject;
  function d3_interpolateObject(a, b) {
    var i = {}, c = {}, k;
    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }
    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }
    return function(t) {
      for (k in i) c[k] = i[k](t);
      return c;
    };
  }
  d3.interpolateNumber = d3_interpolateNumber;
  function d3_interpolateNumber(a, b) {
    a = +a, b = +b;
    return function(t) {
      return a * (1 - t) + b * t;
    };
  }
  d3.interpolateString = d3_interpolateString;
  function d3_interpolateString(a, b) {
    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
    a = a + "", b = b + "";
    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.slice(bi, bs);
        if (s[i]) s[i] += bs; else s[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm; else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({
          i: i,
          x: d3_interpolateNumber(am, bm)
        });
      }
      bi = d3_interpolate_numberB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.slice(bi);
      if (s[i]) s[i] += bs; else s[++i] = bs;
    }
    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
      return b(t) + "";
    }) : function() {
      return b;
    } : (b = q.length, function(t) {
      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    });
  }
  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
  d3.interpolate = d3_interpolate;
  function d3_interpolate(a, b) {
    var i = d3.interpolators.length, f;
    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
    return f;
  }
  d3.interpolators = [ function(a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
  } ];
  d3.interpolateArray = d3_interpolateArray;
  function d3_interpolateArray(a, b) {
    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
    for (;i < na; ++i) c[i] = a[i];
    for (;i < nb; ++i) c[i] = b[i];
    return function(t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);
      return c;
    };
  }
  var d3_ease_default = function() {
    return d3_identity;
  };
  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function() {
      return d3_ease_quad;
    },
    cubic: function() {
      return d3_ease_cubic;
    },
    sin: function() {
      return d3_ease_sin;
    },
    exp: function() {
      return d3_ease_exp;
    },
    circle: function() {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function() {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function(f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });
  d3.ease = function(name) {
    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
  };
  function d3_ease_clamp(f) {
    return function(t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }
  function d3_ease_reverse(f) {
    return function(t) {
      return 1 - f(1 - t);
    };
  }
  function d3_ease_reflect(f) {
    return function(t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }
  function d3_ease_quad(t) {
    return t * t;
  }
  function d3_ease_cubic(t) {
    return t * t * t;
  }
  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t, t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }
  function d3_ease_poly(e) {
    return function(t) {
      return Math.pow(t, e);
    };
  }
  function d3_ease_sin(t) {
    return 1 - Math.cos(t * halfπ);
  }
  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }
  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
    return function(t) {
      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
    };
  }
  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function(t) {
      return t * t * ((s + 1) * t - s);
    };
  }
  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }
  d3.interpolateHcl = d3_interpolateHcl;
  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }
  d3.interpolateHsl = d3_interpolateHsl;
  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }
  d3.interpolateLab = d3_interpolateLab;
  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
    return function(t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }
  d3.interpolateRound = d3_interpolateRound;
  function d3_interpolateRound(a, b) {
    b -= a;
    return function(t) {
      return Math.round(a + b * t);
    };
  }
  d3.transform = function(string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function(string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }
      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };
  function d3_transform(m) {
    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }
    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [ m.e, m.f ];
    this.scale = [ kx, ky ];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }
  d3_transform.prototype.toString = function() {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }
  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));
    if (k) {
      a[0] /= k;
      a[1] /= k;
    }
    return k;
  }
  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }
  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;
  function d3_interpolateTransformPop(s) {
    return s.length ? s.pop() + "," : "";
  }
  function d3_interpolateTranslate(ta, tb, s, q) {
    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
      var i = s.push("translate(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: i - 2,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    }
  }
  function d3_interpolateRotate(ra, rb, s, q) {
    if (ra !== rb) {
      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
    }
  }
  function d3_interpolateSkew(wa, wb, s, q) {
    if (wa !== wb) {
      q.push({
        i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
    }
  }
  function d3_interpolateScale(ka, kb, s, q) {
    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
      var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: i - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] !== 1 || kb[1] !== 1) {
      s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
    }
  }
  function d3_interpolateTransform(a, b) {
    var s = [], q = [];
    a = d3.transform(a), b = d3.transform(b);
    d3_interpolateTranslate(a.translate, b.translate, s, q);
    d3_interpolateRotate(a.rotate, b.rotate, s, q);
    d3_interpolateSkew(a.skew, b.skew, s, q);
    d3_interpolateScale(a.scale, b.scale, s, q);
    a = b = null;
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  function d3_uninterpolateNumber(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function(x) {
      return (x - a) / b;
    };
  }
  function d3_uninterpolateClamp(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function(x) {
      return Math.max(0, Math.min(1, (x - a) / b));
    };
  }
  d3.layout = {};
  d3.layout.bundle = function() {
    return function(links) {
      var paths = [], i = -1, n = links.length;
      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
      return paths;
    };
  };
  function d3_layout_bundlePath(link) {
    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }
    var k = points.length;
    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }
    return points;
  }
  function d3_layout_bundleAncestors(node) {
    var ancestors = [], parent = node.parent;
    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }
    ancestors.push(node);
    return ancestors;
  }
  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }
    return sharedNode;
  }
  d3.layout.chord = function() {
    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
    function relayout() {
      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
      chords = [];
      groups = [];
      k = 0, i = -1;
      while (++i < n) {
        x = 0, j = -1;
        while (++j < n) {
          x += matrix[i][j];
        }
        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }
      if (sortGroups) {
        groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }
      if (sortSubgroups) {
        subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }
      k = (τ - padding * n) / k;
      x = 0, i = -1;
      while (++i < n) {
        x0 = x, j = -1;
        while (++j < n) {
          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }
        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: groupSums[di]
        };
        x += padding;
      }
      i = -1;
      while (++i < n) {
        j = i - 1;
        while (++j < n) {
          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }
      if (sortChords) resort();
    }
    function resort() {
      chords.sort(function(a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }
    chord.matrix = function(x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };
    chord.padding = function(x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };
    chord.sortGroups = function(x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };
    chord.sortSubgroups = function(x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };
    chord.sortChords = function(x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };
    chord.chords = function() {
      if (!chords) relayout();
      return chords;
    };
    chord.groups = function() {
      if (!groups) relayout();
      return groups;
    };
    return chord;
  };
  d3.layout.force = function() {
    var force = {}, event = d3.dispatch("start", "tick", "end"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
    function repulse(node) {
      return function(quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
          if (dw * dw / theta2 < dn) {
            if (dn < chargeDistance2) {
              var k = quad.charge / dn;
              node.px -= dx * k;
              node.py -= dy * k;
            }
            return true;
          }
          if (quad.point && dn && dn < chargeDistance2) {
            var k = quad.pointCharge / dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }
        return !quad.charge;
      };
    }
    force.tick = function() {
      if ((alpha *= .99) < .005) {
        timer = null;
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }
      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;
        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }
      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }
      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;
        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }
      i = -1;
      while (++i < n) {
        o = nodes[i];
        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }
      event.tick({
        type: "tick",
        alpha: alpha
      });
    };
    force.nodes = function(x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };
    force.links = function(x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };
    force.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };
    force.linkDistance = function(x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };
    force.distance = force.linkDistance;
    force.linkStrength = function(x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };
    force.friction = function(x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };
    force.charge = function(x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };
    force.chargeDistance = function(x) {
      if (!arguments.length) return Math.sqrt(chargeDistance2);
      chargeDistance2 = x * x;
      return force;
    };
    force.gravity = function(x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };
    force.theta = function(x) {
      if (!arguments.length) return Math.sqrt(theta2);
      theta2 = x * x;
      return force;
    };
    force.alpha = function(x) {
      if (!arguments.length) return alpha;
      x = +x;
      if (alpha) {
        if (x > 0) {
          alpha = x;
        } else {
          timer.c = null, timer.t = NaN, timer = null;
          event.end({
            type: "end",
            alpha: alpha = 0
          });
        }
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        timer = d3_timer(force.tick);
      }
      return force;
    };
    force.start = function() {
      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }
      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }
      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }
      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
      function position(dimension, size) {
        if (!neighbors) {
          neighbors = new Array(n);
          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }
          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }
        var candidates = neighbors[i], j = -1, l = candidates.length, x;
        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
        return Math.random() * size;
      }
      return force.resume();
    };
    force.resume = function() {
      return force.alpha(.1);
    };
    force.stop = function() {
      return force.alpha(0);
    };
    force.drag = function() {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };
    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }
    return d3.rebind(force, event, "on");
  };
  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }
  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }
  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }
  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }
  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0, cy = 0;
    quad.charge = 0;
    if (!quad.leaf) {
      var nodes = quad.nodes, n = nodes.length, i = -1, c;
      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }
    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }
      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }
    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }
  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
  d3.layout.hierarchy = function() {
    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
    function hierarchy(root) {
      var stack = [ root ], nodes = [], node;
      root.depth = 0;
      while ((node = stack.pop()) != null) {
        nodes.push(node);
        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
          var n, childs, child;
          while (--n >= 0) {
            stack.push(child = childs[n]);
            child.parent = node;
            child.depth = node.depth + 1;
          }
          if (value) node.value = 0;
          node.children = childs;
        } else {
          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
          delete node.children;
        }
      }
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var childs, parent;
        if (sort && (childs = node.children)) childs.sort(sort);
        if (value && (parent = node.parent)) parent.value += node.value;
      });
      return nodes;
    }
    hierarchy.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };
    hierarchy.children = function(x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };
    hierarchy.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };
    hierarchy.revalue = function(root) {
      if (value) {
        d3_layout_hierarchyVisitBefore(root, function(node) {
          if (node.children) node.value = 0;
        });
        d3_layout_hierarchyVisitAfter(root, function(node) {
          var parent;
          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
          if (parent = node.parent) parent.value += node.value;
        });
      }
      return root;
    };
    return hierarchy;
  };
  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }
  function d3_layout_hierarchyVisitBefore(node, callback) {
    var nodes = [ node ];
    while ((node = nodes.pop()) != null) {
      callback(node);
      if ((children = node.children) && (n = children.length)) {
        var n, children;
        while (--n >= 0) nodes.push(children[n]);
      }
    }
  }
  function d3_layout_hierarchyVisitAfter(node, callback) {
    var nodes = [ node ], nodes2 = [];
    while ((node = nodes.pop()) != null) {
      nodes2.push(node);
      if ((children = node.children) && (n = children.length)) {
        var i = -1, n, children;
        while (++i < n) nodes.push(children[i]);
      }
    }
    while ((node = nodes2.pop()) != null) {
      callback(node);
    }
  }
  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }
  function d3_layout_hierarchyValue(d) {
    return d.value;
  }
  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }
  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function(parent) {
      return (parent.children || []).map(function(child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }
  d3.layout.partition = function() {
    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;
      if (children && (n = children.length)) {
        var i = -1, n, c, d;
        dx = node.value ? dx / node.value : 0;
        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }
    function depth(node) {
      var children = node.children, d = 0;
      if (children && (n = children.length)) {
        var i = -1, n;
        while (++i < n) d = Math.max(d, depth(children[i]));
      }
      return 1 + d;
    }
    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }
    partition.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };
    return d3_layout_hierarchyRebind(partition, hierarchy);
  };
  d3.layout.pie = function() {
    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
    function pie(data) {
      var n = data.length, values = data.map(function(d, i) {
        return +value.call(pie, d, i);
      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
        return values[j] - values[i];
      } : function(i, j) {
        return sort(data[i], data[j]);
      });
      index.forEach(function(i) {
        arcs[i] = {
          data: data[i],
          value: v = values[i],
          startAngle: a,
          endAngle: a += v * k + pa,
          padAngle: p
        };
      });
      return arcs;
    }
    pie.value = function(_) {
      if (!arguments.length) return value;
      value = _;
      return pie;
    };
    pie.sort = function(_) {
      if (!arguments.length) return sort;
      sort = _;
      return pie;
    };
    pie.startAngle = function(_) {
      if (!arguments.length) return startAngle;
      startAngle = _;
      return pie;
    };
    pie.endAngle = function(_) {
      if (!arguments.length) return endAngle;
      endAngle = _;
      return pie;
    };
    pie.padAngle = function(_) {
      if (!arguments.length) return padAngle;
      padAngle = _;
      return pie;
    };
    return pie;
  };
  var d3_layout_pieSortByValue = {};
  d3.layout.stack = function() {
    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
    function stack(data, index) {
      if (!(n = data.length)) return data;
      var series = data.map(function(d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function(d) {
        return d.map(function(v, i) {
          return [ x.call(stack, v, i), y.call(stack, v, i) ];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var m = series[0].length, n, i, j, o;
      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }
      return data;
    }
    stack.values = function(x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };
    stack.order = function(x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };
    stack.offset = function(x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };
    stack.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };
    stack.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };
    stack.out = function(z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };
    return stack;
  };
  function d3_layout_stackX(d) {
    return d.x;
  }
  function d3_layout_stackY(d) {
    return d.y;
  }
  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }
  var d3_layout_stackOrders = d3.map({
    "inside-out": function(data) {
      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
        return max[a] - max[b];
      }), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = index[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    },
    reverse: function(data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function(data) {
      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o > max) max = o;
        sums.push(o);
      }
      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }
      return y0;
    },
    wiggle: function(data) {
      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
      y0[0] = o = o0 = 0;
      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }
          s2 += s3 * data[i][j][1];
        }
        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }
      for (j = 0; j < m; ++j) y0[j] -= o0;
      return y0;
    },
    expand: function(data) {
      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
      }
      for (j = 0; j < m; ++j) y0[j] = 0;
      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });
  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }
  function d3_layout_stackOffsetZero(data) {
    var j = -1, m = data[0].length, y0 = [];
    while (++j < m) y0[j] = 0;
    return y0;
  }
  function d3_layout_stackMaxIndex(array) {
    var i = 1, j = 0, v = array[0][1], k, n = array.length;
    for (;i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }
    return j;
  }
  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }
  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }
  d3.layout.histogram = function() {
    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
    function histogram(data, i) {
      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }
      if (m > 0) {
        i = -1;
        while (++i < n) {
          x = values[i];
          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }
      return bins;
    }
    histogram.value = function(x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };
    histogram.range = function(x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };
    histogram.bins = function(x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function(range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };
    histogram.frequency = function(x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };
    return histogram;
  };
  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }
  function d3_layout_histogramBinFixed(range, n) {
    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
    while (++x <= n) f[x] = m * x + b;
    return f;
  }
  function d3_layout_histogramRange(values) {
    return [ d3.min(values), d3.max(values) ];
  }
  d3.layout.pack = function() {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_hierarchyVisitAfter(root, function(d) {
        d.r = +r(d.value);
      });
      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r += dr;
        });
        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r -= dr;
        });
      }
      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }
    pack.size = function(_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };
    pack.radius = function(_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };
    pack.padding = function(_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };
    return d3_layout_hierarchyRebind(pack, hierarchy);
  };
  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }
  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }
  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }
  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }
  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }
    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);
    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);
      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;
        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0, s1 = 1, s2 = 1;
          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }
          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }
          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }
    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }
    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }
  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }
  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }
  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;
    if (children) {
      var i = -1, n = children.length;
      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }
  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
    if (db && (dx || dy)) {
      var da = b.r + c.r, dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }
  d3.layout.tree = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
      d3_layout_hierarchyVisitBefore(root1, secondWalk);
      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
        var left = root0, right = root0, bottom = root0;
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return nodes;
    }
    function wrapTree(root0) {
      var root1 = {
        A: null,
        children: [ root0 ]
      }, queue = [ root1 ], node1;
      while ((node1 = queue.pop()) != null) {
        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
          queue.push((children[i] = child = {
            _: children[i],
            parent: node1,
            children: (child = children[i].children) && child.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: i
          }).a = child);
        }
      }
      return root1.children[0];
    }
    function firstWalk(v) {
      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
      if (children.length) {
        d3_layout_treeShift(v);
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }
      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
          vom = d3_layout_treeLeft(vom);
          vop = d3_layout_treeRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (shift > 0) {
            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        if (vim && !d3_layout_treeRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }
        if (vip && !d3_layout_treeLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }
      return ancestor;
    }
    function sizeNode(node) {
      node.x *= size[0];
      node.y = node.depth * size[1];
    }
    tree.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };
    tree.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null ? sizeNode : null;
      return tree;
    };
    tree.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) == null ? null : sizeNode;
      return tree;
    };
    return d3_layout_hierarchyRebind(tree, hierarchy);
  };
  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }
  function d3_layout_treeLeft(v) {
    var children = v.children;
    return children.length ? children[0] : v.t;
  }
  function d3_layout_treeRight(v) {
    var children = v.children, n;
    return (n = children.length) ? children[n - 1] : v.t;
  }
  function d3_layout_treeMove(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }
  function d3_layout_treeShift(v) {
    var shift = 0, change = 0, children = v.children, i = children.length, w;
    while (--i >= 0) {
      w = children[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }
  function d3_layout_treeAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }
  d3.layout.cluster = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var children = node.children;
        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }
    cluster.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };
    cluster.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };
    cluster.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };
    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };
  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function(child) {
      return child.y;
    });
  }
  function d3_layout_clusterX(children) {
    return children.reduce(function(x, child) {
      return x + child.x;
    }, 0) / children.length;
  }
  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }
  function d3_layout_clusterRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }
  d3.layout.treemap = function() {
    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
    function scale(children, k) {
      var i = -1, n = children.length, child, area;
      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }
    function squarify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;
          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }
        children.forEach(squarify);
      }
    }
    function stickify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), remaining = children.slice(), child, row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;
          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }
        children.forEach(stickify);
      }
    }
    function worst(row, u) {
      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }
      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }
    function position(row, u, rect, flush) {
      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }
        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }
        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }
    function treemap(d) {
      var nodes = stickies || hierarchy(d), root = nodes[0];
      root.x = root.y = 0;
      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;
      if (stickies) hierarchy.revalue(root);
      scale([ root ], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }
    treemap.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };
    treemap.padding = function(x) {
      if (!arguments.length) return padding;
      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
      }
      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }
      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
      padConstant) : padConstant;
      return treemap;
    };
    treemap.round = function(x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };
    treemap.sticky = function(x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };
    treemap.ratio = function(x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };
    treemap.mode = function(x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };
    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };
  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }
  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }
    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }
    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }
  d3.random = {
    normal: function(µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function() {
        var x, y, r;
        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function() {
      var random = d3.random.normal.apply(d3, arguments);
      return function() {
        return Math.exp(random());
      };
    },
    bates: function(m) {
      var random = d3.random.irwinHall(m);
      return function() {
        return random() / m;
      };
    },
    irwinHall: function(m) {
      return function() {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();
        return s;
      };
    }
  };
  d3.scale = {};
  function d3_scaleExtent(domain) {
    var start = domain[0], stop = domain[domain.length - 1];
    return start < stop ? [ start, stop ] : [ stop, start ];
  }
  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }
  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
    return function(x) {
      return i(u(x));
    };
  }
  function d3_scale_nice(domain, nice) {
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }
    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }
  function d3_scale_niceStep(step) {
    return step ? {
      floor: function(x) {
        return Math.floor(x / step) * step;
      },
      ceil: function(x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }
  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };
  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }
    return function(x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }
  d3.scale.linear = function() {
    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
  };
  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;
    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }
    function scale(x) {
      return output(x);
    }
    scale.invert = function(y) {
      return input(y);
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.rangeRound = function(x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };
    scale.clamp = function(x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };
    scale.interpolate = function(x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };
    scale.copy = function() {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };
    return rescale();
  }
  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }
  function d3_scale_linearNice(domain, m) {
    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
    return domain;
  }
  function d3_scale_linearTickRange(domain, m) {
    if (m == null) m = 10;
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }
  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }
  function d3_scale_linearTickFormat(domain, m, format) {
    var range = d3_scale_linearTickRange(domain, m);
    if (format) {
      var match = d3_format_re.exec(format);
      match.shift();
      if (match[8] === "s") {
        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
        match[8] = "f";
        format = d3.format(match.join(""));
        return function(d) {
          return format(prefix.scale(d)) + prefix.symbol;
        };
      }
      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
      format = match.join("");
    } else {
      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
    }
    return d3.format(format);
  }
  var d3_scale_linearFormatSignificant = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };
  function d3_scale_linearPrecision(value) {
    return -Math.floor(Math.log(value) / Math.LN10 + .01);
  }
  function d3_scale_linearFormatPrecision(type, range) {
    var p = d3_scale_linearPrecision(range[2]);
    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
  }
  d3.scale.log = function() {
    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
  };
  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }
    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }
    function scale(x) {
      return linear(log(x));
    }
    scale.invert = function(x) {
      return pow(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };
    scale.base = function(_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };
    scale.nice = function() {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };
    scale.ticks = function() {
      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
      if (isFinite(j - i)) {
        if (positive) {
          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));
          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }
        for (i = 0; ticks[i] < u; i++) {}
        for (j = ticks.length; ticks[j - 1] > v; j--) {}
        ticks = ticks.slice(i, j);
      }
      return ticks;
    };
    scale.tickFormat = function(n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(1, base * n / scale.ticks().length);
      return function(d) {
        var i = d / pow(Math.round(log(d)));
        if (i * base < base - .5) i *= base;
        return i <= k ? format(d) : "";
      };
    };
    scale.copy = function() {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
    floor: function(x) {
      return -Math.ceil(-x);
    },
    ceil: function(x) {
      return -Math.floor(-x);
    }
  };
  d3.scale.pow = function() {
    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
  };
  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
    function scale(x) {
      return linear(powp(x));
    }
    scale.invert = function(x) {
      return powb(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };
    scale.exponent = function(x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };
    scale.copy = function() {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_scale_powPow(e) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }
  d3.scale.sqrt = function() {
    return d3.scale.pow().exponent(.5);
  };
  d3.scale.ordinal = function() {
    return d3_scale_ordinal([], {
      t: "range",
      a: [ [] ]
    });
  };
  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;
    function scale(x) {
      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
    }
    function steps(start, step) {
      return d3.range(domain.length).map(function(i) {
        return start + step * i;
      });
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1, n = x.length, xi;
      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
      return scale[ranger.t].apply(scale, ranger.a);
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };
    scale.rangePoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
      0) : (stop - start) / (domain.length - 1 + padding);
      range = steps(start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundPoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
      0) : (stop - start) / (domain.length - 1 + padding) | 0;
      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
      rangeBand = 0;
      ranger = {
        t: "rangeRoundPoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeBand = function() {
      return rangeBand;
    };
    scale.rangeExtent = function() {
      return d3_scaleExtent(ranger.a[0]);
    };
    scale.copy = function() {
      return d3_scale_ordinal(domain, ranger);
    };
    return scale.domain(domain);
  }
  d3.scale.category10 = function() {
    return d3.scale.ordinal().range(d3_category10);
  };
  d3.scale.category20 = function() {
    return d3.scale.ordinal().range(d3_category20);
  };
  d3.scale.category20b = function() {
    return d3.scale.ordinal().range(d3_category20b);
  };
  d3.scale.category20c = function() {
    return d3.scale.ordinal().range(d3_category20c);
  };
  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
  d3.scale.quantile = function() {
    return d3_scale_quantile([], []);
  };
  function d3_scale_quantile(domain, range) {
    var thresholds;
    function rescale() {
      var k = 0, q = range.length;
      thresholds = [];
      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.quantiles = function() {
      return thresholds;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
    };
    scale.copy = function() {
      return d3_scale_quantile(domain, range);
    };
    return rescale();
  }
  d3.scale.quantize = function() {
    return d3_scale_quantize(0, 1, [ 0, 1 ]);
  };
  function d3_scale_quantize(x0, x1, range) {
    var kx, i;
    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }
    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }
    scale.domain = function(x) {
      if (!arguments.length) return [ x0, x1 ];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [ y, y + 1 / kx ];
    };
    scale.copy = function() {
      return d3_scale_quantize(x0, x1, range);
    };
    return rescale();
  }
  d3.scale.threshold = function() {
    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
  };
  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };
    scale.range = function(_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [ domain[y - 1], domain[y] ];
    };
    scale.copy = function() {
      return d3_scale_threshold(domain, range);
    };
    return scale;
  }
  d3.scale.identity = function() {
    return d3_scale_identity([ 0, 1 ]);
  };
  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }
    identity.invert = identity;
    identity.domain = identity.range = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };
    identity.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    identity.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    identity.copy = function() {
      return d3_scale_identity(domain);
    };
    return identity;
  }
  d3.svg = {};
  function d3_zero() {
    return 0;
  }
  d3.svg.arc = function() {
    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
    function arc() {
      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
        if (!cw) p1 *= -1;
        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
      }
      if (r1) {
        x0 = r1 * Math.cos(a0 + p1);
        y0 = r1 * Math.sin(a0 + p1);
        x1 = r1 * Math.cos(a1 - p1);
        y1 = r1 * Math.sin(a1 - p1);
        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
          var h1 = (a0 + a1) / 2;
          x0 = r1 * Math.cos(h1);
          y0 = r1 * Math.sin(h1);
          x1 = y1 = null;
        }
      } else {
        x0 = y0 = 0;
      }
      if (r0) {
        x2 = r0 * Math.cos(a1 - p0);
        y2 = r0 * Math.sin(a1 - p0);
        x3 = r0 * Math.cos(a0 + p0);
        y3 = r0 * Math.sin(a0 + p0);
        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
          var h0 = (a0 + a1) / 2;
          x2 = r0 * Math.cos(h0);
          y2 = r0 * Math.sin(h0);
          x3 = y3 = null;
        }
      } else {
        x2 = y2 = 0;
      }
      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
        cr = r0 < r1 ^ cw ? 0 : 1;
        var rc1 = rc, rc0 = rc;
        if (da < π) {
          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
        }
        if (x1 != null) {
          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
          if (rc === rc1) {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
          } else {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
          }
        } else {
          path.push("M", x0, ",", y0);
        }
        if (x3 != null) {
          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
          if (rc === rc0) {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          } else {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          }
        } else {
          path.push("L", x2, ",", y2);
        }
      } else {
        path.push("M", x0, ",", y0);
        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
        path.push("L", x2, ",", y2);
        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
      }
      path.push("Z");
      return path.join("");
    }
    function circleSegment(r1, cw) {
      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
    }
    arc.innerRadius = function(v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };
    arc.outerRadius = function(v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };
    arc.cornerRadius = function(v) {
      if (!arguments.length) return cornerRadius;
      cornerRadius = d3_functor(v);
      return arc;
    };
    arc.padRadius = function(v) {
      if (!arguments.length) return padRadius;
      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
      return arc;
    };
    arc.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };
    arc.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };
    arc.padAngle = function(v) {
      if (!arguments.length) return padAngle;
      padAngle = d3_functor(v);
      return arc;
    };
    arc.centroid = function() {
      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
      return [ Math.cos(a) * r, Math.sin(a) * r ];
    };
    return arc;
  };
  var d3_svg_arcAuto = "auto";
  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }
  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }
  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }
  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }
  function d3_svg_arcPadAngle(d) {
    return d && d.padAngle;
  }
  function d3_svg_arcSweep(x0, y0, x1, y1) {
    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
  }
  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
  }
  function d3_svg_line(projection) {
    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
    function line(data) {
      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }
      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }
    line.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };
    line.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };
    line.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };
    line.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };
    line.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };
    return line;
  }
  d3.svg.line = function() {
    return d3_svg_line(d3_identity);
  };
  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function(key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });
  function d3_svg_lineLinear(points) {
    return points.length > 1 ? points.join("L") : points + "Z";
  }
  function d3_svg_lineLinearClosed(points) {
    return points.join("L") + "Z";
  }
  function d3_svg_lineStep(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepBefore(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepAfter(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
    return path.join("");
  }
  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
  }
  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }
    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }
    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }
    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }
    return path;
  }
  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
    }
    return tangents;
  }
  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    points.push(points[n - 1]);
    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    points.pop();
    path.push("L", pi);
    return path.join("");
  }
  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;
    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBasisClosed(points) {
    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    --i;
    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;
    if (n) {
      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }
    return d3_svg_lineBasis(points);
  }
  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }
  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }
  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }
  function d3_svg_lineFiniteDifferences(points) {
    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }
    m[i] = d;
    return m;
  }
  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);
      if (abs(d) < ε) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;
        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }
    i = -1;
    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([ s || 0, m[i] * s || 0 ]);
    }
    return tangents;
  }
  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }
  d3.svg.line.radial = function() {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };
  function d3_svg_lineRadial(points) {
    var point, i = -1, n = points.length, r, a;
    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] - halfπ;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }
    return points;
  }
  function d3_svg_area(projection) {
    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
    function area(data) {
      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
        return x;
      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
        return y;
      } : d3_functor(y1), x, y;
      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }
      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }
    area.x = function(_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };
    area.x0 = function(_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };
    area.x1 = function(_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };
    area.y = function(_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };
    area.y0 = function(_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };
    area.y1 = function(_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };
    area.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };
    area.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };
    area.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };
    return area;
  }
  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
  d3.svg.area = function() {
    return d3_svg_area(d3_identity);
  };
  d3.svg.area.radial = function() {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };
  d3.svg.chord = function() {
    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function chord(d, i) {
      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }
    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
      };
    }
    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }
    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }
    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }
    chord.radius = function(v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };
    chord.source = function(v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };
    chord.target = function(v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };
    chord.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };
    chord.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };
    return chord;
  };
  function d3_svg_chordRadius(d) {
    return d.radius;
  }
  d3.svg.diagonal = function() {
    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
    function diagonal(d, i) {
      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3 ];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }
    diagonal.source = function(x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };
    diagonal.target = function(x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };
    diagonal.projection = function(x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };
    return diagonal;
  };
  function d3_svg_diagonalProjection(d) {
    return [ d.x, d.y ];
  }
  d3.svg.diagonal.radial = function() {
    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
    diagonal.projection = function(x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };
    return diagonal;
  };
  function d3_svg_diagonalRadialProjection(projection) {
    return function() {
      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
      return [ r * Math.cos(a), r * Math.sin(a) ];
    };
  }
  d3.svg.symbol = function() {
    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }
    symbol.type = function(x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };
    symbol.size = function(x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };
    return symbol;
  };
  function d3_svg_symbolSize() {
    return 64;
  }
  function d3_svg_symbolType() {
    return "circle";
  }
  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }
  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function(size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function(size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function(size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
  d3_selectionPrototype.transition = function(name) {
    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_selectionPrototype.interrupt = function(name) {
    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
  };
  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
  function d3_selection_interruptNS(ns) {
    return function() {
      var lock, activeId, active;
      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
        active.timer.c = null;
        active.timer.t = NaN;
        if (--lock.count) delete lock[activeId]; else delete this[ns];
        lock.active += .5;
        active.event && active.event.interrupt.call(this, this.__data__, active.index);
      }
    };
  }
  function d3_transition(groups, ns, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.namespace = ns;
    groups.id = id;
    return groups;
  }
  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;
  d3.transition = function(selection, name) {
    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
  };
  d3.transition.prototype = d3_transitionPrototype;
  d3_transitionPrototype.select = function(selector) {
    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_transitionPrototype.selectAll = function(selector) {
    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          transition = node[ns][id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);
          for (var k = -1, o = subnodes.length; ++k < o; ) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_transitionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_transition(subgroups, this.namespace, this.id);
  };
  d3_transitionPrototype.tween = function(name, tween) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
    return d3_selection_each(this, tween == null ? function(node) {
      node[ns][id].tween.remove(name);
    } : function(node) {
      node[ns][id].tween.set(name, tween);
    });
  };
  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id, ns = groups.namespace;
    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function(node) {
      node[ns][id].tween.set(name, value);
    }));
  }
  d3_transitionPrototype.attr = function(nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);
      return this;
    }
    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrTween(b) {
      return b == null ? attrNull : (b += "", function() {
        var a = this.getAttribute(name), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttribute(name, i(t));
        });
      });
    }
    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function() {
        var a = this.getAttributeNS(name.space, name.local), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }
    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.attrTween = function(nameNS, tween) {
    var name = d3.ns.qualify(nameNS);
    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function(t) {
        this.setAttribute(name, f(t));
      };
    }
    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function(t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }
    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.style(priority, name[priority], value);
        return this;
      }
      priority = "";
    }
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleString(b) {
      return b == null ? styleNull : (b += "", function() {
        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
        return a !== b && (i = d3_interpolate(a, b), function(t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }
    return d3_transition_tween(this, "style." + name, value, styleString);
  };
  d3_transitionPrototype.styleTween = function(name, tween, priority) {
    if (arguments.length < 3) priority = "";
    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
      return f && function(t) {
        this.style.setProperty(name, f(t), priority);
      };
    }
    return this.tween("style." + name, styleTween);
  };
  d3_transitionPrototype.text = function(value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };
  function d3_transition_text(b) {
    if (b == null) b = "";
    return function() {
      this.textContent = b;
    };
  }
  d3_transitionPrototype.remove = function() {
    var ns = this.namespace;
    return this.each("end.transition", function() {
      var p;
      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
    });
  };
  d3_transitionPrototype.ease = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function(node) {
      node[ns][id].ease = value;
    });
  };
  d3_transitionPrototype.delay = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].delay;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node[ns][id].delay = +value.call(node, node.__data__, i, j);
    } : (value = +value, function(node) {
      node[ns][id].delay = value;
    }));
  };
  d3_transitionPrototype.duration = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].duration;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
    } : (value = Math.max(1, value), function(node) {
      node[ns][id].duration = value;
    }));
  };
  d3_transitionPrototype.each = function(type, listener) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 2) {
      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
      try {
        d3_transitionInheritId = id;
        d3_selection_each(this, function(node, i, j) {
          d3_transitionInherit = node[ns][id];
          type.call(node, node.__data__, i, j);
        });
      } finally {
        d3_transitionInherit = inherit;
        d3_transitionInheritId = inheritId;
      }
    } else {
      d3_selection_each(this, function(node) {
        var transition = node[ns][id];
        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
      });
    }
    return this;
  };
  d3_transitionPrototype.transition = function() {
    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = node[ns][id0];
          d3_transitionNode(node, i, ns, id1, {
            time: transition.time,
            ease: transition.ease,
            delay: transition.delay + transition.duration,
            duration: transition.duration
          });
        }
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, ns, id1);
  };
  function d3_transitionNamespace(name) {
    return name == null ? "__transition__" : "__transition_" + name + "__";
  }
  function d3_transitionNode(node, i, ns, id, inherit) {
    var lock = node[ns] || (node[ns] = {
      active: 0,
      count: 0
    }), transition = lock[id], time, timer, duration, ease, tweens;
    function schedule(elapsed) {
      var delay = transition.delay;
      timer.t = delay + time;
      if (delay <= elapsed) return start(elapsed - delay);
      timer.c = start;
    }
    function start(elapsed) {
      var activeId = lock.active, active = lock[activeId];
      if (active) {
        active.timer.c = null;
        active.timer.t = NaN;
        --lock.count;
        delete lock[activeId];
        active.event && active.event.interrupt.call(node, node.__data__, active.index);
      }
      for (var cancelId in lock) {
        if (+cancelId < id) {
          var cancel = lock[cancelId];
          cancel.timer.c = null;
          cancel.timer.t = NaN;
          --lock.count;
          delete lock[cancelId];
        }
      }
      timer.c = tick;
      d3_timer(function() {
        if (timer.c && tick(elapsed || 1)) {
          timer.c = null;
          timer.t = NaN;
        }
        return 1;
      }, 0, time);
      lock.active = id;
      transition.event && transition.event.start.call(node, node.__data__, i);
      tweens = [];
      transition.tween.forEach(function(key, value) {
        if (value = value.call(node, node.__data__, i)) {
          tweens.push(value);
        }
      });
      ease = transition.ease;
      duration = transition.duration;
    }
    function tick(elapsed) {
      var t = elapsed / duration, e = ease(t), n = tweens.length;
      while (n > 0) {
        tweens[--n].call(node, e);
      }
      if (t >= 1) {
        transition.event && transition.event.end.call(node, node.__data__, i);
        if (--lock.count) delete lock[id]; else delete node[ns];
        return 1;
      }
    }
    if (!transition) {
      time = inherit.time;
      timer = d3_timer(schedule, 0, time);
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        timer: timer,
        delay: inherit.delay,
        duration: inherit.duration,
        ease: inherit.ease,
        index: i
      };
      inherit = null;
      ++lock.count;
    }
  }
  d3.svg.axis = function() {
    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
    function axis(g) {
      g.each(function() {
        var g = d3.select(this);
        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
        d3.transition(path));
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
        if (orient === "bottom" || orient === "top") {
          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
        } else {
          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
        }
        lineEnter.attr(y2, sign * innerTickSize);
        textEnter.attr(y1, sign * tickSpacing);
        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
        if (scale1.rangeBand) {
          var x = scale1, dx = x.rangeBand() / 2;
          scale0 = scale1 = function(d) {
            return x(d) + dx;
          };
        } else if (scale0.rangeBand) {
          scale0 = scale1;
        } else {
          tickExit.call(tickTransform, scale1, scale0);
        }
        tickEnter.call(tickTransform, scale0, scale1);
        tickUpdate.call(tickTransform, scale1, scale1);
      });
    }
    axis.scale = function(x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };
    axis.orient = function(x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };
    axis.ticks = function() {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = d3_array(arguments);
      return axis;
    };
    axis.tickValues = function(x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };
    axis.tickFormat = function(x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };
    axis.tickSize = function(x) {
      var n = arguments.length;
      if (!n) return innerTickSize;
      innerTickSize = +x;
      outerTickSize = +arguments[n - 1];
      return axis;
    };
    axis.innerTickSize = function(x) {
      if (!arguments.length) return innerTickSize;
      innerTickSize = +x;
      return axis;
    };
    axis.outerTickSize = function(x) {
      if (!arguments.length) return outerTickSize;
      outerTickSize = +x;
      return axis;
    };
    axis.tickPadding = function(x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };
    axis.tickSubdivide = function() {
      return arguments.length && axis;
    };
    return axis;
  };
  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };
  function d3_svg_axisX(selection, x0, x1) {
    selection.attr("transform", function(d) {
      var v0 = x0(d);
      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
    });
  }
  function d3_svg_axisY(selection, y0, y1) {
    selection.attr("transform", function(d) {
      var v0 = y0(d);
      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
    });
  }
  d3.svg.brush = function() {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
    function brush(g) {
      g.each(function() {
        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        var background = g.selectAll(".background").data([ 0 ]);
        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var resize = g.selectAll(".resize").data(resizes, d3_identity);
        resize.exit().remove();
        resize.enter().append("g").attr("class", function(d) {
          return "resize " + d;
        }).style("cursor", function(d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function(d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function(d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        resize.style("display", brush.empty() ? "none" : null);
        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
        if (x) {
          range = d3_scaleRange(x);
          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
          redrawX(gUpdate);
        }
        if (y) {
          range = d3_scaleRange(y);
          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
          redrawY(gUpdate);
        }
        redraw(gUpdate);
      });
    }
    brush.event = function(g) {
      g.each(function() {
        var event_ = event.of(this, arguments), extent1 = {
          x: xExtent,
          y: yExtent,
          i: xExtentDomain,
          j: yExtentDomain
        }, extent0 = this.__chart__ || extent1;
        this.__chart__ = extent1;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.brush", function() {
            xExtentDomain = extent0.i;
            yExtentDomain = extent0.j;
            xExtent = extent0.x;
            yExtent = extent0.y;
            event_({
              type: "brushstart"
            });
          }).tween("brush:brush", function() {
            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
            xExtentDomain = yExtentDomain = null;
            return function(t) {
              xExtent = extent1.x = xi(t);
              yExtent = extent1.y = yi(t);
              event_({
                type: "brush",
                mode: "resize"
              });
            };
          }).each("end.brush", function() {
            xExtentDomain = extent1.i;
            yExtentDomain = extent1.j;
            event_({
              type: "brush",
              mode: "resize"
            });
            event_({
              type: "brushend"
            });
          });
        } else {
          event_({
            type: "brushstart"
          });
          event_({
            type: "brush",
            mode: "resize"
          });
          event_({
            type: "brushend"
          });
        }
      });
    };
    function redraw(g) {
      g.selectAll(".resize").attr("transform", function(d) {
        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
      });
    }
    function redrawX(g) {
      g.select(".extent").attr("x", xExtent[0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
    }
    function redrawY(g) {
      g.select(".extent").attr("y", yExtent[0]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
    }
    function brushstart() {
      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }
      g.interrupt().selectAll("*").interrupt();
      if (dragging) {
        origin[0] = xExtent[0] - origin[0];
        origin[1] = yExtent[0] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
        origin[0] = xExtent[ex];
        origin[1] = yExtent[ey];
      } else if (d3.event.altKey) center = origin.slice();
      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();
      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= xExtent[1];
            origin[1] -= yExtent[1];
            dragging = 2;
          }
          d3_eventPreventDefault();
        }
      }
      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += xExtent[1];
          origin[1] += yExtent[1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }
      function brushmove() {
        var point = d3.mouse(target), moved = false;
        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }
        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
            origin[0] = xExtent[+(point[0] < center[0])];
            origin[1] = yExtent[+(point[1] < center[1])];
          } else center = null;
        }
        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }
        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }
        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }
      function move1(point, scale, i) {
        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }
        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }
        if (extent[0] != min || extent[1] != max) {
          if (i) yExtentDomain = null; else xExtentDomain = null;
          extent[0] = min;
          extent[1] = max;
          return true;
        }
      }
      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }
    brush.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.clamp = function(z) {
      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
      return brush;
    };
    brush.extent = function(z) {
      var x0, x1, y0, y1, t;
      if (!arguments.length) {
        if (x) {
          if (xExtentDomain) {
            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
          } else {
            x0 = xExtent[0], x1 = xExtent[1];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }
        if (y) {
          if (yExtentDomain) {
            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
          } else {
            y0 = yExtent[0], y1 = yExtent[1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }
        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
      }
      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        xExtentDomain = [ x0, x1 ];
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
      }
      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        yExtentDomain = [ y0, y1 ];
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
      }
      return brush;
    };
    brush.clear = function() {
      if (!brush.empty()) {
        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
        xExtentDomain = yExtentDomain = null;
      }
      return brush;
    };
    brush.empty = function() {
      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
    };
    return d3.rebind(brush, event, "on");
  };
  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
  var d3_time_formatUtc = d3_time_format.utc;
  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }
  d3_time_formatIsoNative.parse = function(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };
  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3_time.second = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 1e3) * 1e3);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function(date) {
    return date.getSeconds();
  });
  d3_time.seconds = d3_time.second.range;
  d3_time.seconds.utc = d3_time.second.utc.range;
  d3_time.minute = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 6e4) * 6e4);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function(date) {
    return date.getMinutes();
  });
  d3_time.minutes = d3_time.minute.range;
  d3_time.minutes.utc = d3_time.minute.utc.range;
  d3_time.hour = d3_time_interval(function(date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function(date) {
    return date.getHours();
  });
  d3_time.hours = d3_time.hour.range;
  d3_time.hours.utc = d3_time.hour.utc.range;
  d3_time.month = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setDate(1);
    return date;
  }, function(date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function(date) {
    return date.getMonth();
  });
  d3_time.months = d3_time.month.range;
  d3_time.months.utc = d3_time.month.utc.range;
  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }
    scale.invert = function(x) {
      return d3_time_scaleDate(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };
    function tickMethod(extent, count) {
      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
        return d / 31536e6;
      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
    }
    scale.nice = function(interval, skip) {
      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
      if (method) interval = method[0], skip = method[1];
      function skipped(date) {
        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
      }
      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
        floor: function(date) {
          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
          return date;
        },
        ceil: function(date) {
          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
          return date;
        }
      } : interval));
    };
    scale.ticks = function(interval, skip) {
      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
        range: interval
      }, skip ];
      if (method) interval = method[0], skip = method[1];
      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
    };
    scale.tickFormat = function() {
      return format;
    };
    scale.copy = function() {
      return d3_time_scale(linear.copy(), methods, format);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_time_scaleDate(t) {
    return new Date(t);
  }
  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
    return d.getMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getMinutes();
  } ], [ "%I %p", function(d) {
    return d.getHours();
  } ], [ "%a %d", function(d) {
    return d.getDay() && d.getDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getDate() != 1;
  } ], [ "%B", function(d) {
    return d.getMonth();
  } ], [ "%Y", d3_true ] ]);
  var d3_time_scaleMilliseconds = {
    range: function(start, stop, step) {
      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
    },
    floor: d3_identity,
    ceil: d3_identity
  };
  d3_time_scaleLocalMethods.year = d3_time.year;
  d3_time.scale = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };
  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
    return [ m[0].utc, m[1] ];
  });
  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
    return d.getUTCMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getUTCSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getUTCMinutes();
  } ], [ "%I %p", function(d) {
    return d.getUTCHours();
  } ], [ "%a %d", function(d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getUTCDate() != 1;
  } ], [ "%B", function(d) {
    return d.getUTCMonth();
  } ], [ "%Y", d3_true ] ]);
  d3_time_scaleUtcMethods.year = d3_time.year.utc;
  d3_time.scale.utc = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
  };
  d3.text = d3_xhrType(function(request) {
    return request.responseText;
  });
  d3.json = function(url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };
  function d3_json(request) {
    return JSON.parse(request.responseText);
  }
  d3.html = function(url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };
  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }
  d3.xml = d3_xhrType(function(request) {
    return request.responseXML;
  });
  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === "object" && module.exports) module.exports = d3; else this.d3 = d3;
}();

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
// ----------------------------------------------------------------------------
// Internal helpers
// ----------------------------------------------------------------------------

var generation = 0;

function setInitialGenerationNumber(genNum) {
  generation = genNum;
}

function intersect(a, b) {
  var result = [];
  a.sort();
  b.sort();

  while (a.length && b.length) {
    if (a[0] < b[0]) {
      a.shift();
    } else if (a[0] > b[0]) {
      b.shift();
    } else {
      result.push(a.shift());
      b.shift();
    }
  }
  return result;
}

function clone(obj, fieldList, defaults) {
  var clonedObj = {};
  fieldList.forEach(function (name) {
    if (defaults && obj[name] === undefined && defaults[name] !== undefined) {
      clonedObj[name] = defaults[name];
    } else {
      clonedObj[name] = obj[name];
    }
    if (Array.isArray(clonedObj[name])) {
      clonedObj[name] = clonedObj[name].map(function (i) {
        return i;
      });
    }
  });
  return clonedObj;
}

var endpointToRuleOperator = {
  o: '<',
  '*': '<='
};

var ruleTypes = exports.ruleTypes = {
  '3L': {
    terms: 3,
    operators: { values: [['<', '<=']], index: [1] },
    variable: 0,
    values: [2]
  },
  '3R': {
    terms: 3,
    operators: { values: [['>', '>=']], index: [1] },
    variable: 2,
    values: [0]
  },
  '5C': {
    terms: 5,
    operators: { values: [['<', '<='], ['<', '<=']], index: [1, 3] },
    variable: 2,
    values: [0, 4]
  },
  multi: { terms: -1, operators: null },
  logical: { operators: { values: ['not', 'and', 'or', 'xor'], index: [0] } },
  row: {}
};

// ----------------------------------------------------------------------------
// Public builder method
// ----------------------------------------------------------------------------

function empty() {
  generation += 1;
  return {
    type: 'empty',
    generation: generation
  };
}

// ----------------------------------------------------------------------------

function partition(variable, dividers) {
  generation += 1;
  return {
    type: 'partition',
    generation: generation,
    partition: {
      variable: variable,
      dividers: dividers.map(function (divider) {
        return clone(divider, ['value', 'uncertainty', 'closeToLeft'], {
          closeToLeft: false
        });
      })
    }
  };
}

// ----------------------------------------------------------------------------

function range(vars) {
  generation += 1;
  var variables = {};
  var selection = {
    type: 'range',
    generation: generation,
    range: {
      variables: variables
    }
  };

  // Fill variables
  Object.keys(vars).forEach(function (name) {
    variables[name] = vars[name].map(function (interval) {
      return clone(interval, ['interval', 'endpoints', 'uncertainty'], {
        endpoints: '**'
      });
    });
    variables[name].sort(function (a, b) {
      return a.interval[0] - b.interval[0];
    });
  });

  return selection;
}

// ----------------------------------------------------------------------------

function rule() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'multi';
  var terms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var roles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

  generation += 1;
  // FIXME ?? deepClone ??
  return {
    type: 'rule',
    generation: generation,
    rule: {
      type: type,
      terms: terms,
      roles: roles
    }
  };
}

// ----------------------------------------------------------------------------

function variableToRule(name, ranges) {
  var terms = ['or'];
  ranges.forEach(function (clause) {
    terms.push({
      type: '5C',
      terms: [clause.interval[0], endpointToRuleOperator[clause.endpoints[0]], name, endpointToRuleOperator[clause.endpoints[1]], clause.interval[1]]
    });
  });
  if (terms.length === 2) {
    // one range, don't need the logical 'or'
    return terms[1];
  }
  return {
    type: 'logical',
    terms: terms
  };
}

// ----------

function rangeToRule(selection) {
  var terms = ['and'];
  var vars = selection.range.variables;
  Object.keys(vars).forEach(function (name) {
    terms.push(variableToRule(name, vars[name]));
  });
  return rule('logical', terms);
}

// ----------

function partitionToRule(selection) {
  var roles = [];
  var _selection$partition = selection.partition,
      dividers = _selection$partition.dividers,
      variable = _selection$partition.variable;

  var terms = dividers.map(function (divider, idx, array) {
    if (idx === 0) {
      return {
        type: '3L',
        terms: [variable, divider.closeToLeft ? '<' : '<=', divider.value]
      };
    }
    return {
      type: '5C',
      terms: [array[idx - 1].value, array[idx - 1].closeToLeft ? '<' : '<=', variable, divider.closeToLeft ? '<' : '<=', divider.value]
    };
  });
  var lastDivider = dividers.slice(-1);
  terms.push({
    type: '3R',
    terms: [lastDivider.value, lastDivider.closeToLeft ? '<' : '<=', variable]
  });

  // Fill roles with partition number
  while (roles.length < terms.length) {
    roles.push({ partition: roles.length });
  }

  return rule('multi', terms, roles);
}

// ----------------------------------------------------------------------------

function convertToRuleSelection(selection) {
  if (selection.type === 'range') {
    return rangeToRule(selection);
  }
  if (selection.type === 'partition') {
    return partitionToRule(selection);
  }
  if (selection.type === 'empty') {
    return selection;
  }

  throw new Error('Convertion to rule not supported with selection of type ' + selection.type);
}

// ----------------------------------------------------------------------------

function markModified(selection) {
  generation += 1;
  return Object.assign({}, selection, { generation: generation });
}

// ----------------------------------------------------------------------------

function hasField(selection, fieldNames) {
  if (!selection || selection.type === 'empty') {
    return false;
  }
  var fieldsToLookup = [].concat(fieldNames);

  if (selection.type === 'range') {
    var fields = Object.keys(selection.range.variables);
    var match = intersect(fieldsToLookup, fields);
    return match.length > 0;
  }
  if (selection.type === 'partition') {
    return fieldsToLookup.indexOf(selection.partition.variable) !== -1;
  }

  console.log('SelectionBuilder::hasField does not handle selection of type', selection.type);

  return false;
}

// ----------------------------------------------------------------------------
// Exposed object
// ----------------------------------------------------------------------------

var EMPTY_SELECTION = empty();

exports.default = {
  convertToRuleSelection: convertToRuleSelection,
  empty: empty,
  EMPTY_SELECTION: EMPTY_SELECTION,
  hasField: hasField,
  markModified: markModified,
  partition: partition,
  range: range,
  rule: rule,
  setInitialGenerationNumber: setInitialGenerationNumber
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(29);
// On some exotic environments, it's not clear which object `setimmeidate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["ParallelCoordinates"] = __webpack_require__(13);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(14);

var _SizeHelper = __webpack_require__(17);

var _SizeHelper2 = _interopRequireDefault(_SizeHelper);

var _ParallelCoordinates = __webpack_require__(8);

var _ParallelCoordinates2 = _interopRequireDefault(_ParallelCoordinates);

var _FieldSelector = __webpack_require__(34);

var _FieldSelector2 = _interopRequireDefault(_FieldSelector);

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

var _FieldProvider = __webpack_require__(44);

var _FieldProvider2 = _interopRequireDefault(_FieldProvider);

var _Histogram1DProvider = __webpack_require__(45);

var _Histogram1DProvider2 = _interopRequireDefault(_Histogram1DProvider);

var _Histogram2DProvider = __webpack_require__(46);

var _Histogram2DProvider2 = _interopRequireDefault(_Histogram2DProvider);

var _LegendProvider = __webpack_require__(47);

var _LegendProvider2 = _interopRequireDefault(_LegendProvider);

var _HistogramBinHoverProvider = __webpack_require__(59);

var _HistogramBinHoverProvider2 = _interopRequireDefault(_HistogramBinHoverProvider);

var _state = __webpack_require__(60);

var _state2 = _interopRequireDefault(_state);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import MutualInformationProvider from 'paraviewweb/src/InfoViz/Core/MutualInformationProvider';
var bodyElt = document.querySelector('body');

var parallelCoordinatesContainer = document.createElement('div');
parallelCoordinatesContainer.style.position = 'relative';
parallelCoordinatesContainer.style.width = '60%';
parallelCoordinatesContainer.style.height = '250px';
parallelCoordinatesContainer.style.float = 'left';
bodyElt.appendChild(parallelCoordinatesContainer);

var fieldSelectorContainer = document.createElement('div');
fieldSelectorContainer.style.position = 'relative';
fieldSelectorContainer.style.width = '40%';
fieldSelectorContainer.style.height = '250px';
fieldSelectorContainer.style.float = 'left';
bodyElt.appendChild(fieldSelectorContainer);

var provider = _CompositeClosureHelper2.default.newInstance(function (publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, initialValues);
  _FieldProvider2.default.extend(publicAPI, model, initialValues);
  _Histogram1DProvider2.default.extend(publicAPI, model, initialValues);
  _Histogram2DProvider2.default.extend(publicAPI, model, initialValues);
  _HistogramBinHoverProvider2.default.extend(publicAPI, model);
  _LegendProvider2.default.extend(publicAPI, model, initialValues);
  // MutualInformationProvider.extend(publicAPI, model, initialValues);
})(_state2.default);

// set provider behaviors
provider.setFieldsSorted(true);
provider.getFieldNames().forEach(function (name) {
  provider.addLegendEntry(name);
});
provider.assignLegend(['colors', 'shapes']);

// Create parallel coordinates
var parallelCoordinates = _ParallelCoordinates2.default.newInstance({
  provider: provider,
  container: parallelCoordinatesContainer
});

// Create field selector
var fieldSelector = _FieldSelector2.default.newInstance({
  provider: provider,
  container: fieldSelectorContainer
});

// Listen to window resize
_SizeHelper2.default.onSizeChange(function () {
  parallelCoordinates.resize();
  fieldSelector.resize();
});
_SizeHelper2.default.startListening();

_SizeHelper2.default.triggerChange();

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(15);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(6)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../css-loader/index.js!../postcss-loader/lib/index.js??ref--59-2!./normalize.css", function() {
			var newContent = require("!!../css-loader/index.js!../postcss-loader/lib/index.js??ref--59-2!./normalize.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(5)(undefined);
// imports


// module
exports.push([module.i, "/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in IE.\n */\n\nfigcaption,\nfigure,\nmain { /* 1 */\n  display: block;\n}\n\n/**\n * Add the correct margin in IE 8.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\n\na {\n  background-color: transparent; /* 1 */\n  -webkit-text-decoration-skip: objects; /* 2 */\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57- and Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  -webkit-text-decoration: underline dotted;\n          text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font style in Android 4.3-.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Add the correct background and color in IE 9-.\n */\n\nmark {\n  background-color: #ff0;\n  color: #000;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Remove the border on images inside links in IE 10-.\n */\n\nimg {\n  border-style: none;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: sans-serif; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\nhtml [type=\"button\"], /* 1 */\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * 1. Add the correct display in IE 9-.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  -webkit-box-sizing: border-box;\n          box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n */\n\ndetails, /* 1 */\nmenu {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Scripting\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\ncanvas {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in IE.\n */\n\ntemplate {\n  display: none;\n}\n\n/* Hidden\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10-.\n */\n\n[hidden] {\n  display: none;\n}\n", ""]);

// exports


/***/ }),
/* 16 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Observable = __webpack_require__(18);

var _Observable2 = _interopRequireDefault(_Observable);

var _Debounce = __webpack_require__(23);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-use-before-define */

var observableInstance = new _Observable2.default();
var TOPIC = 'window.size.change';
var domSizes = new WeakMap();
var sizeProperties = ['scrollWidth', 'scrollHeight', 'clientWidth', 'clientHeight'];
var windowListener = (0, _Debounce.debounce)(invalidateSize, 250);

var timestamp = 0;
var listenerAttached = false;

// ------ internal functions ------

function updateSize(domElement, cacheObj) {
  if (cacheObj.timestamp < timestamp) {
    sizeProperties.forEach(function (prop) {
      cacheObj[prop] = domElement[prop];
    });
    cacheObj.clientRect = domElement.getClientRects()[0];
  }
}

// ------ New API ------

function getSize(domElement) {
  var clearCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var cachedSize = domSizes.get(domElement);
  if (!cachedSize || clearCache) {
    cachedSize = { timestamp: -1 };
    domSizes.set(domElement, cachedSize);
  }
  updateSize(domElement, cachedSize);

  return cachedSize;
}

function onSizeChange(callback) {
  return observableInstance.on(TOPIC, callback);
}

function triggerChange() {
  observableInstance.emit(TOPIC);
}

function isListening() {
  return listenerAttached;
}

function startListening() {
  if (!listenerAttached) {
    window.addEventListener('resize', windowListener);
    listenerAttached = true;
  }
}

function stopListening() {
  if (listenerAttached) {
    window.removeEventListener('resize', windowListener);
    listenerAttached = false;
  }
}

// ------ internal functions ------

function invalidateSize() {
  timestamp += 1;
  triggerChange();
}

// Export
exports.default = {
  getSize: getSize,
  isListening: isListening,
  onSizeChange: onSizeChange,
  startListening: startListening,
  stopListening: stopListening,
  triggerChange: triggerChange
};

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _monologue = __webpack_require__(19);

var _monologue2 = _interopRequireDefault(_monologue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Observable = function () {
  function Observable() {
    _classCallCheck(this, Observable);
  }

  _createClass(Observable, [{
    key: 'destroy',
    value: function destroy() {
      this.off();
    }
  }]);

  return Observable;
}();

// Add Observer pattern using Monologue.js


exports.default = Observable;
_monologue2.default.mixInto(Observable);

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * monologue.js - EventEmitter replacement with AMQP-style bindings and other advanced features. Compatible with postal.js's API.
 * Author: Jim Cowart (http://ifandelse.com)
 * Version: v0.3.5
 * Url: https://github.com/postaljs/monologue.js
 * License(s): MIT, GPL
 */

( function( root, factory ) {
	/* istanbul ignore if  */
	if ( true ) {
		// AMD. Register as an anonymous module.
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [ __webpack_require__(20), __webpack_require__(21) ], __WEBPACK_AMD_DEFINE_RESULT__ = (function( _, riveter ) {
			return factory( _, riveter, root );
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	/* istanbul ignore else  */
	} else if ( typeof module === "object" && module.exports ) {
		// Node, or CommonJS-Like environments
		module.exports = factory( require( "lodash" ), require( "riveter" ) );
	} else {
		// Browser globals
		root.Monologue = factory( root._, root.riveter, root );
	}
}( this, function( _, riveter, global, undefined ) {
	
var keyDelimiter = "|";
var bindingsResolver = {
	cache: {},
	regex: {},

	compare: function compare( binding, topic ) {
		var pattern;
		var rgx;
		var prevSegment;
		var result = ( this.cache[ topic + keyDelimiter + binding ] );
		// result is cached?
		if ( result === true ) {
			return result;
		}
		// plain string matching?
		if ( binding.indexOf( "#" ) === -1 && binding.indexOf( "*" ) === -1 ) {
			result = this.cache[ topic + keyDelimiter + binding ] = ( topic === binding );
			return result;
		}
		// ah, regex matching, then
		if ( !( rgx = this.regex[ binding ] ) ) {
			pattern = "^" + _.map( binding.split( "." ), function mapTopicBinding( segment ) {
					var res = "";
					if ( !!prevSegment ) {
						res = prevSegment !== "#" ? "\\.\\b" : "\\b";
					}
					if ( segment === "#" ) {
						res += "[\\s\\S]*";
					} else if ( segment === "*" ) {
						res += "[^.]+";
					} else {
						res += segment;
					}
					prevSegment = segment;
					return res;
				} ).join( "" ) + "$";
			rgx = this.regex[ binding ] = new RegExp( pattern );
		}
		result = this.cache[ topic + keyDelimiter + binding ] = rgx.test( topic );
		return result;
	},

	reset: function reset() {
		this.cache = {};
		this.regex = {};
	},

	purge: function( options ) {
		var self = this;
		var matchPredicate = function( val, key ) {
			var split = key.split( keyDelimiter );
			var topic = split[ 0 ];
			var binding = split[ 1 ];
			if ( ( typeof options.topic === "undefined" || options.topic === topic ) &&
					( typeof options.binding === "undefined" || options.binding === binding ) ) {
				delete self.cache[ key ];
			}
		};

		if ( typeof options === "undefined" ) {
			this.reset();
		} else {
			_.each( this.cache, matchPredicate );
		}
	}
};

	var SubscriptionDefinition = function( topic, callback, emitter ) {
	this.topic = topic;
	this.callback = callback;
	this.pipeline = [];
	this.cacheKeys = [];
	this._context = undefined;
	this.emitter = emitter;
};

var ConsecutiveDistinctPredicate = function() {
	var previous;
	return function( data ) {
		var eq = false;
		if ( _.isString( data ) ) {
			eq = data === previous;
			previous = data;
		} else {
			eq = _.isEqual( data, previous );
			previous = _.clone( data );
		}
		return !eq;
	};
};

var DistinctPredicate = function DistinctPredicateFactory() {
	var previous = [];
	return function DistinctPredicate( data ) {
		var isDistinct = !_.any( previous, function( p ) {
			if ( _.isObject( data ) || _.isArray( data ) ) {
				return _.isEqual( data, p );
			}
			return data === p;
		} );
		if ( isDistinct ) {
			previous.push( data );
		}
		return isDistinct;
	};
};

SubscriptionDefinition.prototype = {

	"catch": function( errorHandler ) {
		var original = this.callback;
		var safeCallback = function() {
			try {
				original.apply( this, arguments );
			} catch ( err ) {
				errorHandler( err, arguments[ 0 ] );
			}
		};
		this.callback = safeCallback;
		return this;
	},

	defer: function defer() {
		return this.delay( 0 );
	},

	disposeAfter: function disposeAfter( maxCalls ) {
		if ( !_.isNumber( maxCalls ) || maxCalls <= 0 ) {
			throw new Error( "The value provided to disposeAfter (maxCalls) must be a number greater than zero." );
		}

		var dispose = _.after( maxCalls, this.unsubscribe.bind( this ) );
		this.pipeline.push( function( data, env, next ) {
			next( data, env );
			dispose();
		} );
		return this;
	},

	distinct: function distinct() {
		return this.constraint( new DistinctPredicate() );
	},

	distinctUntilChanged: function distinctUntilChanged() {
		return this.constraint( new ConsecutiveDistinctPredicate() );
	},

	invokeSubscriber: function invokeSubscriber( data, env ) {
		if ( !this.inactive ) {
			var self = this;
			var pipeline = self.pipeline;
			var len = pipeline.length;
			var context = self._context;
			var idx = -1;
			if ( !len ) {
				self.callback.call( context, data, env );
			} else {
				pipeline = pipeline.concat( [ self.callback ] );
				var step = function step( d, e ) {
					idx += 1;
					if ( idx < len ) {
						pipeline[ idx ].call( context, d, e, step );
					} else {
						self.callback.call( context, d, e );
					}
				};
				step( data, env, 0 );
			}
		}
	},

	logError: function logError() {
		/* istanbul ignore else */
		if ( console ) {
			var report;
			if ( console.warn ) {
				report = console.warn;
			} else {
				report = console.log;
			}
			this.catch( report );
		}
		return this;
	},

	once: function once() {
		return this.disposeAfter( 1 );
	},

	unsubscribe: function() {
		/* istanbul ignore else */
		if ( !this.inactive ) {
			this.emitter.off( this );
		}
	},

	constraint: function constraint( predicate ) {
		if ( !_.isFunction( predicate ) ) {
			throw new Error( "Predicate constraint must be a function" );
		}
		this.pipeline.push( function( data, env, next ) {
			if ( predicate.call( this, data, env ) ) {
				next( data, env );
			}
		} );
		return this;
	},

	constraints: function constraints( predicates ) {
		var self = this;
		/* istanbul ignore else */
		if ( _.isArray( predicates ) ) {
			_.each( predicates, function( predicate ) {
				self.constraint( predicate );
			} );
		}
		return self;
	},

	context: function contextSetter( context ) {
		this._context = context;
		return this;
	},

	debounce: function debounce( milliseconds, immediate ) {
		if ( !_.isNumber( milliseconds ) ) {
			throw new Error( "Milliseconds must be a number" );
		}
		this.pipeline.push(
			_.debounce( function( data, env, next ) {
				next( data, env );
			},
				milliseconds,
				!!immediate
			)
		);
		return this;
	},

	delay: function delay( milliseconds ) {
		if ( !_.isNumber( milliseconds ) ) {
			throw new Error( "Milliseconds must be a number" );
		}
		var self = this;
		self.pipeline.push( function( data, env, next ) {
			setTimeout( function() {
				next( data, env );
			}, milliseconds );
		} );
		return this;
	},

	throttle: function throttle( milliseconds ) {
		if ( !_.isNumber( milliseconds ) ) {
			throw new Error( "Milliseconds must be a number" );
		}
		var fn = function( data, env, next ) {
			next( data, env );
		};
		this.pipeline.push( _.throttle( fn, milliseconds ) );
		return this;
	}
};

SubscriptionDefinition.prototype.off = SubscriptionDefinition.prototype.unsubscribe;
// Backwards Compatibility
// WARNING: these will be removed after the next version
/* istanbul ignore next */
function warnOnDeprecation( oldMethod, newMethod ) {
	return function() {
		if ( console.warn || console.log ) {
			var msg = "Warning, the " + oldMethod + " method has been deprecated. Please use " + newMethod + " instead.";
			if ( console.warn ) {
				console.warn( msg );
			} else {
				console.log( msg );
			}
		}
		return SubscriptionDefinition.prototype[ newMethod ].apply( this, arguments );
	};
}
var oldMethods = [ "withConstraint", "withConstraints", "withContext", "withDebounce", "withDelay", "withThrottle" ];
var newMethods = [ "constraint", "constraints", "context", "debounce", "delay", "throttle" ];
for ( var i = 0; i < 6; i++ ) {
	var oldMethod = oldMethods[ i ];
	SubscriptionDefinition.prototype[ oldMethod ] = warnOnDeprecation( oldMethod, newMethods[ i ] );
}

	
var slice = Array.prototype.slice;
var Monologue = function() {};

function getCacher( topic, cache, done ) {
	return function( subDef ) {
		if ( Monologue.resolver.compare( subDef.topic, topic ) ) {
			cache.push( subDef );
			subDef.cacheKeys.push( topic );
			if ( done ) {
				done( subDef );
			}
		}
	};
}

function getCachePurger( subDef, topic, cache ) {
	return function( sub, i, list ) {
		if ( sub === subDef ) {
			list.splice( i, 1 );
		}
		if ( list.length === 0 ) {
			delete cache[ topic ];
		}
	};
}

function removeSubscriber( subDef, emitter, idx, list ) {
	subDef.inactive = true;
	list.splice( idx, 1 );
	// remove SubscriptionDefinition from cache
	if ( subDef.cacheKeys && subDef.cacheKeys.length ) {
		var key;
		while ( key = subDef.cacheKeys.pop() ) {
			_.each( emitter._cache[ key ], getCachePurger( subDef, key, emitter._cache ) );
		}
	}
}

Monologue.prototype = {
	on: function( topic, callback ) {
		var self = this;
		self._subscriptions = self._subscriptions || {};
		self._subscriptions[ topic ] = self._subscriptions[ topic ] || [];
		var subDef = new SubscriptionDefinition( topic, callback, self );
		self._subscriptions[ topic ].push( subDef );

		// Next, add the SubscriptionDefinition to any relevant existing cache(s)
		_.each( self._cache, function( list, key ) {
			getCacher( key, list )( subDef );
		} );

		return self._subscriptions[ topic ][ self._subscriptions[ topic ].length - 1 ];
	},

	once: function( topic, callback ) {
		return this.on( topic, callback ).once();
	},

	off: function( topic, context ) {
		var self = this;
		self._subscriptions = self._subscriptions || {};
		self._cache = self._cache || {};
		switch ( arguments.length ) {
			case 0:
				_.each( self._subscriptions, function( tpc ) {
					_.each( tpc, function( subDef, idx ) {
						removeSubscriber( subDef, self, idx, tpc );
					} );
				} );
				self._subscriptions = {};
				break;
			case 1:
				var type = Object.prototype.toString.call( topic ) === "[object String]" ? "topic" : topic instanceof SubscriptionDefinition ? "def" : "context";
				switch ( type ) {
					case "topic":
						if ( self._subscriptions[ topic ] ) {
							_.each( self._subscriptions[ topic ], function( subDef, idx ) {
								removeSubscriber( subDef, self, idx, self._subscriptions[ topic ] );
							} );
						}
						break;
					case "context":
						_.each( self._subscriptions, function( subs ) {
							_.each( _.clone( subs ), function( subDef, idx ) {
								if ( subDef._context === topic ) {
									removeSubscriber( subDef, self, idx, subs );
								}
							} );
						} );
						break;
					default:
						// topic arg is the subDef in this case....
						_.each( self._subscriptions[ topic.topic ], function( subDef, idx ) {
							if ( subDef === topic ) {
								removeSubscriber( subDef, self, idx, self._subscriptions[ topic.topic ] );
							}
						} );
						break;
				}
				break;
			default:
				_.each( _.clone( self._subscriptions[ topic ] ), function( subDef, idx ) {
					if ( subDef._context === context ) {
						removeSubscriber( subDef, self, idx, self._subscriptions[ topic ] );
					}
				} );
				break;
		}
	},

	emit: function( topic, data ) {
		var envelope = this.getEnvelope( topic, data );
		this._cache = this._cache || {};
		var cache = this._cache[ topic ];
		var invoker = function( subDef ) {
			subDef.invokeSubscriber( envelope.data, envelope );
		};
		if ( !cache ) {
			cache = this._cache[ topic ] = [];
			var cacherFn = getCacher( topic, cache, invoker );
			_.each( this._subscriptions, function( candidates ) {
				_.each( slice.call( candidates, 0 ), cacherFn );
			} );
		} else {
			_.each( slice.call( cache, 0 ), invoker );
		}
	},

	getEnvelope: function( topic, data ) {
		return {
			topic: topic,
			timeStamp: new Date(),
			data: data
		};
	}
};

Monologue.resolver = bindingsResolver;
Monologue.debug = false;
Monologue.SubscriptionDefinition = SubscriptionDefinition;
riveter( Monologue );
Monologue.mixInto = function( target ) {
	riveter.punch( target, Monologue.prototype );
};

	return Monologue;
} ) );


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * lodash 3.10.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -d -o ./index.js`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '3.10.1';

  /** Used to compose bitmasks for wrapper metadata. */
  var BIND_FLAG = 1,
      BIND_KEY_FLAG = 2,
      CURRY_BOUND_FLAG = 4,
      CURRY_FLAG = 8,
      CURRY_RIGHT_FLAG = 16,
      PARTIAL_FLAG = 32,
      PARTIAL_RIGHT_FLAG = 64,
      ARY_FLAG = 128,
      REARG_FLAG = 256;

  /** Used as default options for `_.trunc`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect when a function becomes hot. */
  var HOT_COUNT = 150,
      HOT_SPAN = 16;

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2;

  /** Used as the `TypeError` message for "Functions" methods. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,
      reUnescapedHtml = /[&<>"'`]/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\n\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g;

  /**
   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)
   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).
   */
  var reRegExpChars = /^[:!,]|[\\^$.*+?()[\]{}|\/]|(^[0-9a-fA-Fnrtuvx])|([\n\r\u2028\u2029])/g,
      reHasRegExpChars = RegExp(reRegExpChars.source);

  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */
  var reComboMark = /[\u0300-\u036f\ufe20-\ufe23]/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect hexadecimal string values. */
  var reHasHexPrefix = /^0[xX]/;

  /** Used to detect host constructors (Safari > 5). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^\d+$/;

  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */
  var reLatin1 = /[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to match words to create compound words. */
  var reWords = (function() {
    var upper = '[A-Z\\xc0-\\xd6\\xd8-\\xde]',
        lower = '[a-z\\xdf-\\xf6\\xf8-\\xff]+';

    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');
  }());

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',
    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',
    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dateTag] = typedArrayTags[errorTag] =
  typedArrayTags[funcTag] = typedArrayTags[mapTag] =
  typedArrayTags[numberTag] = typedArrayTags[objectTag] =
  typedArrayTags[regexpTag] = typedArrayTags[setTag] =
  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =
  cloneableTags[dateTag] = cloneableTags[float32Tag] =
  cloneableTags[float64Tag] = cloneableTags[int8Tag] =
  cloneableTags[int16Tag] = cloneableTags[int32Tag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[stringTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[mapTag] = cloneableTags[setTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map latin-1 supplementary letters to basic latin letters. */
  var deburredLetters = {
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcC': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xeC': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '`': '&#96;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'",
    '&#96;': '`'
  };

  /** Used to determine if values are of the language type `Object`. */
  var objectTypes = {
    'function': true,
    'object': true
  };

  /** Used to escape characters for inclusion in compiled regexes. */
  var regexpEscapes = {
    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',
    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',
    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',
    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',
    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Detect free variable `exports`. */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;

  /** Detect free variable `self`. */
  var freeSelf = objectTypes[typeof self] && self && self.Object && self;

  /** Detect free variable `window`. */
  var freeWindow = objectTypes[typeof window] && window && window.Object && window;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /**
   * Used as a reference to the global object.
   *
   * The `this` value is used if it's the global object to avoid Greasemonkey's
   * restricted `window` object, otherwise the `window` object is used.
   */
  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `compareAscending` which compares values and
   * sorts them in ascending order without guaranteeing a stable sort.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {number} Returns the sort order indicator for `value`.
   */
  function baseCompareAscending(value, other) {
    if (value !== other) {
      var valIsNull = value === null,
          valIsUndef = value === undefined,
          valIsReflexive = value === value;

      var othIsNull = other === null,
          othIsUndef = other === undefined,
          othIsReflexive = other === other;

      if ((value > other && !othIsNull) || !valIsReflexive ||
          (valIsNull && !othIsUndef && othIsReflexive) ||
          (valIsUndef && othIsReflexive)) {
        return 1;
      }
      if ((value < other && !valIsNull) || !othIsReflexive ||
          (othIsNull && !valIsUndef && valIsReflexive) ||
          (othIsUndef && valIsReflexive)) {
        return -1;
      }
    }
    return 0;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for callback shorthands and `this` binding.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {Function} predicate The function invoked per iteration.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromRight) {
    var length = array.length,
        index = fromRight ? length : -1;

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without support for binary searches.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    if (value !== value) {
      return indexOfNaN(array, fromIndex);
    }
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isFunction` without support for environments
   * with incorrect `typeof` results.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
   */
  function baseIsFunction(value) {
    // Avoid a Chakra JIT bug in compatibility modes of IE 11.
    // See https://github.com/jashkenas/underscore/issues/1621 for more details.
    return typeof value == 'function' || false;
  }

  /**
   * Converts `value` to a string if it's not one. An empty string is returned
   * for `null` or `undefined` values.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    return value == null ? '' : (value + '');
  }

  /**
   * Used by `_.trim` and `_.trimLeft` to get the index of the first character
   * of `string` that is not found in `chars`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @param {string} chars The characters to find.
   * @returns {number} Returns the index of the first character not found in `chars`.
   */
  function charsLeftIndex(string, chars) {
    var index = -1,
        length = string.length;

    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimRight` to get the index of the last character
   * of `string` that is not found in `chars`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @param {string} chars The characters to find.
   * @returns {number} Returns the index of the last character not found in `chars`.
   */
  function charsRightIndex(string, chars) {
    var index = string.length;

    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}
    return index;
  }

  /**
   * Used by `_.sortBy` to compare transformed elements of a collection and stable
   * sort them in ascending order.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @returns {number} Returns the sort order indicator for `object`.
   */
  function compareAscending(object, other) {
    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);
  }

  /**
   * Used by `_.sortByOrder` to compare multiple properties of a value to another
   * and stable sort them.
   *
   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,
   * a value is sorted in ascending order if its corresponding order is "asc", and
   * descending if "desc".
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {boolean[]} orders The order to sort by for each property.
   * @returns {number} Returns the sort order indicator for `object`.
   */
  function compareMultiple(object, other, orders) {
    var index = -1,
        objCriteria = object.criteria,
        othCriteria = other.criteria,
        length = objCriteria.length,
        ordersLength = orders.length;

    while (++index < length) {
      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);
      if (result) {
        if (index >= ordersLength) {
          return result;
        }
        var order = orders[index];
        return result * ((order === 'asc' || order === true) ? 1 : -1);
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to provide the same value for
    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
    // for more details.
    //
    // This also ensures a stable sort in V8 and other engines.
    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.
    return object.index - other.index;
  }

  /**
   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  function deburrLetter(letter) {
    return deburredLetters[letter];
  }

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeHtmlChar(chr) {
    return htmlEscapes[chr];
  }

  /**
   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @param {string} leadingChar The capture group for a leading character.
   * @param {string} whitespaceChar The capture group for a whitespace character.
   * @returns {string} Returns the escaped character.
   */
  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {
    if (leadingChar) {
      chr = regexpEscapes[chr];
    } else if (whitespaceChar) {
      chr = stringEscapes[chr];
    }
    return '\\' + chr;
  }

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the index at which the first occurrence of `NaN` is found in `array`.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched `NaN`, else `-1`.
   */
  function indexOfNaN(array, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 0 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      var other = array[index];
      if (other !== other) {
        return index;
      }
    }
    return -1;
  }

  /**
   * Checks if `value` is object-like.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   */
  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a
   * character code is whitespace.
   *
   * @private
   * @param {number} charCode The character code to inspect.
   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.
   */
  function isSpace(charCode) {
    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||
      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = -1,
        result = [];

    while (++index < length) {
      if (array[index] === placeholder) {
        array[index] = PLACEHOLDER;
        result[++resIndex] = index;
      }
    }
    return result;
  }

  /**
   * An implementation of `_.uniq` optimized for sorted arrays without support
   * for callback shorthands and `this` binding.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} [iteratee] The function invoked per iteration.
   * @returns {Array} Returns the new duplicate-value-free array.
   */
  function sortedUniq(array, iteratee) {
    var seen,
        index = -1,
        length = array.length,
        resIndex = -1,
        result = [];

    while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value, index, array) : value;

      if (!index || seen !== computed) {
        seen = computed;
        result[++resIndex] = value;
      }
    }
    return result;
  }

  /**
   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the first non-whitespace character.
   */
  function trimmedLeftIndex(string) {
    var index = -1,
        length = string.length;

    while (++index < length && isSpace(string.charCodeAt(index))) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedRightIndex(string) {
    var index = string.length;

    while (index-- && isSpace(string.charCodeAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  function unescapeHtmlChar(chr) {
    return htmlUnescapes[chr];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the given `context` object.
   *
   * @static
   * @memberOf _
   * @category Utility
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // using `context` to mock `Date#getTime` use in `_.now`
   * var mock = _.runInContext({
   *   'Date': function() {
   *     return { 'getTime': getTimeMock };
   *   }
   * });
   *
   * // or creating a suped-up `defer` in Node.js
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See https://es5.github.io/#x11.1.5 for more details.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for native method references. */
    var arrayProto = Array.prototype,
        objectProto = Object.prototype,
        stringProto = String.prototype;

    /** Used to resolve the decompiled source of functions. */
    var fnToString = Function.prototype.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /**
     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
     * of values.
     */
    var objToString = objectProto.toString;

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Native method references. */
    var ArrayBuffer = context.ArrayBuffer,
        clearTimeout = context.clearTimeout,
        parseFloat = context.parseFloat,
        pow = Math.pow,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        Set = getNative(context, 'Set'),
        setTimeout = context.setTimeout,
        splice = arrayProto.splice,
        Uint8Array = context.Uint8Array,
        WeakMap = getNative(context, 'WeakMap');

    /* Native method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeCreate = getNative(Object, 'create'),
        nativeFloor = Math.floor,
        nativeIsArray = getNative(Array, 'isArray'),
        nativeIsFinite = context.isFinite,
        nativeKeys = getNative(Object, 'keys'),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = getNative(Date, 'now'),
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used as references for `-Infinity` and `Infinity`. */
    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,
        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;

    /** Used as references for the maximum length and index of an array. */
    var MAX_ARRAY_LENGTH = 4294967295,
        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

    /**
     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
     * of an array-like value.
     */
    var MAX_SAFE_INTEGER = 9007199254740991;

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit chaining.
     * Methods that operate on and return arrays, collections, and functions can
     * be chained together. Methods that retrieve a single value or may return a
     * primitive value will automatically end the chain returning the unwrapped
     * value. Explicit chaining may be enabled using `_.chain`. The execution of
     * chained methods is lazy, that is, execution is deferred until `_#value`
     * is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut
     * fusion is an optimization strategy which merge iteratee calls; this can help
     * to avoid the creation of intermediate data structures and greatly reduce the
     * number of iteratee executions.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,
     * `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,
     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,
     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,
     * and `where`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,
     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,
     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,
     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,
     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,
     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,
     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,
     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,
     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,
     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,
     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,
     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,
     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,
     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,
     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,
     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,
     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,
     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,
     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,
     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,
     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,
     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,
     * `unescape`, `uniqueId`, `value`, and `words`
     *
     * The wrapper method `sample` will return a wrapped value when `n` is provided,
     * otherwise an unwrapped value is returned.
     *
     * @name _
     * @constructor
     * @category Chain
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(total, n) {
     *   return total + n;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(n) {
     *   return n * n;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The function whose prototype all chaining wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.
     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.
     */
    function LodashWrapper(value, chainAll, actions) {
      this.__wrapped__ = value;
      this.__actions__ = actions || [];
      this.__chain__ = !!chainAll;
    }

    /**
     * An object environment feature flags.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB). Change the following template settings to use
     * alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = POSITIVE_INFINITY;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = arrayCopy(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = arrayCopy(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = arrayCopy(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {
        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates a cache object to store key/value pairs.
     *
     * @private
     * @static
     * @name Cache
     * @memberOf _.memoize
     */
    function MapCache() {
      this.__data__ = {};
    }

    /**
     * Removes `key` and its value from the cache.
     *
     * @private
     * @name delete
     * @memberOf _.memoize.Cache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.
     */
    function mapDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }

    /**
     * Gets the cached value for `key`.
     *
     * @private
     * @name get
     * @memberOf _.memoize.Cache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the cached value.
     */
    function mapGet(key) {
      return key == '__proto__' ? undefined : this.__data__[key];
    }

    /**
     * Checks if a cached value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf _.memoize.Cache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapHas(key) {
      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);
    }

    /**
     * Sets `value` to `key` of the cache.
     *
     * @private
     * @name set
     * @memberOf _.memoize.Cache
     * @param {string} key The key of the value to cache.
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache object.
     */
    function mapSet(key, value) {
      if (key != '__proto__') {
        this.__data__[key] = value;
      }
      return this;
    }

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates a cache object to store unique values.
     *
     * @private
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var length = values ? values.length : 0;

      this.data = { 'hash': nativeCreate(null), 'set': new Set };
      while (length--) {
        this.push(values[length]);
      }
    }

    /**
     * Checks if `value` is in `cache` mimicking the return signature of
     * `_.indexOf` by returning `0` if the value is found, else `-1`.
     *
     * @private
     * @param {Object} cache The cache to search.
     * @param {*} value The value to search for.
     * @returns {number} Returns `0` if `value` is found, else `-1`.
     */
    function cacheIndexOf(cache, value) {
      var data = cache.data,
          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];

      return result ? 0 : -1;
    }

    /**
     * Adds `value` to the cache.
     *
     * @private
     * @name push
     * @memberOf SetCache
     * @param {*} value The value to cache.
     */
    function cachePush(value) {
      var data = this.data;
      if (typeof value == 'string' || isObject(value)) {
        data.set.add(value);
      } else {
        data.hash[value] = true;
      }
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates a new array joining `array` with `other`.
     *
     * @private
     * @param {Array} array The array to join.
     * @param {Array} other The other array to join.
     * @returns {Array} Returns the new concatenated array.
     */
    function arrayConcat(array, other) {
      var index = -1,
          length = array.length,
          othIndex = -1,
          othLength = other.length,
          result = Array(length + othLength);

      while (++index < length) {
        result[index] = array[index];
      }
      while (++othIndex < othLength) {
        result[index++] = other[othIndex];
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function arrayCopy(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * A specialized version of `_.forEach` for arrays without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns `array`.
     */
    function arrayEach(array, iteratee) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }

    /**
     * A specialized version of `_.forEachRight` for arrays without support for
     * callback shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns `array`.
     */
    function arrayEachRight(array, iteratee) {
      var length = array.length;

      while (length--) {
        if (iteratee(array[length], length, array) === false) {
          break;
        }
      }
      return array;
    }

    /**
     * A specialized version of `_.every` for arrays without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     */
    function arrayEvery(array, predicate) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        if (!predicate(array[index], index, array)) {
          return false;
        }
      }
      return true;
    }

    /**
     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`
     * with one argument: (value).
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} comparator The function used to compare values.
     * @param {*} exValue The initial extremum value.
     * @returns {*} Returns the extremum value.
     */
    function arrayExtremum(array, iteratee, comparator, exValue) {
      var index = -1,
          length = array.length,
          computed = exValue,
          result = computed;

      while (++index < length) {
        var value = array[index],
            current = +iteratee(value);

        if (comparator(current, computed)) {
          computed = current;
          result = value;
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.filter` for arrays without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function arrayFilter(array, predicate) {
      var index = -1,
          length = array.length,
          resIndex = -1,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[++resIndex] = value;
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.map` for arrays without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function arrayMap(array, iteratee) {
      var index = -1,
          length = array.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }

    /**
     * Appends the elements of `values` to `array`.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to append.
     * @returns {Array} Returns `array`.
     */
    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;

      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }

    /**
     * A specialized version of `_.reduce` for arrays without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {boolean} [initFromArray] Specify using the first element of `array`
     *  as the initial value.
     * @returns {*} Returns the accumulated value.
     */
    function arrayReduce(array, iteratee, accumulator, initFromArray) {
      var index = -1,
          length = array.length;

      if (initFromArray && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }

    /**
     * A specialized version of `_.reduceRight` for arrays without support for
     * callback shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {boolean} [initFromArray] Specify using the last element of `array`
     *  as the initial value.
     * @returns {*} Returns the accumulated value.
     */
    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {
      var length = array.length;
      if (initFromArray && length) {
        accumulator = array[--length];
      }
      while (length--) {
        accumulator = iteratee(accumulator, array[length], length, array);
      }
      return accumulator;
    }

    /**
     * A specialized version of `_.some` for arrays without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function arraySome(array, predicate) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }

    /**
     * A specialized version of `_.sum` for arrays without support for callback
     * shorthands and `this` binding..
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {number} Returns the sum.
     */
    function arraySum(array, iteratee) {
      var length = array.length,
          result = 0;

      while (length--) {
        result += +iteratee(array[length]) || 0;
      }
      return result;
    }

    /**
     * Used by `_.defaults` to customize its `_.assign` use.
     *
     * @private
     * @param {*} objectValue The destination object property value.
     * @param {*} sourceValue The source object property value.
     * @returns {*} Returns the value to assign to the destination object.
     */
    function assignDefaults(objectValue, sourceValue) {
      return objectValue === undefined ? sourceValue : objectValue;
    }

    /**
     * Used by `_.template` to customize its `_.assign` use.
     *
     * **Note:** This function is like `assignDefaults` except that it ignores
     * inherited property values when checking if a property is `undefined`.
     *
     * @private
     * @param {*} objectValue The destination object property value.
     * @param {*} sourceValue The source object property value.
     * @param {string} key The key associated with the object and source values.
     * @param {Object} object The destination object.
     * @returns {*} Returns the value to assign to the destination object.
     */
    function assignOwnDefaults(objectValue, sourceValue, key, object) {
      return (objectValue === undefined || !hasOwnProperty.call(object, key))
        ? sourceValue
        : objectValue;
    }

    /**
     * A specialized version of `_.assign` for customizing assigned values without
     * support for argument juggling, multiple sources, and `this` binding `customizer`
     * functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     */
    function assignWith(object, source, customizer) {
      var index = -1,
          props = keys(source),
          length = props.length;

      while (++index < length) {
        var key = props[index],
            value = object[key],
            result = customizer(value, source[key], key, object, source);

        if ((result === result ? (result !== value) : (value === value)) ||
            (value === undefined && !(key in object))) {
          object[key] = result;
        }
      }
      return object;
    }

    /**
     * The base implementation of `_.assign` without support for argument juggling,
     * multiple sources, and `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return source == null
        ? object
        : baseCopy(source, keys(source), object);
    }

    /**
     * The base implementation of `_.at` without support for string collections
     * and individual key arguments.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {number[]|string[]} props The property names or indexes of elements to pick.
     * @returns {Array} Returns the new array of picked elements.
     */
    function baseAt(collection, props) {
      var index = -1,
          isNil = collection == null,
          isArr = !isNil && isArrayLike(collection),
          length = isArr ? collection.length : 0,
          propsLength = props.length,
          result = Array(propsLength);

      while(++index < propsLength) {
        var key = props[index];
        if (isArr) {
          result[index] = isIndex(key, length) ? collection[key] : undefined;
        } else {
          result[index] = isNil ? undefined : collection[key];
        }
      }
      return result;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property names to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @returns {Object} Returns `object`.
     */
    function baseCopy(source, props, object) {
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];
        object[key] = source[key];
      }
      return object;
    }

    /**
     * The base implementation of `_.callback` which supports specifying the
     * number of arguments to provide to `func`.
     *
     * @private
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [argCount] The number of arguments to provide to `func`.
     * @returns {Function} Returns the callback.
     */
    function baseCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (type == 'function') {
        return thisArg === undefined
          ? func
          : bindCallback(func, thisArg, argCount);
      }
      if (func == null) {
        return identity;
      }
      if (type == 'object') {
        return baseMatches(func);
      }
      return thisArg === undefined
        ? property(func)
        : baseMatchesProperty(func, thisArg);
    }

    /**
     * The base implementation of `_.clone` without support for argument juggling
     * and `this` binding `customizer` functions.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @param {Function} [customizer] The function to customize cloning values.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The object `value` belongs to.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {
      var result;
      if (customizer) {
        result = object ? customizer(value, key, object) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return arrayCopy(value, result);
        }
      } else {
        var tag = objToString.call(value),
            isFunc = tag == funcTag;

        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = initCloneObject(isFunc ? {} : value);
          if (!isDeep) {
            return baseAssign(result, value);
          }
        } else {
          return cloneableTags[tag]
            ? initCloneByTag(value, tag, isDeep)
            : (object ? value : {});
        }
      }
      // Check for circular references and return its corresponding clone.
      stackA || (stackA = []);
      stackB || (stackB = []);

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == value) {
          return stackB[length];
        }
      }
      // Add the source value to the stack of traversed objects and associate it with its clone.
      stackA.push(value);
      stackB.push(result);

      // Recursively populate clone (susceptible to call stack limits).
      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {
        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);
      });
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(prototype) {
        if (isObject(prototype)) {
          object.prototype = prototype;
          var result = new object;
          object.prototype = undefined;
        }
        return result || {};
      };
    }());

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts an index
     * of where to slice the arguments to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Object} args The arguments provide to `func`.
     * @returns {number} Returns the timer id.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of `_.difference` which accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values) {
      var length = array ? array.length : 0,
          result = [];

      if (!length) {
        return result;
      }
      var index = -1,
          indexOf = getIndexOf(),
          isCommon = indexOf == baseIndexOf,
          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,
          valuesLength = values.length;

      if (cache) {
        indexOf = cacheIndexOf;
        isCommon = false;
        values = cache;
      }
      outer:
      while (++index < length) {
        var value = array[index];

        if (isCommon && value === value) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === value) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (indexOf(values, value, 0) < 0) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object|string} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object|string} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * Gets the extremum value of `collection` invoking `iteratee` for each value
     * in `collection` to generate the criterion by which the value is ranked.
     * The `iteratee` is invoked with three arguments: (value, index|key, collection).
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} comparator The function used to compare values.
     * @param {*} exValue The initial extremum value.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(collection, iteratee, comparator, exValue) {
      var computed = exValue,
          result = computed;

      baseEach(collection, function(value, index, collection) {
        var current = +iteratee(value, index, collection);
        if (comparator(current, computed) || (current === exValue && current === result)) {
          computed = current;
          result = value;
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = start == null ? 0 : (+start || 0);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : (+end || 0);
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : (end >>> 0);
      start >>>= 0;

      while (start < length) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,
     * without support for callback shorthands and `this` binding, which iterates
     * over `collection` using the provided `eachFunc`.
     *
     * @private
     * @param {Array|Object|string} collection The collection to search.
     * @param {Function} predicate The function invoked per iteration.
     * @param {Function} eachFunc The function to iterate over `collection`.
     * @param {boolean} [retKey] Specify returning the key of the found element
     *  instead of the element itself.
     * @returns {*} Returns the found element or its key, else `undefined`.
     */
    function baseFind(collection, predicate, eachFunc, retKey) {
      var result;
      eachFunc(collection, function(value, key, collection) {
        if (predicate(value, key, collection)) {
          result = retKey ? key : value;
          return false;
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with added support for restricting
     * flattening and specifying the start index.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isDeep] Specify a deep flatten.
     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, isDeep, isStrict, result) {
      result || (result = []);

      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index];
        if (isObjectLike(value) && isArrayLike(value) &&
            (isStrict || isArray(value) || isArguments(value))) {
          if (isDeep) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, isDeep, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForIn` and `baseForOwn` which iterates
     * over `object` properties returned by `keysFunc` invoking `iteratee` for
     * each property. Iteratee functions may exit iteration early by explicitly
     * returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forIn` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForIn(object, iteratee) {
      return baseFor(object, iteratee, keysIn);
    }

    /**
     * The base implementation of `_.forOwn` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from those provided.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the new array of filtered property names.
     */
    function baseFunctions(object, props) {
      var index = -1,
          length = props.length,
          resIndex = -1,
          result = [];

      while (++index < length) {
        var key = props[index];
        if (isFunction(object[key])) {
          result[++resIndex] = key;
        }
      }
      return result;
    }

    /**
     * The base implementation of `get` without support for string paths
     * and default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path of the property to get.
     * @param {string} [pathKey] The key representation of path.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path, pathKey) {
      if (object == null) {
        return;
      }
      if (pathKey !== undefined && pathKey in toObject(object)) {
        path = [pathKey];
      }
      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[path[index++]];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `_.isEqual` without support for `this` binding
     * `customizer` functions.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparing values.
     * @param {boolean} [isLoose] Specify performing partial comparisons.
     * @param {Array} [stackA] Tracks traversed `value` objects.
     * @param {Array} [stackB] Tracks traversed `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} [customizer] The function to customize comparing objects.
     * @param {boolean} [isLoose] Specify performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `value` objects.
     * @param {Array} [stackB=[]] Tracks traversed `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = arrayTag,
          othTag = arrayTag;

      if (!objIsArr) {
        objTag = objToString.call(object);
        if (objTag == argsTag) {
          objTag = objectTag;
        } else if (objTag != objectTag) {
          objIsArr = isTypedArray(object);
        }
      }
      if (!othIsArr) {
        othTag = objToString.call(other);
        if (othTag == argsTag) {
          othTag = objectTag;
        } else if (othTag != objectTag) {
          othIsArr = isTypedArray(other);
        }
      }
      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && !(objIsArr || objIsObj)) {
        return equalByTag(object, other, objTag);
      }
      if (!isLoose) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);
        }
      }
      if (!isSameTag) {
        return false;
      }
      // Assume cyclic values are equal.
      // For more information on detecting circular references see https://es5.github.io/#JO.
      stackA || (stackA = []);
      stackB || (stackB = []);

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == object) {
          return stackB[length] == other;
        }
      }
      // Add `object` and `other` to the stack of traversed objects.
      stackA.push(object);
      stackB.push(other);

      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);

      stackA.pop();
      stackB.pop();

      return result;
    }

    /**
     * The base implementation of `_.isMatch` without support for callback
     * shorthands and `this` binding.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} matchData The propery names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparing objects.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = toObject(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var result = customizer ? customizer(objValue, srcValue, key) : undefined;
          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.map` without support for callback shorthands
     * and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which does not clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        var key = matchData[0][0],
            value = matchData[0][1];

        return function(object) {
          if (object == null) {
            return false;
          }
          return object[key] === value && (value !== undefined || (key in toObject(object)));
        };
      }
      return function(object) {
        return baseIsMatch(object, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to compare.
     * @returns {Function} Returns the new function.
     */
    function baseMatchesProperty(path, srcValue) {
      var isArr = isArray(path),
          isCommon = isKey(path) && isStrictComparable(srcValue),
          pathKey = (path + '');

      path = toPath(path);
      return function(object) {
        if (object == null) {
          return false;
        }
        var key = pathKey;
        object = toObject(object);
        if ((isArr || !isCommon) && !(key in object)) {
          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
          if (object == null) {
            return false;
          }
          key = last(path);
          object = toObject(object);
        }
        return object[key] === srcValue
          ? (srcValue !== undefined || (key in object))
          : baseIsEqual(srcValue, object[key], undefined, true);
      };
    }

    /**
     * The base implementation of `_.merge` without support for argument juggling,
     * multiple sources, and `this` binding `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     * @returns {Object} Returns `object`.
     */
    function baseMerge(object, source, customizer, stackA, stackB) {
      if (!isObject(object)) {
        return object;
      }
      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),
          props = isSrcArr ? undefined : keys(source);

      arrayEach(props || source, function(srcValue, key) {
        if (props) {
          key = srcValue;
          srcValue = source[key];
        }
        if (isObjectLike(srcValue)) {
          stackA || (stackA = []);
          stackB || (stackB = []);
          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);
        }
        else {
          var value = object[key],
              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
              isCommon = result === undefined;

          if (isCommon) {
            result = srcValue;
          }
          if ((result !== undefined || (isSrcArr && !(key in object))) &&
              (isCommon || (result === result ? (result !== value) : (value === value)))) {
            object[key] = result;
          }
        }
      });
      return object;
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {
      var length = stackA.length,
          srcValue = source[key];

      while (length--) {
        if (stackA[length] == srcValue) {
          object[key] = stackB[length];
          return;
        }
      }
      var value = object[key],
          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,
          isCommon = result === undefined;

      if (isCommon) {
        result = srcValue;
        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {
          result = isArray(value)
            ? value
            : (isArrayLike(value) ? arrayCopy(value) : []);
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          result = isArguments(value)
            ? toPlainObject(value)
            : (isPlainObject(value) ? value : {});
        }
        else {
          isCommon = false;
        }
      }
      // Add the source value to the stack of traversed objects and associate
      // it with its merged value.
      stackA.push(srcValue);
      stackB.push(result);

      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);
      } else if (result === result ? (result !== value) : (value === value)) {
        object[key] = result;
      }
    }

    /**
     * The base implementation of `_.property` without support for deep paths.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @returns {Function} Returns the new function.
     */
    function baseProperty(key) {
      return function(object) {
        return object == null ? undefined : object[key];
      };
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new function.
     */
    function basePropertyDeep(path) {
      var pathKey = (path + '');
      path = toPath(path);
      return function(object) {
        return baseGet(object, path, pathKey);
      };
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * index arguments and capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0;
      while (length--) {
        var index = indexes[length];
        if (index != previous && isIndex(index)) {
          var previous = index;
          splice.call(array, index, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for argument juggling
     * and returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns the random number.
     */
    function baseRandom(min, max) {
      return min + nativeFloor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.reduce` and `_.reduceRight` without support
     * for callback shorthands and `this` binding, which iterates over `collection`
     * using the provided `eachFunc`.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} accumulator The initial value.
     * @param {boolean} initFromCollection Specify using the first or last element
     *  of `collection` as the initial value.
     * @param {Function} eachFunc The function to iterate over `collection`.
     * @returns {*} Returns the accumulated value.
     */
    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {
      eachFunc(collection, function(value, index, collection) {
        accumulator = initFromCollection
          ? (initFromCollection = false, value)
          : iteratee(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `setData` without support for hot loop detection.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      start = start == null ? 0 : (+start || 0);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : (+end || 0);
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for callback shorthands
     * and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortBy` which uses `comparer` to define
     * the sort order of `array` and replaces criteria objects with their
     * corresponding values.
     *
     * @private
     * @param {Array} array The array to sort.
     * @param {Function} comparer The function to define sort order.
     * @returns {Array} Returns `array`.
     */
    function baseSortBy(array, comparer) {
      var length = array.length;

      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }

    /**
     * The base implementation of `_.sortByOrder` without param guards.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {boolean[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseSortByOrder(collection, iteratees, orders) {
      var callback = getCallback(),
          index = -1;

      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });

      var result = baseMap(collection, function(value) {
        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.sum` without support for callback shorthands
     * and `this` binding.
     *
     * @private
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {number} Returns the sum.
     */
    function baseSum(collection, iteratee) {
      var result = 0;
      baseEach(collection, function(value, index, collection) {
        result += +iteratee(value, index, collection) || 0;
      });
      return result;
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * and `this` binding.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The function invoked per iteration.
     * @returns {Array} Returns the new duplicate-value-free array.
     */
    function baseUniq(array, iteratee) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array.length,
          isCommon = indexOf == baseIndexOf,
          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,
          seen = isLarge ? createCache() : null,
          result = [];

      if (seen) {
        indexOf = cacheIndexOf;
        isCommon = false;
      } else {
        isLarge = false;
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value, index, array) : value;

        if (isCommon && value === value) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (indexOf(seen, computed, 0) < 0) {
          if (iteratee || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.values` and `_.valuesIn` which creates an
     * array of `object` property values corresponding to the property names
     * of `props`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} props The property names to get values for.
     * @returns {Object} Returns the array of property values.
     */
    function baseValues(object, props) {
      var index = -1,
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /**
     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,
     * and `_.takeWhile` without support for callback shorthands and `this` binding.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}
      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to peform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      var index = -1,
          length = actions.length;

      while (++index < length) {
        var action = actions[index];
        result = action.func.apply(action.thisArg, arrayPush([result], action.args));
      }
      return result;
    }

    /**
     * Performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function binaryIndex(array, value, retHighest) {
      var low = 0,
          high = array ? array.length : low;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return binaryIndexBy(array, value, identity, retHighest);
    }

    /**
     * This function is like `binaryIndex` except that it invokes `iteratee` for
     * `value` and each element of `array` to compute their sort ranking. The
     * iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function binaryIndexBy(array, value, iteratee, retHighest) {
      value = iteratee(value);

      var low = 0,
          high = array ? array.length : 0,
          valIsNaN = value !== value,
          valIsNull = value === null,
          valIsUndef = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            isDef = computed !== undefined,
            isReflexive = computed === computed;

        if (valIsNaN) {
          var setLow = isReflexive || retHighest;
        } else if (valIsNull) {
          setLow = isReflexive && isDef && (retHighest || computed != null);
        } else if (valIsUndef) {
          setLow = isReflexive && (retHighest || isDef);
        } else if (computed == null) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * A specialized version of `baseCallback` which only supports `this` binding
     * and specifying the number of arguments to provide to `func`.
     *
     * @private
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {number} [argCount] The number of arguments to provide to `func`.
     * @returns {Function} Returns the callback.
     */
    function bindCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      if (thisArg === undefined) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
        case 5: return function(value, other, key, object, source) {
          return func.call(thisArg, value, other, key, object, source);
        };
      }
      return function() {
        return func.apply(thisArg, arguments);
      };
    }

    /**
     * Creates a clone of the given array buffer.
     *
     * @private
     * @param {ArrayBuffer} buffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function bufferClone(buffer) {
      var result = new ArrayBuffer(buffer.byteLength),
          view = new Uint8Array(result);

      view.set(new Uint8Array(buffer));
      return result;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array|Object} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders) {
      var holdersLength = holders.length,
          argsIndex = -1,
          argsLength = nativeMax(args.length - holdersLength, 0),
          leftIndex = -1,
          leftLength = partials.length,
          result = Array(leftLength + argsLength);

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        result[holders[argsIndex]] = args[argsIndex];
      }
      while (argsLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array|Object} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders) {
      var holdersIndex = -1,
          holdersLength = holders.length,
          argsIndex = -1,
          argsLength = nativeMax(args.length - holdersLength, 0),
          rightIndex = -1,
          rightLength = partials.length,
          result = Array(argsLength + rightLength);

      while (++argsIndex < argsLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        result[offset + holders[holdersIndex]] = args[argsIndex++];
      }
      return result;
    }

    /**
     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.
     *
     * @private
     * @param {Function} setter The function to set keys and values of the accumulator object.
     * @param {Function} [initializer] The function to initialize the accumulator object.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee, thisArg) {
        var result = initializer ? initializer() : {};
        iteratee = getCallback(iteratee, thisArg, 3);

        if (isArray(collection)) {
          var index = -1,
              length = collection.length;

          while (++index < length) {
            var value = collection[index];
            setter(result, value, iteratee(value, index, collection), collection);
          }
        } else {
          baseEach(collection, function(value, key, collection) {
            setter(result, value, iteratee(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return restParam(function(object, sources) {
        var index = -1,
            length = object == null ? 0 : sources.length,
            customizer = length > 2 ? sources[length - 2] : undefined,
            guard = length > 2 ? sources[2] : undefined,
            thisArg = length > 1 ? sources[length - 1] : undefined;

        if (typeof customizer == 'function') {
          customizer = bindCallback(customizer, thisArg, 5);
          length -= 2;
        } else {
          customizer = typeof thisArg == 'function' ? thisArg : undefined;
          length -= (customizer ? 1 : 0);
        }
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        var length = collection ? getLength(collection) : 0;
        if (!isLength(length)) {
          return eachFunc(collection, iteratee);
        }
        var index = fromRight ? length : -1,
            iterable = toObject(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for `_.forIn` or `_.forInRight`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var iterable = toObject(object),
            props = keysFunc(object),
            length = props.length,
            index = fromRight ? length : -1;

        while ((fromRight ? index-- : ++index < length)) {
          var key = props[index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` and invokes it with the `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new bound function.
     */
    function createBindWrapper(func, thisArg) {
      var Ctor = createCtorWrapper(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(thisArg, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a `Set` cache object to optimize linear searches of large arrays.
     *
     * @private
     * @param {Array} [values] The values to cache.
     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.
     */
    function createCache(values) {
      return (nativeCreate && Set) ? new SetCache(values) : null;
    }

    /**
     * Creates a function that produces compound words out of the words in a
     * given string.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        var index = -1,
            array = words(deburr(string)),
            length = array.length,
            result = '';

        while (++index < length) {
          result = callback(result, array[index], index);
        }
        return result;
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtorWrapper(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors.
        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a `_.curry` or `_.curryRight` function.
     *
     * @private
     * @param {boolean} flag The curry bit flag.
     * @returns {Function} Returns the new curry function.
     */
    function createCurry(flag) {
      function curryFunc(func, arity, guard) {
        if (guard && isIterateeCall(func, arity, guard)) {
          arity = undefined;
        }
        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);
        result.placeholder = curryFunc.placeholder;
        return result;
      }
      return curryFunc;
    }

    /**
     * Creates a `_.defaults` or `_.defaultsDeep` function.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Function} Returns the new defaults function.
     */
    function createDefaults(assigner, customizer) {
      return restParam(function(args) {
        var object = args[0];
        if (object == null) {
          return object;
        }
        args.push(customizer);
        return assigner.apply(undefined, args);
      });
    }

    /**
     * Creates a `_.max` or `_.min` function.
     *
     * @private
     * @param {Function} comparator The function used to compare values.
     * @param {*} exValue The initial extremum value.
     * @returns {Function} Returns the new extremum function.
     */
    function createExtremum(comparator, exValue) {
      return function(collection, iteratee, thisArg) {
        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
          iteratee = undefined;
        }
        iteratee = getCallback(iteratee, thisArg, 3);
        if (iteratee.length == 1) {
          collection = isArray(collection) ? collection : toIterable(collection);
          var result = arrayExtremum(collection, iteratee, comparator, exValue);
          if (!(collection.length && result === exValue)) {
            return result;
          }
        }
        return baseExtremum(collection, iteratee, comparator, exValue);
      };
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new find function.
     */
    function createFind(eachFunc, fromRight) {
      return function(collection, predicate, thisArg) {
        predicate = getCallback(predicate, thisArg, 3);
        if (isArray(collection)) {
          var index = baseFindIndex(collection, predicate, fromRight);
          return index > -1 ? collection[index] : undefined;
        }
        return baseFind(collection, predicate, eachFunc);
      };
    }

    /**
     * Creates a `_.findIndex` or `_.findLastIndex` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new find function.
     */
    function createFindIndex(fromRight) {
      return function(array, predicate, thisArg) {
        if (!(array && array.length)) {
          return -1;
        }
        predicate = getCallback(predicate, thisArg, 3);
        return baseFindIndex(array, predicate, fromRight);
      };
    }

    /**
     * Creates a `_.findKey` or `_.findLastKey` function.
     *
     * @private
     * @param {Function} objectFunc The function to iterate over an object.
     * @returns {Function} Returns the new find function.
     */
    function createFindKey(objectFunc) {
      return function(object, predicate, thisArg) {
        predicate = getCallback(predicate, thisArg, 3);
        return baseFind(object, predicate, objectFunc, true);
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return function() {
        var wrapper,
            length = arguments.length,
            index = fromRight ? length : -1,
            leftIndex = 0,
            funcs = Array(length);

        while ((fromRight ? index-- : ++index < length)) {
          var func = funcs[leftIndex++] = arguments[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {
            wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? -1 : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      };
    }

    /**
     * Creates a function for `_.forEach` or `_.forEachRight`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over an array.
     * @param {Function} eachFunc The function to iterate over a collection.
     * @returns {Function} Returns the new each function.
     */
    function createForEach(arrayFunc, eachFunc) {
      return function(collection, iteratee, thisArg) {
        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))
          ? arrayFunc(collection, iteratee)
          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));
      };
    }

    /**
     * Creates a function for `_.forIn` or `_.forInRight`.
     *
     * @private
     * @param {Function} objectFunc The function to iterate over an object.
     * @returns {Function} Returns the new each function.
     */
    function createForIn(objectFunc) {
      return function(object, iteratee, thisArg) {
        if (typeof iteratee != 'function' || thisArg !== undefined) {
          iteratee = bindCallback(iteratee, thisArg, 3);
        }
        return objectFunc(object, iteratee, keysIn);
      };
    }

    /**
     * Creates a function for `_.forOwn` or `_.forOwnRight`.
     *
     * @private
     * @param {Function} objectFunc The function to iterate over an object.
     * @returns {Function} Returns the new each function.
     */
    function createForOwn(objectFunc) {
      return function(object, iteratee, thisArg) {
        if (typeof iteratee != 'function' || thisArg !== undefined) {
          iteratee = bindCallback(iteratee, thisArg, 3);
        }
        return objectFunc(object, iteratee);
      };
    }

    /**
     * Creates a function for `_.mapKeys` or `_.mapValues`.
     *
     * @private
     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.
     * @returns {Function} Returns the new map function.
     */
    function createObjectMapper(isMapKeys) {
      return function(object, iteratee, thisArg) {
        var result = {};
        iteratee = getCallback(iteratee, thisArg, 3);

        baseForOwn(object, function(value, key, object) {
          var mapped = iteratee(value, key, object);
          key = isMapKeys ? mapped : key;
          value = isMapKeys ? value : mapped;
          result[key] = value;
        });
        return result;
      };
    }

    /**
     * Creates a function for `_.padLeft` or `_.padRight`.
     *
     * @private
     * @param {boolean} [fromRight] Specify padding from the right.
     * @returns {Function} Returns the new pad function.
     */
    function createPadDir(fromRight) {
      return function(string, length, chars) {
        string = baseToString(string);
        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);
      };
    }

    /**
     * Creates a `_.partial` or `_.partialRight` function.
     *
     * @private
     * @param {boolean} flag The partial bit flag.
     * @returns {Function} Returns the new partial function.
     */
    function createPartial(flag) {
      var partialFunc = restParam(function(func, partials) {
        var holders = replaceHolders(partials, partialFunc.placeholder);
        return createWrapper(func, flag, undefined, partials, holders);
      });
      return partialFunc;
    }

    /**
     * Creates a function for `_.reduce` or `_.reduceRight`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over an array.
     * @param {Function} eachFunc The function to iterate over a collection.
     * @returns {Function} Returns the new each function.
     */
    function createReduce(arrayFunc, eachFunc) {
      return function(collection, iteratee, accumulator, thisArg) {
        var initFromArray = arguments.length < 3;
        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))
          ? arrayFunc(collection, iteratee, accumulator, initFromArray)
          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);
      };
    }

    /**
     * Creates a function that wraps `func` and invokes it with optional `this`
     * binding of, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & ARY_FLAG,
          isBind = bitmask & BIND_FLAG,
          isBindKey = bitmask & BIND_KEY_FLAG,
          isCurry = bitmask & CURRY_FLAG,
          isCurryBound = bitmask & CURRY_BOUND_FLAG,
          isCurryRight = bitmask & CURRY_RIGHT_FLAG,
          Ctor = isBindKey ? undefined : createCtorWrapper(func);

      function wrapper() {
        // Avoid `arguments` object use disqualifying optimizations by
        // converting it to an array before providing it to other functions.
        var length = arguments.length,
            index = length,
            args = Array(length);

        while (index--) {
          args[index] = arguments[index];
        }
        if (partials) {
          args = composeArgs(args, partials, holders);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight);
        }
        if (isCurry || isCurryRight) {
          var placeholder = wrapper.placeholder,
              argsHolders = replaceHolders(args, placeholder);

          length -= argsHolders.length;
          if (length < arity) {
            var newArgPos = argPos ? arrayCopy(argPos) : undefined,
                newArity = nativeMax(arity - length, 0),
                newsHolders = isCurry ? argsHolders : undefined,
                newHoldersRight = isCurry ? undefined : argsHolders,
                newPartials = isCurry ? args : undefined,
                newPartialsRight = isCurry ? undefined : args;

            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

            if (!isCurryBound) {
              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
            }
            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],
                result = createHybridWrapper.apply(undefined, newData);

            if (isLaziable(func)) {
              setData(result, newData);
            }
            result.placeholder = placeholder;
            return result;
          }
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        if (argPos) {
          args = reorder(args, argPos);
        }
        if (isAry && ary < args.length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtorWrapper(func);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates the padding required for `string` based on the given `length`.
     * The `chars` string is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {string} string The string to create padding for.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the pad for `string`.
     */
    function createPadding(string, length, chars) {
      var strLength = string.length;
      length = +length;

      if (strLength >= length || !nativeIsFinite(length)) {
        return '';
      }
      var padLength = length - strLength;
      chars = chars == null ? ' ' : (chars + '');
      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);
    }

    /**
     * Creates a function that wraps `func` and invokes it with the optional `this`
     * binding of `thisArg` and the `partials` prepended to those provided to
     * the wrapper.
     *
     * @private
     * @param {Function} func The function to partially apply arguments to.
     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to the new function.
     * @returns {Function} Returns the new bound function.
     */
    function createPartialWrapper(func, bitmask, thisArg, partials) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtorWrapper(func);

      function wrapper() {
        // Avoid `arguments` object use disqualifying optimizations by
        // converting it to an array before providing it `func`.
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength);

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.ceil`, `_.floor`, or `_.round` function.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        precision = precision === undefined ? 0 : (+precision || 0);
        if (precision) {
          precision = pow(10, precision);
          return func(number * precision) / precision;
        }
        return func(number);
      };
    }

    /**
     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.
     *
     * @private
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {Function} Returns the new index function.
     */
    function createSortedIndex(retHighest) {
      return function(array, value, iteratee, thisArg) {
        var callback = getCallback(iteratee);
        return (iteratee == null && callback === baseCallback)
          ? binaryIndex(array, value, retHighest)
          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of flags.
     *  The bitmask may be composed of the following flags:
     *     1 - `_.bind`
     *     2 - `_.bindKey`
     *     4 - `_.curry` or `_.curryRight` of a bound function
     *     8 - `_.curry`
     *    16 - `_.curryRight`
     *    32 - `_.partial`
     *    64 - `_.partialRight`
     *   128 - `_.rearg`
     *   256 - `_.ary`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      length -= (holders ? holders.length : 0);
      if (bitmask & PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func),
          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

      if (data) {
        mergeData(newData, data);
        bitmask = newData[1];
        arity = newData[9];
      }
      newData[9] = arity == null
        ? (isBindKey ? 0 : func.length)
        : (nativeMax(arity - length, 0) || 0);

      if (bitmask == BIND_FLAG) {
        var result = createBindWrapper(newData[0], newData[2]);
      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {
        result = createPartialWrapper.apply(undefined, newData);
      } else {
        result = createHybridWrapper.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setter(result, newData);
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} [customizer] The function to customize comparing arrays.
     * @param {boolean} [isLoose] Specify performing partial comparisons.
     * @param {Array} [stackA] Tracks traversed `value` objects.
     * @param {Array} [stackB] Tracks traversed `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {
      var index = -1,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {
        return false;
      }
      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index],
            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;

        if (result !== undefined) {
          if (result) {
            continue;
          }
          return false;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (isLoose) {
          if (!arraySome(other, function(othValue) {
                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);
              })) {
            return false;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {
          return false;
        }
      }
      return true;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag) {
      switch (tag) {
        case boolTag:
        case dateTag:
          // Coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
          return +object == +other;

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case numberTag:
          // Treat `NaN` vs. `NaN` as equal.
          return (object != +object)
            ? other != +other
            : object == +other;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings primitives and string
          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
          return object == (other + '');
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Function} [customizer] The function to customize comparing values.
     * @param {boolean} [isLoose] Specify performing partial comparisons.
     * @param {Array} [stackA] Tracks traversed `value` objects.
     * @param {Array} [stackB] Tracks traversed `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {
      var objProps = keys(object),
          objLength = objProps.length,
          othProps = keys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isLoose) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var skipCtor = isLoose;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key],
            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;

        // Recursively compare objects (susceptible to call stack limits).
        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {
          return false;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (!skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Gets the appropriate "callback" function. If the `_.callback` method is
     * customized this function returns the custom method, otherwise it returns
     * the `baseCallback` function. If arguments are provided the chosen function
     * is invoked with them and its result is returned.
     *
     * @private
     * @returns {Function} Returns the chosen function or its result.
     */
    function getCallback(func, thisArg, argCount) {
      var result = lodash.callback || callback;
      result = result === callback ? baseCallback : result;
      return argCount ? result(func, thisArg, argCount) : result;
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = func.name,
          array = realNames[result],
          length = array ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized this function returns the custom method, otherwise it returns
     * the `baseIndexOf` function. If arguments are provided the chosen function
     * is invoked with them and its result is returned.
     *
     * @private
     * @returns {Function|number} Returns the chosen function or its result.
     */
    function getIndexOf(collection, target, fromIndex) {
      var result = lodash.indexOf || indexOf;
      result = result === indexOf ? baseIndexOf : result;
      return collection ? result(collection, target, fromIndex) : result;
    }

    /**
     * Gets the "length" property value of `object`.
     *
     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
     * that affects Safari on at least iOS 8.1-8.3 ARM64.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {*} Returns the "length" value.
     */
    var getLength = baseProperty('length');

    /**
     * Gets the propery names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = pairs(object),
          length = result.length;

      while (length--) {
        result[length][2] = isStrictComparable(result[length][1]);
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = object == null ? undefined : object[key];
      return isNative(value) ? value : undefined;
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add array properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      var Ctor = object.constructor;
      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {
        Ctor = Object;
      }
      return new Ctor;
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return bufferClone(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          var buffer = object.buffer;
          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          var result = new Ctor(object.source, reFlags.exec(object));
          result.lastIndex = object.lastIndex;
      }
      return result;
    }

    /**
     * Invokes the method at `path` on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function invokePath(object, path, args) {
      if (object != null && !isKey(path, object)) {
        path = toPath(path);
        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
        path = last(path);
      }
      var func = object == null ? object : object[path];
      return func == null ? undefined : func.apply(object, args);
    }

    /**
     * Checks if `value` is array-like.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     */
    function isArrayLike(value) {
      return value != null && isLength(getLength(value));
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return value > -1 && value % 1 == 0 && value < length;
    }

    /**
     * Checks if the provided arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
          ? (isArrayLike(object) && isIndex(index, object.length))
          : (type == 'string' && index in object)) {
        var other = object[index];
        return value === value ? (value === other) : (other !== other);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      var type = typeof value;
      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {
        return true;
      }
      if (isArray(value)) {
        return false;
      }
      var result = !reIsDeepProp.test(value);
      return result || (object != null && value in toObject(object));
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func);
      if (!(funcName in LazyWrapper.prototype)) {
        return false;
      }
      var other = lodash[funcName];
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     */
    function isLength(value) {
      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers required to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`
     * augment function arguments, making the order in which they are executed important,
     * preventing the merging of metadata. However, we make an exception for a safe
     * common case where curried functions have `_.ary` and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < ARY_FLAG;

      var isCombo =
        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||
        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||
        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = arrayCopy(value);
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use.
     *
     * @private
     * @param {*} objectValue The destination object property value.
     * @param {*} sourceValue The source object property value.
     * @returns {*} Returns the value to assign to the destination object.
     */
    function mergeDefaults(objectValue, sourceValue) {
      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);
    }

    /**
     * A specialized version of `_.pick` which picks `object` properties specified
     * by `props`.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} props The property names to pick.
     * @returns {Object} Returns the new object.
     */
    function pickByArray(object, props) {
      object = toObject(object);

      var index = -1,
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        if (key in object) {
          result[key] = object[key];
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.pick` which picks `object` properties `predicate`
     * returns truthy for.
     *
     * @private
     * @param {Object} object The source object.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Object} Returns the new object.
     */
    function pickByCallback(object, predicate) {
      var result = {};
      baseForIn(object, function(value, key, object) {
        if (predicate(value, key, object)) {
          result[key] = value;
        }
      });
      return result;
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = arrayCopy(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity function
     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = (function() {
      var count = 0,
          lastCalled = 0;

      return function(key, value) {
        var stamp = now(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return key;
          }
        } else {
          count = 0;
        }
        return baseSetData(key, value);
      };
    }());

    /**
     * A fallback implementation of `Object.keys` which creates an array of the
     * own enumerable property names of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function shimKeys(object) {
      var props = keysIn(object),
          propsLength = props.length,
          length = propsLength && object.length;

      var allowIndexes = !!length && isLength(length) &&
        (isArray(object) || isArguments(object));

      var index = -1,
          result = [];

      while (++index < propsLength) {
        var key = props[index];
        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to an array-like object if it's not one.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {Array|Object} Returns the array-like object.
     */
    function toIterable(value) {
      if (value == null) {
        return [];
      }
      if (!isArrayLike(value)) {
        return values(value);
      }
      return isObject(value) ? value : Object(value);
    }

    /**
     * Converts `value` to an object if it's not one.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {Object} Returns the object.
     */
    function toObject(value) {
      return isObject(value) ? value : Object(value);
    }

    /**
     * Converts `value` to property path array if it's not one.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {Array} Returns the property path array.
     */
    function toPath(value) {
      if (isArray(value)) {
        return value;
      }
      var result = [];
      baseToString(value).replace(rePropName, function(match, number, quote, string) {
        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      return wrapper instanceof LazyWrapper
        ? wrapper.clone()
        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `collection` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the new array containing chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size == null) {
        size = 1;
      } else {
        size = nativeMax(nativeFloor(size) || 1, 1);
      }
      var index = 0,
          length = array ? array.length : 0,
          resIndex = -1,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[++resIndex] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          resIndex = -1,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[++resIndex] = value;
        }
      }
      return result;
    }

    /**
     * Creates an array of unique `array` values not included in the other
     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3], [4, 2]);
     * // => [1, 3]
     */
    var difference = restParam(function(array, values) {
      return (isObjectLike(array) && isArrayLike(array))
        ? baseDifference(array, baseFlatten(values, false, true))
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      return baseSlice(array, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      n = length - (+n || 0);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * bound to `thisArg` and invoked with three arguments: (value, index, array).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that match the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRightWhile([1, 2, 3], function(n) {
     *   return n > 1;
     * });
     * // => [1]
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');
     * // => ['barney', 'fred']
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');
     * // => ['barney']
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.dropRightWhile(users, 'active'), 'user');
     * // => ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate, thisArg) {
      return (array && array.length)
        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * bound to `thisArg` and invoked with three arguments: (value, index, array).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropWhile([1, 2, 3], function(n) {
     *   return n < 3;
     * });
     * // => [3]
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');
     * // => ['fred', 'pebbles']
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.pluck(_.dropWhile(users, 'active', false), 'user');
     * // => ['pebbles']
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.dropWhile(users, 'active'), 'user');
     * // => ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate, thisArg) {
      return (array && array.length)
        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8], '*', 1, 2);
     * // => [4, '*', 8]
     */
    function fill(array, value, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(chr) {
     *   return chr.user == 'barney';
     * });
     * // => 0
     *
     * // using the `_.matches` callback shorthand
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.findIndex(users, 'active', false);
     * // => 0
     *
     * // using the `_.property` callback shorthand
     * _.findIndex(users, 'active');
     * // => 2
     */
    var findIndex = createFindIndex();

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(chr) {
     *   return chr.user == 'pebbles';
     * });
     * // => 2
     *
     * // using the `_.matches` callback shorthand
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.findLastIndex(users, 'active', false);
     * // => 2
     *
     * // using the `_.property` callback shorthand
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    var findLastIndex = createFindIndex(true);

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @alias head
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([]);
     * // => undefined
     */
    function first(array) {
      return array ? array[0] : undefined;
    }

    /**
     * Flattens a nested array. If `isDeep` is `true` the array is recursively
     * flattened, otherwise it is only flattened a single level.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {boolean} [isDeep] Specify a deep flatten.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, 3, [4]]]);
     * // => [1, 2, 3, [4]]
     *
     * // using `isDeep`
     * _.flatten([1, [2, 3, [4]]], true);
     * // => [1, 2, 3, 4]
     */
    function flatten(array, isDeep, guard) {
      var length = array ? array.length : 0;
      if (guard && isIterateeCall(array, isDeep, guard)) {
        isDeep = false;
      }
      return length ? baseFlatten(array, isDeep) : [];
    }

    /**
     * Recursively flattens a nested array.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to recursively flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, 3, [4]]]);
     * // => [1, 2, 3, 4]
     */
    function flattenDeep(array) {
      var length = array ? array.length : 0;
      return length ? baseFlatten(array, true) : [];
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it is used as the offset
     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`
     * performs a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // using `fromIndex`
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     *
     * // performing a binary search
     * _.indexOf([1, 1, 2, 2], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      if (typeof fromIndex == 'number') {
        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;
      } else if (fromIndex) {
        var index = binaryIndex(array, value);
        if (index < length &&
            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {
          return index;
        }
        return -1;
      }
      return baseIndexOf(array, value, fromIndex || 0);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      return dropRight(array, 1);
    }

    /**
     * Creates an array of unique values that are included in all of the provided
     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of shared values.
     * @example
     * _.intersection([1, 2], [4, 2], [2, 1]);
     * // => [2]
     */
    var intersection = restParam(function(arrays) {
      var othLength = arrays.length,
          othIndex = othLength,
          caches = Array(length),
          indexOf = getIndexOf(),
          isCommon = indexOf == baseIndexOf,
          result = [];

      while (othIndex--) {
        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];
        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;
      }
      var array = arrays[0],
          index = -1,
          length = array ? array.length : 0,
          seen = caches[0];

      outer:
      while (++index < length) {
        value = array[index];
        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {
          var othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(value);
          }
          result.push(value);
        }
      }
      return result;
    });

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array ? array.length : 0;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=array.length-1] The index to search from
     *  or `true` to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // using `fromIndex`
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     *
     * // performing a binary search
     * _.lastIndexOf([1, 1, 2, 2], 2, true);
     * // => 3
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array ? array.length : 0;
      if (!length) {
        return -1;
      }
      var index = length;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;
      } else if (fromIndex) {
        index = binaryIndex(array, value, true) - 1;
        var other = array[index];
        if (value === value ? (value === other) : (other !== other)) {
          return index;
        }
        return -1;
      }
      if (value !== value) {
        return indexOfNaN(array, index, true);
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     *
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull() {
      var args = arguments,
          array = args[0];

      if (!(array && array.length)) {
        return array;
      }
      var index = 0,
          indexOf = getIndexOf(),
          length = args.length;

      while (++index < length) {
        var fromIndex = 0,
            value = args[index];

        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * Removes elements from `array` corresponding to the given indexes and returns
     * an array of the removed elements. Indexes may be specified as an array of
     * indexes or as individual arguments.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove,
     *  specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [5, 10, 15, 20];
     * var evens = _.pullAt(array, 1, 3);
     *
     * console.log(array);
     * // => [5, 15]
     *
     * console.log(evens);
     * // => [10, 20]
     */
    var pullAt = restParam(function(array, indexes) {
      indexes = baseFlatten(indexes);

      var result = baseAt(array, indexes);
      basePullAt(array, indexes.sort(baseCompareAscending));
      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is bound to
     * `thisArg` and invoked with three arguments: (value, index, array).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate, thisArg) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getCallback(predicate, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @alias tail
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     */
    function rest(array) {
      return drop(array, 1);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of `Array#slice` to support node
     * lists in IE < 9 and to ensure dense arrays are returned.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value` should
     * be inserted into `array` in order to maintain its sort order. If an iteratee
     * function is provided it is invoked for `value` and each element of `array`
     * to compute their sort ranking. The iteratee is bound to `thisArg` and
     * invoked with one argument; (value).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     *
     * _.sortedIndex([4, 4, 5, 5], 5);
     * // => 2
     *
     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };
     *
     * // using an iteratee function
     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {
     *   return this.data[word];
     * }, dict);
     * // => 1
     *
     * // using the `_.property` callback shorthand
     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 1
     */
    var sortedIndex = createSortedIndex();

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 4, 5, 5], 5);
     * // => 4
     */
    var sortedLastIndex = createSortedIndex(true);

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (guard ? isIterateeCall(array, n, guard) : n == null) {
        n = 1;
      }
      n = length - (+n || 0);
      return baseSlice(array, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`
     * and invoked with three arguments: (value, index, array).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRightWhile([1, 2, 3], function(n) {
     *   return n > 1;
     * });
     * // => [2, 3]
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');
     * // => ['pebbles']
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');
     * // => ['fred', 'pebbles']
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.takeRightWhile(users, 'active'), 'user');
     * // => []
     */
    function takeRightWhile(array, predicate, thisArg) {
      return (array && array.length)
        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is bound to
     * `thisArg` and invoked with three arguments: (value, index, array).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeWhile([1, 2, 3], function(n) {
     *   return n < 3;
     * });
     * // => [1, 2]
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false},
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');
     * // => ['barney']
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.pluck(_.takeWhile(users, 'active', false), 'user');
     * // => ['barney', 'fred']
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.takeWhile(users, 'active'), 'user');
     * // => []
     */
    function takeWhile(array, predicate, thisArg) {
      return (array && array.length)
        ? baseWhile(array, getCallback(predicate, thisArg, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all of the provided arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([1, 2], [4, 2], [2, 1]);
     * // => [1, 2, 4]
     */
    var union = restParam(function(arrays) {
      return baseUniq(baseFlatten(arrays, false, true));
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurence of each element
     * is kept. Providing `true` for `isSorted` performs a faster search algorithm
     * for sorted arrays. If an iteratee function is provided it is invoked for
     * each element in the array to generate the criterion by which uniqueness
     * is computed. The `iteratee` is bound to `thisArg` and invoked with three
     * arguments: (value, index, array).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {boolean} [isSorted] Specify the array is sorted.
     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array} Returns the new duplicate-value-free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     *
     * // using `isSorted`
     * _.uniq([1, 1, 2], true);
     * // => [1, 2]
     *
     * // using an iteratee function
     * _.uniq([1, 2.5, 1.5, 2], function(n) {
     *   return this.floor(n);
     * }, Math);
     * // => [1, 2.5]
     *
     * // using the `_.property` callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, iteratee, thisArg) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      if (isSorted != null && typeof isSorted != 'boolean') {
        thisArg = iteratee;
        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;
        isSorted = false;
      }
      var callback = getCallback();
      if (!(iteratee == null && callback === baseCallback)) {
        iteratee = callback(iteratee, thisArg, 3);
      }
      return (isSorted && getIndexOf() == baseIndexOf)
        ? sortedUniq(array, iteratee)
        : baseUniq(array, iteratee);
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     *
     * _.unzip(zipped);
     * // => [['fred', 'barney'], [30, 40], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var index = -1,
          length = 0;

      array = arrayFilter(array, function(group) {
        if (isArrayLike(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      var result = Array(length);
      while (++index < length) {
        result[index] = arrayMap(array, baseProperty(index));
      }
      return result;
    }

    /**
     * This method is like `_.unzip` except that it accepts an iteratee to specify
     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`
     * and invoked with four arguments: (accumulator, value, index, group).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee] The function to combine regrouped values.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee, thisArg) {
      var length = array ? array.length : 0;
      if (!length) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      iteratee = bindCallback(iteratee, thisArg, 4);
      return arrayMap(result, function(group) {
        return arrayReduce(group, iteratee, undefined, true);
      });
    }

    /**
     * Creates an array excluding all provided values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {Array} array The array to filter.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 3], 1, 2);
     * // => [3]
     */
    var without = restParam(function(array, values) {
      return isArrayLike(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the provided arrays.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of values.
     * @example
     *
     * _.xor([1, 2], [4, 2]);
     * // => [1, 4]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArrayLike(array)) {
          var result = result
            ? arrayPush(baseDifference(result, array), baseDifference(array, result))
            : array;
        }
      }
      return result ? baseUniq(result) : [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second elements
     * of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    var zip = restParam(unzip);

    /**
     * The inverse of `_.pairs`; this method returns an object composed from arrays
     * of property names and values. Provide either a single two dimensional array,
     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names
     * and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Array
     * @param {Array} props The property names.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject([['fred', 30], ['barney', 40]]);
     * // => { 'fred': 30, 'barney': 40 }
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(props, values) {
      var index = -1,
          length = props ? props.length : 0,
          result = {};

      if (length && !values && !isArray(props[0])) {
        values = [];
      }
      while (++index < length) {
        var key = props[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /**
     * This method is like `_.zip` except that it accepts an iteratee to specify
     * how grouped values should be combined. The `iteratee` is bound to `thisArg`
     * and invoked with four arguments: (accumulator, value, index, group).
     *
     * @static
     * @memberOf _
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee] The function to combine grouped values.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);
     * // => [111, 222]
     */
    var zipWith = restParam(function(arrays) {
      var length = arrays.length,
          iteratee = length > 2 ? arrays[length - 2] : undefined,
          thisArg = length > 1 ? arrays[length - 1] : undefined;

      if (length > 2 && typeof iteratee == 'function') {
        length -= 2;
      } else {
        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;
        thisArg = undefined;
      }
      arrays.length = length;
      return unzipWith(arrays, iteratee, thisArg);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps `value` with explicit method
     * chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chain
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(users)
     *   .sortBy('age')
     *   .map(function(chr) {
     *     return chr.user + ' is ' + chr.age;
     *   })
     *   .first()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor is
     * bound to `thisArg` and invoked with one argument; (value). The purpose of
     * this method is to "tap into" a method chain in order to perform operations
     * on intermediate results within the chain.
     *
     * @static
     * @memberOf _
     * @category Chain
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @param {*} [thisArg] The `this` binding of `interceptor`.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor, thisArg) {
      interceptor.call(thisArg, value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     *
     * @static
     * @memberOf _
     * @category Chain
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @param {*} [thisArg] The `this` binding of `interceptor`.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor, thisArg) {
      return interceptor.call(thisArg, value);
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chain
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(users).first();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(users).chain()
     *   .first()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chained sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @category Chain
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Creates a new array joining a wrapped array with any additional arrays
     * and/or values.
     *
     * @name concat
     * @memberOf _
     * @category Chain
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var wrapped = _(array).concat(2, [3], [[4]]);
     *
     * console.log(wrapped.value());
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    var wrapperConcat = restParam(function(values) {
      values = baseFlatten(values);
      return this.thru(function(array) {
        return arrayConcat(isArray(array) ? array : [toObject(array)], values);
      });
    });

    /**
     * Creates a clone of the chained sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @category Chain
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).map(function(value) {
     *   return Math.pow(value, 2);
     * });
     *
     * var other = [3, 4];
     * var otherWrapped = wrapped.plant(other);
     *
     * otherWrapped.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * Reverses the wrapped array so the first element becomes the last, the
     * second element becomes the second to last, and so on.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @category Chain
     * @returns {Object} Returns the new reversed `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;

      var interceptor = function(value) {
        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();
      };
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(interceptor);
    }

    /**
     * Produces the result of coercing the unwrapped value to a string.
     *
     * @name toString
     * @memberOf _
     * @category Chain
     * @returns {string} Returns the coerced string value.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return (this.value() + '');
    }

    /**
     * Executes the chained sequence to extract the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @alias run, toJSON, valueOf
     * @category Chain
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements corresponding to the given keys, or indexes,
     * of `collection`. Keys may be specified as individual arguments or as arrays
     * of keys.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [props] The property names
     *  or indexes of elements to pick, specified individually or in arrays.
     * @returns {Array} Returns the new array of picked elements.
     * @example
     *
     * _.at(['a', 'b', 'c'], [0, 2]);
     * // => ['a', 'c']
     *
     * _.at(['barney', 'fred', 'pebbles'], 0, 2);
     * // => ['barney', 'pebbles']
     */
    var at = restParam(function(collection, props) {
      return baseAt(collection, baseFlatten(props));
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through `iteratee`. The corresponding value
     * of each key is the number of times the key was returned by `iteratee`.
     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
     * (value, index|key, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(n) {
     *   return Math.floor(n);
     * });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(n) {
     *   return this.floor(n);
     * }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * The predicate is bound to `thisArg` and invoked with three arguments:
     * (value, index|key, collection).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'active': false },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.every(users, 'active', false);
     * // => true
     *
     * // using the `_.property` callback shorthand
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, thisArg) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {
        predicate = undefined;
      }
      if (typeof predicate != 'function' || thisArg !== undefined) {
        predicate = getCallback(predicate, thisArg, 3);
      }
      return func(collection, predicate);
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is bound to `thisArg` and
     * invoked with three arguments: (value, index|key, collection).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the new filtered array.
     * @example
     *
     * _.filter([4, 5, 6], function(n) {
     *   return n % 2 == 0;
     * });
     * // => [4, 6]
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');
     * // => ['barney']
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.pluck(_.filter(users, 'active', false), 'user');
     * // => ['fred']
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.filter(users, 'active'), 'user');
     * // => ['barney']
     */
    function filter(collection, predicate, thisArg) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      predicate = getCallback(predicate, thisArg, 3);
      return func(collection, predicate);
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is bound to `thisArg` and
     * invoked with three arguments: (value, index|key, collection).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.result(_.find(users, function(chr) {
     *   return chr.age < 40;
     * }), 'user');
     * // => 'barney'
     *
     * // using the `_.matches` callback shorthand
     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');
     * // => 'pebbles'
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.result(_.find(users, 'active', false), 'user');
     * // => 'fred'
     *
     * // using the `_.property` callback shorthand
     * _.result(_.find(users, 'active'), 'user');
     * // => 'barney'
     */
    var find = createFind(baseEach);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(baseEachRight, true);

    /**
     * Performs a deep comparison between each element in `collection` and the
     * source object, returning the first element that has equivalent property
     * values.
     *
     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
     * numbers, `Object` objects, regexes, and strings. Objects are compared by
     * their own, not inherited, enumerable properties. For comparing a single
     * own or inherited property value see `_.matchesProperty`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {Object} source The object of property values to match.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');
     * // => 'barney'
     *
     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');
     * // => 'fred'
     */
    function findWhere(collection, source) {
      return find(collection, baseMatches(source));
    }

    /**
     * Iterates over elements of `collection` invoking `iteratee` for each element.
     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
     * (value, index|key, collection). Iteratee functions may exit iteration early
     * by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length" property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2]).forEach(function(n) {
     *   console.log(n);
     * }).value();
     * // => logs each value from left to right and returns the array
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {
     *   console.log(n, key);
     * });
     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)
     */
    var forEach = createForEach(arrayEach, baseEach);

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2]).forEachRight(function(n) {
     *   console.log(n);
     * }).value();
     * // => logs each value from right to left and returns the array
     */
    var forEachRight = createForEach(arrayEachRight, baseEachRight);

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through `iteratee`. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
     * (value, index|key, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(n) {
     *   return Math.floor(n);
     * });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(n) {
     *   return this.floor(n);
     * }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using the `_.property` callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        result[key] = [value];
      }
    });

    /**
     * Checks if `value` is in `collection` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it is used as the offset
     * from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @alias contains, include
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {*} target The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.
     * @returns {boolean} Returns `true` if a matching element is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.includes('pebbles', 'eb');
     * // => true
     */
    function includes(collection, target, fromIndex, guard) {
      var length = collection ? getLength(collection) : 0;
      if (!isLength(length)) {
        collection = values(collection);
        length = collection.length;
      }
      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {
        fromIndex = 0;
      } else {
        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);
      }
      return (typeof collection == 'string' || !isArray(collection) && isString(collection))
        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)
        : (!!length && getIndexOf(collection, target, fromIndex) > -1);
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through `iteratee`. The corresponding value
     * of each key is the last element responsible for generating the key. The
     * iteratee function is bound to `thisArg` and invoked with three arguments:
     * (value, index|key, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keyData = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keyData, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keyData, function(object) {
     *   return String.fromCharCode(object.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keyData, function(object) {
     *   return this.fromCharCode(object.code);
     * }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `methodName` is a function it is
     * invoked for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invoke = restParam(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          isProp = isKey(path),
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);
        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);
      });
      return result;
    });

    /**
     * Creates an array of values by running each element in `collection` through
     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three
     * arguments: (value, index|key, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,
     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,
     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,
     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,
     * `sum`, `uniq`, and `words`
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function timesThree(n) {
     *   return n * 3;
     * }
     *
     * _.map([1, 2], timesThree);
     * // => [3, 6]
     *
     * _.map({ 'a': 1, 'b': 2 }, timesThree);
     * // => [3, 6] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // using the `_.property` callback shorthand
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee, thisArg) {
      var func = isArray(collection) ? arrayMap : baseMap;
      iteratee = getCallback(iteratee, thisArg, 3);
      return func(collection, iteratee);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, while the second of which
     * contains elements `predicate` returns falsey for. The predicate is bound
     * to `thisArg` and invoked with three arguments: (value, index|key, collection).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * _.partition([1, 2, 3], function(n) {
     *   return n % 2;
     * });
     * // => [[1, 3], [2]]
     *
     * _.partition([1.2, 2.3, 3.4], function(n) {
     *   return this.floor(n) % 2;
     * }, Math);
     * // => [[1.2, 3.4], [2.3]]
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * var mapper = function(array) {
     *   return _.pluck(array, 'user');
     * };
     *
     * // using the `_.matches` callback shorthand
     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);
     * // => [['pebbles'], ['barney', 'fred']]
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.map(_.partition(users, 'active', false), mapper);
     * // => [['barney', 'pebbles'], ['fred']]
     *
     * // using the `_.property` callback shorthand
     * _.map(_.partition(users, 'active'), mapper);
     * // => [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Gets the property value of `path` from all elements in `collection`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|string} path The path of the property to pluck.
     * @returns {Array} Returns the property values.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(users, 'user');
     * // => ['barney', 'fred']
     *
     * var userIndex = _.indexBy(users, 'user');
     * _.pluck(userIndex, 'age');
     * // => [36, 40] (iteration order is not guaranteed)
     */
    function pluck(collection, path) {
      return map(collection, property(path));
    }

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` through `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not provided the first element of `collection` is used as the initial
     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,
     * and `sortByOrder`
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.reduce([1, 2], function(total, n) {
     *   return total + n;
     * });
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {
     *   result[key] = n * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)
     */
    var reduce = createReduce(arrayReduce, baseEach);

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    var reduceRight = createReduce(arrayReduceRight, baseEachRight);

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Array} Returns the new filtered array.
     * @example
     *
     * _.reject([1, 2, 3, 4], function(n) {
     *   return n % 2 == 0;
     * });
     * // => [1, 3]
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');
     * // => ['barney']
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.pluck(_.reject(users, 'active', false), 'user');
     * // => ['fred']
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.reject(users, 'active'), 'user');
     * // => ['barney']
     */
    function reject(collection, predicate, thisArg) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      predicate = getCallback(predicate, thisArg, 3);
      return func(collection, function(value, index, collection) {
        return !predicate(value, index, collection);
      });
    }

    /**
     * Gets a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {*} Returns the random sample(s).
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (guard ? isIterateeCall(collection, n, guard) : n == null) {
        collection = toIterable(collection);
        var length = collection.length;
        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;
      }
      var index = -1,
          result = toArray(collection),
          length = result.length,
          lastIndex = length - 1;

      n = nativeMin(n < 0 ? 0 : (+n || 0), length);
      while (++index < n) {
        var rand = baseRandom(index, lastIndex),
            value = result[rand];

        result[rand] = result[index];
        result[index] = value;
      }
      result.length = n;
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      return sample(collection, POSITIVE_INFINITY);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the size of `collection`.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? getLength(collection) : 0;
      return isLength(length) ? length : keys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * The function returns as soon as it finds a passing value and does not iterate
     * over the entire collection. The predicate is bound to `thisArg` and invoked
     * with three arguments: (value, index|key, collection).
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // using the `_.matches` callback shorthand
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.some(users, 'active', false);
     * // => true
     *
     * // using the `_.property` callback shorthand
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, thisArg) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {
        predicate = undefined;
      }
      if (typeof predicate != 'function' || thisArg !== undefined) {
        predicate = getCallback(predicate, thisArg, 3);
      }
      return func(collection, predicate);
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through `iteratee`. This method performs
     * a stable sort, that is, it preserves the original sort order of equal elements.
     * The `iteratee` is bound to `thisArg` and invoked with three arguments:
     * (value, index|key, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * _.sortBy([1, 2, 3], function(n) {
     *   return Math.sin(n);
     * });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(n) {
     *   return this.sin(n);
     * }, Math);
     * // => [3, 1, 2]
     *
     * var users = [
     *   { 'user': 'fred' },
     *   { 'user': 'pebbles' },
     *   { 'user': 'barney' }
     * ];
     *
     * // using the `_.property` callback shorthand
     * _.pluck(_.sortBy(users, 'user'), 'user');
     * // => ['barney', 'fred', 'pebbles']
     */
    function sortBy(collection, iteratee, thisArg) {
      if (collection == null) {
        return [];
      }
      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
        iteratee = undefined;
      }
      var index = -1;
      iteratee = getCallback(iteratee, thisArg, 3);

      var result = baseMap(collection, function(value, key, collection) {
        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };
      });
      return baseSortBy(result, compareAscending);
    }

    /**
     * This method is like `_.sortBy` except that it can sort by multiple iteratees
     * or property names.
     *
     * If a property name is provided for an iteratee the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If an object is provided for an iteratee the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees
     *  The iteratees to sort by, specified as individual values or arrays of values.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 42 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.map(_.sortByAll(users, ['user', 'age']), _.values);
     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]
     *
     * _.map(_.sortByAll(users, 'user', function(chr) {
     *   return Math.floor(chr.age / 10);
     * }), _.values);
     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
     */
    var sortByAll = restParam(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var guard = iteratees[2];
      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {
        iteratees.length = 1;
      }
      return baseSortByOrder(collection, baseFlatten(iteratees), []);
    });

    /**
     * This method is like `_.sortByAll` except that it allows specifying the
     * sort orders of the iteratees to sort by. If `orders` is unspecified, all
     * values are sorted in ascending order. Otherwise, a value is sorted in
     * ascending order if its corresponding order is "asc", and descending if "desc".
     *
     * If a property name is provided for an iteratee the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If an object is provided for an iteratee the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {boolean[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 42 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // sort by `user` in ascending order and by `age` in descending order
     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);
     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
     */
    function sortByOrder(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (guard && isIterateeCall(iteratees, orders, guard)) {
        orders = undefined;
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseSortByOrder(collection, iteratees, orders);
    }

    /**
     * Performs a deep comparison between each element in `collection` and the
     * source object, returning an array of all elements that have equivalent
     * property values.
     *
     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
     * numbers, `Object` objects, regexes, and strings. Objects are compared by
     * their own, not inherited, enumerable properties. For comparing a single
     * own or inherited property value see `_.matchesProperty`.
     *
     * @static
     * @memberOf _
     * @category Collection
     * @param {Array|Object|string} collection The collection to search.
     * @param {Object} source The object of property values to match.
     * @returns {Array} Returns the new filtered array.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },
     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');
     * // => ['barney']
     *
     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');
     * // => ['fred']
     */
    function where(collection, source) {
      return filter(collection, baseMatches(source));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Date
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => logs the number of milliseconds it took for the deferred function to be invoked
     */
    var now = nativeNow || function() {
      return new Date().getTime();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it is called `n` or more times.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'done saving!' after the two async saves have completed
     */
    function after(n, func) {
      if (typeof func != 'function') {
        if (typeof n == 'function') {
          var temp = n;
          n = func;
          func = temp;
        } else {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
      }
      n = nativeIsFinite(n = +n) ? n : 0;
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that accepts up to `n` arguments ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Function} Returns the new function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      if (guard && isIterateeCall(func, n, guard)) {
        n = undefined;
      }
      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);
      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it is called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery('#add').on('click', _.before(5, addContactToList));
     * // => allows adding up to 4 contacts to the list
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        if (typeof n == 'function') {
          var temp = n;
          n = func;
          func = temp;
        } else {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
      }
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and prepends any additional `_.bind` arguments to those provided to the
     * bound function.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind` this method does not set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var greet = function(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * };
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // using placeholders
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = restParam(function(func, thisArg, partials) {
      var bitmask = BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, bind.placeholder);
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all enumerable function
     * properties, own and inherited, of `object` are bound.
     *
     * **Note:** This method does not set the "length" property of bound functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} [methodNames] The object method names to bind,
     *  specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs' when the element is clicked
     */
    var bindAll = restParam(function(object, methodNames) {
      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);

      var index = -1,
          length = methodNames.length;

      while (++index < length) {
        var key = methodNames[index];
        object[key] = createWrapper(object[key], BIND_FLAG, object);
      }
      return object;
    });

    /**
     * Creates a function that invokes the method at `object[key]` and prepends
     * any additional `_.bindKey` arguments to those provided to the bound function.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist.
     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // using placeholders
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = restParam(function(object, key, partials) {
      var bitmask = BIND_FLAG | BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, bindKey.placeholder);
        bitmask |= PARTIAL_FLAG;
      }
      return createWrapper(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts one or more arguments of `func` that when
     * called either invokes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` may be specified
     * if `func.length` is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method does not set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // using placeholders
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    var curry = createCurry(CURRY_FLAG);

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method does not set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // using placeholders
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    var curryRight = createCurry(CURRY_RIGHT_FLAG);

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed invocations. Provide an options object to indicate that `func`
     * should be invoked on the leading and/or trailing edge of the `wait` timeout.
     * Subsequent calls to the debounced function return the result of the last
     * `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify invoking on the leading
     *  edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be
     *  delayed before it is invoked.
     * @param {boolean} [options.trailing=true] Specify invoking on the trailing
     *  edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // ensure `batchLog` is invoked once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }));
     *
     * // cancel a debounced call
     * var todoChanges = _.debounce(batchLog, 1000);
     * Object.observe(models.todo, todoChanges);
     *
     * Object.observe(models, function(changes) {
     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {
     *     todoChanges.cancel();
     *   }
     * }, ['delete']);
     *
     * // ...at some point `models.todo` is changed
     * models.todo.completed = true;
     *
     * // ...before 1 second has passed `models.todo` is deleted
     * // which cancels the debounced `todoChanges` call
     * delete models.todo;
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = wait < 0 ? 0 : (+wait || 0);
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = !!options.leading;
        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function cancel() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        if (maxTimeoutId) {
          clearTimeout(maxTimeoutId);
        }
        lastCalled = 0;
        maxTimeoutId = timeoutId = trailingCall = undefined;
      }

      function complete(isCalled, id) {
        if (id) {
          clearTimeout(id);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (isCalled) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = undefined;
          }
        }
      }

      function delayed() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0 || remaining > wait) {
          complete(trailingCall, maxTimeoutId);
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      }

      function maxDelayed() {
        complete(trailing, timeoutId);
      }

      function debounced() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0 || remaining > maxWait;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = undefined;
        }
        return result;
      }
      debounced.cancel = cancel;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    var defer = restParam(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => logs 'later' after one second
     */
    var delay = restParam(function(func, wait, args) {
      return baseDelay(func, wait, args);
    });

    /**
     * Creates a function that returns the result of invoking the provided
     * functions with the `this` binding of the created function, where each
     * successive invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {...Function} [funcs] Functions to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow(_.add, square);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the provided functions from right to left.
     *
     * @static
     * @memberOf _
     * @alias backflow, compose
     * @category Function
     * @param {...Function} [funcs] Functions to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight(square, _.add);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is coerced to a string and used as the
     * cache key. The `func` is invoked with the `this` binding of the memoized
     * function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var upperCase = _.memoize(function(string) {
     *   return string.toUpperCase();
     * });
     *
     * upperCase('fred');
     * // => 'FRED'
     *
     * // modifying the result cache
     * upperCase.cache.set('fred', 'BARNEY');
     * upperCase('fred');
     * // => 'BARNEY'
     *
     * // replacing `_.memoize.Cache`
     * var object = { 'user': 'fred' };
     * var other = { 'user': 'barney' };
     * var identity = _.memoize(_.identity);
     *
     * identity(object);
     * // => { 'user': 'fred' }
     * identity(other);
     * // => { 'user': 'fred' }
     *
     * _.memoize.Cache = WeakMap;
     * var identity = _.memoize(_.identity);
     *
     * identity(object);
     * // => { 'user': 'fred' }
     * identity(other);
     * // => { 'user': 'barney' }
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new memoize.Cache;
      return memoized;
    }

    /**
     * Creates a function that runs each argument through a corresponding
     * transform function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms] The functions to transform
     * arguments, specified as individual functions or arrays of functions.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var modded = _.modArgs(function(x, y) {
     *   return [x, y];
     * }, square, doubled);
     *
     * modded(1, 2);
     * // => [1, 4]
     *
     * modded(5, 10);
     * // => [25, 20]
     */
    var modArgs = restParam(function(func, transforms) {
      transforms = baseFlatten(transforms);
      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = transforms.length;
      return restParam(function(args) {
        var index = nativeMin(args.length, length);
        while (index--) {
          args[index] = transforms[index](args[index]);
        }
        return func.apply(this, args);
      });
    });

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        return !predicate.apply(this, arguments);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first call. The `func` is invoked
     * with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` invokes `createApplication` once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with `partial` arguments prepended
     * to those provided to the new function. This method is like `_.bind` except
     * it does **not** alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method does not set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) {
     *   return greeting + ' ' + name;
     * };
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // using placeholders
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = createPartial(PARTIAL_FLAG);

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to those provided to the new function.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method does not set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) {
     *   return greeting + ' ' + name;
     * };
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // using placeholders
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified indexes where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes,
     *  specified as individual indexes or arrays of indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, 2, 0, 1);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     *
     * var map = _.rearg(_.map, [1, 0]);
     * map(function(n) {
     *   return n * 3;
     * }, [1, 2, 3]);
     * // => [3, 6, 9]
     */
    var rearg = restParam(function(func, indexes) {
      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as an array.
     *
     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.restParam(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function restParam(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            rest = Array(length);

        while (++index < length) {
          rest[index] = args[start + index];
        }
        switch (start) {
          case 0: return func.call(this, rest);
          case 1: return func.call(this, args[0], rest);
          case 2: return func.call(this, args[0], args[1], rest);
        }
        var otherArgs = Array(start + 1);
        index = -1;
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = rest;
        return func.apply(this, otherArgs);
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the created
     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).
     *
     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * // with a Promise
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function(array) {
        return func.apply(this, array);
      };
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed invocations. Provide an options object to indicate
     * that `func` should be invoked on the leading and/or trailing edge of the
     * `wait` timeout. Subsequent calls to the throttled function return the
     * result of the last `func` call.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify invoking on the leading
     *  edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify invoking on the trailing
     *  edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     *
     * // cancel a trailing throttled call
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Any additional arguments provided to the function are
     * appended to those provided to the wrapper function. The wrapper is invoked
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      wrapper = wrapper == null ? identity : wrapper;
      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,
     * otherwise they are assigned by reference. If `customizer` is provided it is
     * invoked to produce the cloned values. If `customizer` returns `undefined`
     * cloning is handled by the method instead. The `customizer` is bound to
     * `thisArg` and invoked with two argument; (value [, index|key, object]).
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).
     * The enumerable properties of `arguments` objects and objects created by
     * constructors other than `Object` are cloned to plain `Object` objects. An
     * empty object is returned for uncloneable values such as functions, DOM nodes,
     * Maps, Sets, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @param {Function} [customizer] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `customizer`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * var shallow = _.clone(users);
     * shallow[0] === users[0];
     * // => true
     *
     * var deep = _.clone(users, true);
     * deep[0] === users[0];
     * // => false
     *
     * // using a customizer callback
     * var el = _.clone(document.body, function(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * });
     *
     * el === document.body
     * // => false
     * el.nodeName
     * // => BODY
     * el.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, customizer, thisArg) {
      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {
        isDeep = false;
      }
      else if (typeof isDeep == 'function') {
        thisArg = customizer;
        customizer = isDeep;
        isDeep = false;
      }
      return typeof customizer == 'function'
        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))
        : baseClone(value, isDeep);
    }

    /**
     * Creates a deep clone of `value`. If `customizer` is provided it is invoked
     * to produce the cloned values. If `customizer` returns `undefined` cloning
     * is handled by the method instead. The `customizer` is bound to `thisArg`
     * and invoked with two argument; (value [, index|key, object]).
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).
     * The enumerable properties of `arguments` objects and objects created by
     * constructors other than `Object` are cloned to plain `Object` objects. An
     * empty object is returned for uncloneable values such as functions, DOM nodes,
     * Maps, Sets, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to deep clone.
     * @param {Function} [customizer] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `customizer`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * var deep = _.cloneDeep(users);
     * deep[0] === users[0];
     * // => false
     *
     * // using a customizer callback
     * var el = _.cloneDeep(document.body, function(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * });
     *
     * el === document.body
     * // => false
     * el.nodeName
     * // => BODY
     * el.childNodes.length;
     * // => 20
     */
    function cloneDeep(value, customizer, thisArg) {
      return typeof customizer == 'function'
        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))
        : baseClone(value, true);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    function gt(value, other) {
      return value > other;
    }

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    function gte(value, other) {
      return value >= other;
    }

    /**
     * Checks if `value` is classified as an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return isObjectLike(value) && isArrayLike(value) &&
        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
    }

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(function() { return arguments; }());
     * // => false
     */
    var isArray = nativeIsArray || function(value) {
      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
    };

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);
    }

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    function isDate(value) {
      return isObjectLike(value) && objToString.call(value) == dateTag;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);
    }

    /**
     * Checks if `value` is empty. A value is considered empty unless it is an
     * `arguments` object, array, string, or jQuery-like collection with a length
     * greater than `0` or an object with own enumerable properties.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||
          (isObjectLike(value) && isFunction(value.splice)))) {
        return !value.length;
      }
      return !keys(value).length;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent. If `customizer` is provided it is invoked to compare values.
     * If `customizer` returns `undefined` comparisons are handled by the method
     * instead. The `customizer` is bound to `thisArg` and invoked with three
     * arguments: (value, other [, index|key]).
     *
     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
     * numbers, `Object` objects, regexes, and strings. Objects are compared by
     * their own, not inherited, enumerable properties. Functions and DOM nodes
     * are **not** supported. Provide a customizer function to extend support
     * for comparing other values.
     *
     * @static
     * @memberOf _
     * @alias eq
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize value comparisons.
     * @param {*} [thisArg] The `this` binding of `customizer`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var other = { 'user': 'fred' };
     *
     * object == other;
     * // => false
     *
     * _.isEqual(object, other);
     * // => true
     *
     * // using a customizer callback
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqual(array, other, function(value, other) {
     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {
     *     return true;
     *   }
     * });
     * // => true
     */
    function isEqual(value, other, customizer, thisArg) {
      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(10);
     * // => true
     *
     * _.isFinite('10');
     * // => false
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite(Object(10));
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in older versions of Chrome and Safari which return 'function' for regexes
      // and Safari 8 equivalents which return 'object' for typed array constructors.
      return isObject(value) && objToString.call(value) == funcTag;
    }

    /**
     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // Avoid a V8 JIT bug in Chrome 19-20.
      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
      var type = typeof value;
      return !!value && (type == 'object' || type == 'function');
    }

    /**
     * Performs a deep comparison between `object` and `source` to determine if
     * `object` contains equivalent property values. If `customizer` is provided
     * it is invoked to compare values. If `customizer` returns `undefined`
     * comparisons are handled by the method instead. The `customizer` is bound
     * to `thisArg` and invoked with three arguments: (value, other, index|key).
     *
     * **Note:** This method supports comparing properties of arrays, booleans,
     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions
     * and DOM nodes are **not** supported. Provide a customizer function to extend
     * support for comparing other values.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize value comparisons.
     * @param {*} [thisArg] The `this` binding of `customizer`.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'user': 'fred', 'age': 40 };
     *
     * _.isMatch(object, { 'age': 40 });
     * // => true
     *
     * _.isMatch(object, { 'age': 36 });
     * // => false
     *
     * // using a customizer callback
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatch(object, source, function(value, other) {
     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;
     * });
     * // => true
     */
    function isMatch(object, source, customizer, thisArg) {
      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;
      return baseIsMatch(object, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)
     * which returns `true` for `undefined` and other non-numeric values.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (value == null) {
        return false;
      }
      if (isFunction(value)) {
        return reIsNative.test(fnToString.call(value));
      }
      return isObjectLike(value) && reIsHostCtor.test(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified
     * as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isNumber(8.4);
     * // => true
     *
     * _.isNumber(NaN);
     * // => true
     *
     * _.isNumber('8.4');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * **Note:** This method assumes objects created by the `Object` constructor
     * have no inherited enumerable properties.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      var Ctor;

      // Exit early for non `Object` objects.
      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||
          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {
        return false;
      }
      // IE < 9 iterates inherited properties before own properties. If the first
      // iterated property is an object's own property then there are no inherited
      // enumerable properties.
      var result;
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      baseForIn(value, function(subValue, key) {
        result = key;
      });
      return result === undefined || hasOwnProperty.call(value, result);
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    function isRegExp(value) {
      return isObject(value) && objToString.call(value) == regexpTag;
    }

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    function isTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    function lt(value, other) {
      return value < other;
    }

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    function lte(value, other) {
      return value <= other;
    }

    /**
     * Converts `value` to an array.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * (function() {
     *   return _.toArray(arguments).slice(1);
     * }(1, 2, 3));
     * // => [2, 3]
     */
    function toArray(value) {
      var length = value ? getLength(value) : 0;
      if (!isLength(length)) {
        return values(value);
      }
      if (!length) {
        return [];
      }
      return arrayCopy(value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable
     * properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return baseCopy(value, keysIn(value));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * overwrite property assignments of previous sources. If `customizer` is
     * provided it is invoked to produce the merged values of the destination and
     * source properties. If `customizer` returns `undefined` merging is handled
     * by the method instead. The `customizer` is bound to `thisArg` and invoked
     * with five arguments: (objectValue, sourceValue, key, object, source).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {*} [thisArg] The `this` binding of `customizer`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var users = {
     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
     * };
     *
     * var ages = {
     *   'data': [{ 'age': 36 }, { 'age': 40 }]
     * };
     *
     * _.merge(users, ages);
     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
     *
     * // using a customizer callback
     * var object = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var other = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(object, other, function(a, b) {
     *   if (_.isArray(a)) {
     *     return a.concat(b);
     *   }
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }
     */
    var merge = createAssigner(baseMerge);

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources overwrite property assignments of previous sources.
     * If `customizer` is provided it is invoked to produce the assigned values.
     * The `customizer` is bound to `thisArg` and invoked with five arguments:
     * (objectValue, sourceValue, key, object, source).
     *
     * **Note:** This method mutates `object` and is based on
     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).
     *
     * @static
     * @memberOf _
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {*} [thisArg] The `this` binding of `customizer`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });
     * // => { 'user': 'fred', 'age': 40 }
     *
     * // using a customizer callback
     * var defaults = _.partialRight(_.assign, function(value, other) {
     *   return _.isUndefined(value) ? other : value;
     * });
     *
     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
     * // => { 'user': 'barney', 'age': 36 }
     */
    var assign = createAssigner(function(object, source, customizer) {
      return customizer
        ? assignWith(object, source, customizer)
        : baseAssign(object, source);
    });

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties, guard) {
      var result = baseCreate(prototype);
      if (guard && isIterateeCall(prototype, properties, guard)) {
        properties = undefined;
      }
      return properties ? baseAssign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
     * // => { 'user': 'barney', 'age': 36 }
     */
    var defaults = createDefaults(assign, assignDefaults);

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });
     * // => { 'user': { 'name': 'barney', 'age': 36 } }
     *
     */
    var defaultsDeep = createDefaults(merge, mergeDefaults);

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // using the `_.matches` callback shorthand
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.findKey(users, 'active', false);
     * // => 'fred'
     *
     * // using the `_.property` callback shorthand
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    var findKey = createFindKey(baseForOwn);

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * If a property name is provided for `predicate` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `predicate` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [predicate=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles` assuming `_.findKey` returns `barney`
     *
     * // using the `_.matches` callback shorthand
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // using the `_.matchesProperty` callback shorthand
     * _.findLastKey(users, 'active', false);
     * // => 'fred'
     *
     * // using the `_.property` callback shorthand
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    var findLastKey = createFindKey(baseForOwnRight);

    /**
     * Iterates over own and inherited enumerable properties of an object invoking
     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)
     */
    var forIn = createForIn(baseFor);

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'
     */
    var forInRight = createForIn(baseForRight);

    /**
     * Iterates over own enumerable properties of an object invoking `iteratee`
     * for each property. The `iteratee` is bound to `thisArg` and invoked with
     * three arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'a' and 'b' (iteration order is not guaranteed)
     */
    var forOwn = createForOwn(baseForOwn);

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'
     */
    var forOwnRight = createForOwn(baseForOwnRight);

    /**
     * Creates an array of function property names from all enumerable properties,
     * own and inherited, of `object`.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the new array of property names.
     * @example
     *
     * _.functions(_);
     * // => ['after', 'ary', 'assign', ...]
     */
    function functions(object) {
      return baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the property value at `path` of `object`. If the resolved value is
     * `undefined` the `defaultValue` is used in its place.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': { 'c': 3 } } };
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b.c');
     * // => true
     *
     * _.has(object, ['a', 'b', 'c']);
     * // => true
     */
    function has(object, path) {
      if (object == null) {
        return false;
      }
      var result = hasOwnProperty.call(object, path);
      if (!result && !isKey(path)) {
        path = toPath(path);
        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
        if (object == null) {
          return false;
        }
        path = last(path);
        result = hasOwnProperty.call(object, path);
      }
      return result || (isLength(object.length) && isIndex(path, object.length) &&
        (isArray(object) || isArguments(object)));
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite property
     * assignments of previous values unless `multiValue` is `true`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to invert.
     * @param {boolean} [multiValue] Allow multiple values per key.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     *
     * // with `multiValue`
     * _.invert(object, true);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function invert(object, multiValue, guard) {
      if (guard && isIterateeCall(object, multiValue, guard)) {
        multiValue = undefined;
      }
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index],
            value = object[key];

        if (multiValue) {
          if (hasOwnProperty.call(result, value)) {
            result[value].push(key);
          } else {
            result[value] = [key];
          }
        }
        else {
          result[value] = key;
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      var Ctor = object == null ? undefined : object.constructor;
      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
          (typeof object != 'function' && isArrayLike(object))) {
        return shimKeys(object);
      }
      return isObject(object) ? nativeKeys(object) : [];
    };

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      if (object == null) {
        return [];
      }
      if (!isObject(object)) {
        object = Object(object);
      }
      var length = object.length;
      length = (length && isLength(length) &&
        (isArray(object) || isArguments(object)) && length) || 0;

      var Ctor = object.constructor,
          index = -1,
          isProto = typeof Ctor == 'function' && Ctor.prototype === object,
          result = Array(length),
          skipIndexes = length > 0;

      while (++index < length) {
        result[index] = (index + '');
      }
      for (var key in object) {
        if (!(skipIndexes && isIndex(key, length)) &&
            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * property of `object` through `iteratee`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns the new mapped object.
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    var mapKeys = createObjectMapper(true);

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through `iteratee`. The
     * iteratee function is bound to `thisArg` and invoked with three arguments:
     * (value, key, object).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [iteratee=_.identity] The function invoked
     *  per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Object} Returns the new mapped object.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {
     *   return n * 3;
     * });
     * // => { 'a': 3, 'b': 6 }
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * // using the `_.property` callback shorthand
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    var mapValues = createObjectMapper();

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable properties of `object` that are not omitted.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {Function|...(string|string[])} [predicate] The function invoked per
     *  iteration or property names to omit, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'user': 'fred', 'age': 40 };
     *
     * _.omit(object, 'age');
     * // => { 'user': 'fred' }
     *
     * _.omit(object, _.isNumber);
     * // => { 'user': 'fred' }
     */
    var omit = restParam(function(object, props) {
      if (object == null) {
        return {};
      }
      if (typeof props[0] != 'function') {
        var props = arrayMap(baseFlatten(props), String);
        return pickByArray(object, baseDifference(keysIn(object), props));
      }
      var predicate = bindCallback(props[0], props[1], 3);
      return pickByCallback(object, function(value, key, object) {
        return !predicate(value, key, object);
      });
    });

    /**
     * Creates a two dimensional array of the key-value pairs for `object`,
     * e.g. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)
     */
    function pairs(object) {
      object = toObject(object);

      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates an object composed of the picked `object` properties. Property
     * names may be specified as individual arguments or as arrays of property
     * names. If `predicate` is provided it is invoked for each property of `object`
     * picking the properties `predicate` returns truthy for. The predicate is
     * bound to `thisArg` and invoked with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {Function|...(string|string[])} [predicate] The function invoked per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `predicate`.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'user': 'fred', 'age': 40 };
     *
     * _.pick(object, 'user');
     * // => { 'user': 'fred' }
     *
     * _.pick(object, _.isString);
     * // => { 'user': 'fred' }
     */
    var pick = restParam(function(object, props) {
      if (object == null) {
        return {};
      }
      return typeof props[0] == 'function'
        ? pickByCallback(object, bindCallback(props[0], props[1], 3))
        : pickByArray(object, baseFlatten(props));
    });

    /**
     * This method is like `_.get` except that if the resolved value is a function
     * it is invoked with the `this` binding of its parent object and its result
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a.b.c', 'default');
     * // => 'default'
     *
     * _.result(object, 'a.b.c', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      var result = object == null ? undefined : object[path];
      if (result === undefined) {
        if (object != null && !isKey(path, object)) {
          path = toPath(path);
          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));
          result = object == null ? undefined : object[last(path)];
        }
        result = result === undefined ? defaultValue : result;
      }
      return isFunction(result) ? result.call(object) : result;
    }

    /**
     * Sets the property value of `path` on `object`. If a portion of `path`
     * does not exist it is created.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to augment.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, 'x[0].y.z', 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      if (object == null) {
        return object;
      }
      var pathKey = (path + '');
      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = path[index];
        if (isObject(nested)) {
          if (index == lastIndex) {
            nested[key] = value;
          } else if (nested[key] == null) {
            nested[key] = isIndex(path[index + 1]) ? [] : {};
          }
        }
        nested = nested[key];
      }
      return object;
    }

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own enumerable
     * properties through `iteratee`, with each invocation potentially mutating
     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked
     * with four arguments: (accumulator, value, key, object). Iteratee functions
     * may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * });
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {
     *   result[key] = n * 3;
     * });
     * // => { 'a': 3, 'b': 6 }
     */
    function transform(object, iteratee, accumulator, thisArg) {
      var isArr = isArray(object) || isTypedArray(object);
      iteratee = getCallback(iteratee, thisArg, 4);

      if (accumulator == null) {
        if (isArr || isObject(object)) {
          var Ctor = object.constructor;
          if (isArr) {
            accumulator = isArray(object) ? new Ctor : [];
          } else {
            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);
          }
        } else {
          accumulator = {};
        }
      }
      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Creates an array of the own enumerable property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable property values
     * of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Checks if `n` is between `start` and up to but not including, `end`. If
     * `end` is not specified it is set to `start` with `start` then set to `0`.
     *
     * @static
     * @memberOf _
     * @category Number
     * @param {number} n The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     */
    function inRange(value, start, end) {
      start = +start || 0;
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = +end || 0;
      }
      return value >= nativeMin(start, end) && value < nativeMax(start, end);
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number is returned.
     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point
     * number is returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Number
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      if (floating && isIterateeCall(min, max, floating)) {
        max = floating = undefined;
      }
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (noMax && typeof min == 'boolean') {
          floating = min;
          min = 1;
        }
        else if (typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
        noMax = false;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar');
     * // => 'fooBar'
     *
     * _.camelCase('__foo_bar__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);
    });

    /**
     * Capitalizes the first character of `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('fred');
     * // => 'Fred'
     */
    function capitalize(string) {
      string = baseToString(string);
      return string && (string.charAt(0).toUpperCase() + string.slice(1));
    }

    /**
     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = baseToString(string);
      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to search.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search from.
     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = baseToString(string);
      target = (target + '');

      var length = string.length;
      position = position === undefined
        ? length
        : nativeMin(position < 0 ? 0 : (+position || 0), length);

      position -= target.length;
      return position >= 0 && string.indexOf(target, position) == position;
    }

    /**
     * Converts the characters "&", "<", ">", '"', "'", and "\`", in `string` to
     * their corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional characters
     * use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value.
     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * Backticks are escaped because in Internet Explorer < 9, they can break out
     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),
     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and
     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)
     * for more details.
     *
     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)
     * to reduce XSS vectors.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      // Reset `lastIndex` because in IE < 9 `String#replace` does not.
      string = baseToString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "\", "/", "^", "$", ".", "|", "?",
     * "*", "+", "(", ")", "[", "]", "{" and "}" in `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https:\/\/lodash\.com\/\)'
     */
    function escapeRegExp(string) {
      string = baseToString(string);
      return (string && reHasRegExpChars.test(string))
        ? string.replace(reRegExpChars, escapeRegExpChar)
        : (string || '(?:)');
    }

    /**
     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__foo_bar__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = baseToString(string);
      length = +length;

      var strLength = string.length;
      if (strLength >= length || !nativeIsFinite(length)) {
        return string;
      }
      var mid = (length - strLength) / 2,
          leftLength = nativeFloor(mid),
          rightLength = nativeCeil(mid);

      chars = createPadding('', rightLength, chars);
      return chars.slice(0, leftLength) + string + chars;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padLeft('abc', 6);
     * // => '   abc'
     *
     * _.padLeft('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padLeft('abc', 3);
     * // => 'abc'
     */
    var padLeft = createPadDir();

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padRight('abc', 6);
     * // => 'abc   '
     *
     * _.padRight('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padRight('abc', 3);
     * // => 'abc'
     */
    var padRight = createPadDir(true);

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,
     * in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)
     * of `parseInt`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.
      // Chrome fails to trim leading <BOM> whitespace characters.
      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.
      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      string = trim(string);
      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=0] The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n) {
      var result = '';
      string = baseToString(string);
      n = +n;
      if (n < 1 || !string || !nativeIsFinite(n)) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        string += string;
      } while (n);

      return result;
    }

    /**
     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--foo-bar');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__foo_bar__');
     * // => 'Foo Bar'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to search.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = baseToString(string);
      position = position == null
        ? 0
        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);

      return string.lastIndexOf(target, position) == position;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is provided it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [options.variable] The data object variable name.
     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // using the HTML "escape" delimiter to escape data property values
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to execute JavaScript and generate HTML
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // using the ES delimiter as an alternative to the default "interpolate" delimiter
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // using custom template delimiters
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using backslashes to treat delimiters as plain text
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // using the `imports` option to import `jQuery` as `jq`
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, otherOptions) {
      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (otherOptions && isIterateeCall(string, options, otherOptions)) {
        options = otherOptions = undefined;
      }
      string = baseToString(string);
      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);

      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      var sourceURL = '//# sourceURL=' +
        ('sourceURL' in options
          ? options.sourceURL
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      var value = string;
      string = baseToString(string);
      if (!string) {
        return string;
      }
      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);
      }
      chars = (chars + '');
      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimLeft('  abc  ');
     * // => 'abc  '
     *
     * _.trimLeft('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimLeft(string, chars, guard) {
      var value = string;
      string = baseToString(string);
      if (!string) {
        return string;
      }
      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
        return string.slice(trimmedLeftIndex(string));
      }
      return string.slice(charsLeftIndex(string, (chars + '')));
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimRight('  abc  ');
     * // => '  abc'
     *
     * _.trimRight('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimRight(string, chars, guard) {
      var value = string;
      string = baseToString(string);
      if (!string) {
        return string;
      }
      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {
        return string.slice(0, trimmedRightIndex(string) + 1);
      }
      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object|number} [options] The options object or maximum string length.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.trunc('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.trunc('hi-diddly-ho there, neighborino', 24);
     * // => 'hi-diddly-ho there, n...'
     *
     * _.trunc('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.trunc('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.trunc('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function trunc(string, options, guard) {
      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (options != null) {
        if (isObject(options)) {
          var separator = 'separator' in options ? options.separator : separator;
          length = 'length' in options ? (+options.length || 0) : length;
          omission = 'omission' in options ? baseToString(options.omission) : omission;
        } else {
          length = +options || 0;
        }
      }
      string = baseToString(string);
      if (length >= string.length) {
        return string;
      }
      var end = length - omission.length;
      if (end < 1) {
        return omission;
      }
      var result = string.slice(0, end);
      if (separator == null) {
        return result + omission;
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              newEnd,
              substring = string.slice(0, end);

          if (!separator.global) {
            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            newEnd = match.index;
          }
          result = result.slice(0, newEnd == null ? end : newEnd);
        }
      } else if (string.indexOf(separator, end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their
     * corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional HTML
     * entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = baseToString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      if (guard && isIterateeCall(string, pattern, guard)) {
        pattern = undefined;
      }
      string = baseToString(string);
      return string.match(pattern || reWords) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Function} func The function to attempt.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // avoid throwing errors for invalid selectors
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = restParam(function(func, args) {
      try {
        return func.apply(undefined, args);
      } catch(e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and arguments of the created function. If `func` is a property name the
     * created callback returns the property value for a given element. If `func`
     * is an object the created callback returns `true` for elements that contain
     * the equivalent object properties, otherwise it returns `false`.
     *
     * @static
     * @memberOf _
     * @alias iteratee
     * @category Utility
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);
     *   if (!match) {
     *     return callback(func, thisArg);
     *   }
     *   return function(object) {
     *     return match[2] == 'gt'
     *       ? object[match[1]] > match[3]
     *       : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(users, 'age__gt36');
     * // => [{ 'user': 'fred', 'age': 40 }]
     */
    function callback(func, thisArg, guard) {
      if (guard && isIterateeCall(func, thisArg, guard)) {
        thisArg = undefined;
      }
      return isObjectLike(func)
        ? matches(func)
        : baseCallback(func, thisArg);
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'user': 'fred' };
     * var getter = _.constant(object);
     *
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'user': 'fred' };
     *
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that performs a deep comparison between a given object
     * and `source`, returning `true` if the given object has equivalent property
     * values, else `false`.
     *
     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
     * numbers, `Object` objects, regexes, and strings. Objects are compared by
     * their own, not inherited, enumerable properties. For comparing a single
     * own or inherited property value see `_.matchesProperty`.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, _.matches({ 'age': 40, 'active': false }));
     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, true));
    }

    /**
     * Creates a function that compares the property value of `path` on a given
     * object to `value`.
     *
     * **Note:** This method supports comparing arrays, booleans, `Date` objects,
     * numbers, `Object` objects, regexes, and strings. Objects are compared by
     * their own, not inherited, enumerable properties.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * _.find(users, _.matchesProperty('user', 'fred'));
     * // => { 'user': 'fred' }
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, true));
    }

    /**
     * Creates a function that invokes the method at `path` on a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': { 'c': _.constant(2) } } },
     *   { 'a': { 'b': { 'c': _.constant(1) } } }
     * ];
     *
     * _.map(objects, _.method('a.b.c'));
     * // => [2, 1]
     *
     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');
     * // => [1, 2]
     */
    var method = restParam(function(path, args) {
      return function(object) {
        return invokePath(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path on `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = restParam(function(object, args) {
      return function(path) {
        return invokePath(object, path, args);
      };
    });

    /**
     * Adds all own enumerable function properties of a source object to the
     * destination object. If `object` is a function then methods are added to
     * its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added
     *  are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      if (options == null) {
        var isObj = isObject(source),
            props = isObj ? keys(source) : undefined,
            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;

        if (!(methodNames ? methodNames.length : isObj)) {
          methodNames = false;
          options = source;
          source = object;
          object = this;
        }
      }
      if (!methodNames) {
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = true,
          index = -1,
          isFunc = isFunction(object),
          length = methodNames.length;

      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      while (++index < length) {
        var methodName = methodNames[index],
            func = source[methodName];

        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = (function(func) {
            return function() {
              var chainAll = this.__chain__;
              if (chain || chainAll) {
                var result = object(this.__wrapped__),
                    actions = result.__actions__ = arrayCopy(this.__actions__);

                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
                result.__chain__ = chainAll;
                return result;
              }
              return func.apply(object, arrayPush([this.value()], arguments));
            };
          }(func));
        }
      }
      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      root._ = oldDash;
      return this;
    }

    /**
     * A no-operation function that returns `undefined` regardless of the
     * arguments it receives.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @example
     *
     * var object = { 'user': 'fred' };
     *
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that returns the property value at `path` on a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': { 'c': 2 } } },
     *   { 'a': { 'b': { 'c': 1 } } }
     * ];
     *
     * _.map(objects, _.property('a.b.c'));
     * // => [2, 1]
     *
     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the property value at a given path on `object`.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return baseGet(object, toPath(path), path + '');
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. If `end` is not specified it is
     * set to `start` with `start` then set to `0`. If `end` is less than `start`
     * a zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the new array of numbers.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      if (step && isIterateeCall(start, end, step)) {
        end = step = undefined;
      }
      start = +start || 0;
      step = step == null ? 1 : (+step || 0);

      if (end == null) {
        end = start;
        start = 0;
      } else {
        end = +end || 0;
      }
      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.
      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Invokes the iteratee function `n` times, returning an array of the results
     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with
     * one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) {
     *   mage.castSpell(n);
     * });
     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`
     *
     * _.times(3, function(n) {
     *   this.cast(n);
     * }, mage);
     * // => also invokes `mage.castSpell(n)` three times
     */
    function times(n, iteratee, thisArg) {
      n = nativeFloor(n);

      // Exit early to avoid a JSC JIT bug in Safari 8
      // where `Array(0)` is treated as `Array(1)`.
      if (n < 1 || !nativeIsFinite(n)) {
        return [];
      }
      var index = -1,
          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));

      iteratee = bindCallback(iteratee, thisArg, 1);
      while (++index < n) {
        if (index < MAX_ARRAY_LENGTH) {
          result[index] = iteratee(index);
        } else {
          iteratee(index);
        }
      }
      return result;
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID is appended to it.
     *
     * @static
     * @memberOf _
     * @category Utility
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return baseToString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} augend The first number to add.
     * @param {number} addend The second number to add.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    function add(augend, addend) {
      return (+augend || 0) + (+addend || 0);
    }

    /**
     * Calculates `n` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} n The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Calculates `n` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} n The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Gets the maximum value of `collection`. If `collection` is empty or falsey
     * `-Infinity` is returned. If an iteratee function is provided it is invoked
     * for each value in `collection` to generate the criterion by which the value
     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three
     * arguments: (value, index, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => -Infinity
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * _.max(users, function(chr) {
     *   return chr.age;
     * });
     * // => { 'user': 'fred', 'age': 40 }
     *
     * // using the `_.property` callback shorthand
     * _.max(users, 'age');
     * // => { 'user': 'fred', 'age': 40 }
     */
    var max = createExtremum(gt, NEGATIVE_INFINITY);

    /**
     * Gets the minimum value of `collection`. If `collection` is empty or falsey
     * `Infinity` is returned. If an iteratee function is provided it is invoked
     * for each value in `collection` to generate the criterion by which the value
     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three
     * arguments: (value, index, collection).
     *
     * If a property name is provided for `iteratee` the created `_.property`
     * style callback returns the property value of the given element.
     *
     * If a value is also provided for `thisArg` the created `_.matchesProperty`
     * style callback returns `true` for elements that have a matching property
     * value, else `false`.
     *
     * If an object is provided for `iteratee` the created `_.matches` style
     * callback returns `true` for elements that have the properties of the given
     * object, else `false`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => Infinity
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * _.min(users, function(chr) {
     *   return chr.age;
     * });
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // using the `_.property` callback shorthand
     * _.min(users, 'age');
     * // => { 'user': 'barney', 'age': 36 }
     */
    var min = createExtremum(lt, POSITIVE_INFINITY);

    /**
     * Calculates `n` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {number} n The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Gets the sum of the values in `collection`.
     *
     * @static
     * @memberOf _
     * @category Math
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [iteratee] The function invoked per iteration.
     * @param {*} [thisArg] The `this` binding of `iteratee`.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 6]);
     * // => 10
     *
     * _.sum({ 'a': 4, 'b': 6 });
     * // => 10
     *
     * var objects = [
     *   { 'n': 4 },
     *   { 'n': 6 }
     * ];
     *
     * _.sum(objects, function(object) {
     *   return object.n;
     * });
     * // => 10
     *
     * // using the `_.property` callback shorthand
     * _.sum(objects, 'n');
     * // => 10
     */
    function sum(collection, iteratee, thisArg) {
      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {
        iteratee = undefined;
      }
      iteratee = getCallback(iteratee, thisArg, 3);
      return iteratee.length == 1
        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)
        : baseSum(collection, iteratee);
    }

    /*------------------------------------------------------------------------*/

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    // Add functions to the `Map` cache.
    MapCache.prototype['delete'] = mapDelete;
    MapCache.prototype.get = mapGet;
    MapCache.prototype.has = mapHas;
    MapCache.prototype.set = mapSet;

    // Add functions to the `Set` cache.
    SetCache.prototype.push = cachePush;

    // Assign cache to `_.memoize`.
    memoize.Cache = MapCache;

    // Add functions that return wrapped values when chaining.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.callback = callback;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.modArgs = modArgs;
    lodash.negate = negate;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.restParam = restParam;
    lodash.set = set;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortByAll = sortByAll;
    lodash.sortByOrder = sortByOrder;
    lodash.spread = spread;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.backflow = flowRight;
    lodash.collect = map;
    lodash.compose = flowRight;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.iteratee = callback;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;

    // Add functions to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add functions that return unwrapped values when chaining.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.deburr = deburr;
    lodash.endsWith = endsWith;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.findWhere = findWhere;
    lodash.first = first;
    lodash.floor = floor;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isMatch = isMatch;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.min = min;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padLeft = padLeft;
    lodash.padRight = padRight;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.sum = sum;
    lodash.template = template;
    lodash.trim = trim;
    lodash.trimLeft = trimLeft;
    lodash.trimRight = trimRight;
    lodash.trunc = trunc;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.words = words;

    // Add aliases.
    lodash.all = every;
    lodash.any = some;
    lodash.contains = includes;
    lodash.eq = isEqual;
    lodash.detect = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.head = first;
    lodash.include = includes;
    lodash.inject = reduce;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }()), false);

    /*------------------------------------------------------------------------*/

    // Add functions capable of returning wrapped and unwrapped values when chaining.
    lodash.sample = sample;

    lodash.prototype.sample = function(n) {
      if (!this.__chain__ && n == null) {
        return sample(this.value());
      }
      return this.thru(function(value) {
        return sample(value, n);
      });
    };

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        var filtered = this.__filtered__;
        if (filtered && !index) {
          return new LazyWrapper(this);
        }
        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);

        var result = this.clone();
        if (filtered) {
          result.__takeCount__ = nativeMin(result.__takeCount__, n);
        } else {
          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type != LAZY_MAP_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {
        var result = this.clone();
        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.first` and `_.last`.
    arrayEach(['first', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.
    arrayEach(['initial', 'rest'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.
    arrayEach(['pluck', 'where'], function(methodName, index) {
      var operationName = index ? 'filter' : 'map',
          createCallback = index ? baseMatches : property;

      LazyWrapper.prototype[methodName] = function(value) {
        return this[operationName](createCallback(value));
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.reject = function(predicate, thisArg) {
      predicate = getCallback(predicate, thisArg, 1);
      return this.filter(function(value) {
        return !predicate(value);
      });
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = start == null ? 0 : (+start || 0);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = (+end || 0);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {
      return this.reverse().takeWhile(predicate, thisArg).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(POSITIVE_INFINITY);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),
          retUnwrapped = /^(?:first|last)$/.test(methodName),
          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var args = retUnwrapped ? [1] : arguments,
            chainAll = this.__chain__,
            value = this.__wrapped__,
            isHybrid = !!this.__actions__.length,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var interceptor = function(value) {
          return (retUnwrapped && chainAll)
            ? lodashFunc(value, 1)[0]
            : lodashFunc.apply(undefined, arrayPush([value], args));
        };

        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },
            onlyLazy = isLazy && !isHybrid;

        if (retUnwrapped && !chainAll) {
          if (onlyLazy) {
            value = value.clone();
            value.__actions__.push(action);
            return func.call(value);
          }
          return lodashFunc.call(undefined, this.value())[0];
        }
        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push(action);
          return new LodashWrapper(result, chainAll);
        }
        return this.thru(interceptor);
      };
    });

    // Add `Array` and `String` methods to `lodash.prototype`.
    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {
      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          return func.apply(this.value(), args);
        }
        return this[chainName](function(value) {
          return func.apply(value, args);
        });
      };
    });

    // Map minified function names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name,
            names = realNames[key] || (realNames[key] = []);

        names.push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];

    // Add functions to the lazy wrapper.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chaining functions to the `lodash` wrapper.
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.concat = wrapperConcat;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add function aliases to the `lodash` wrapper.
    lodash.prototype.collect = lodash.prototype.map;
    lodash.prototype.head = lodash.prototype.first;
    lodash.prototype.select = lodash.prototype.filter;
    lodash.prototype.tail = lodash.prototype.rest;

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers like r.js check for condition patterns like the following:
  if (true) {
    // Expose lodash to the global object when an AMD loader is present to avoid
    // errors in cases where lodash is loaded by a script tag and not intended
    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for
    // more details.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
  else if (freeExports && freeModule) {
    // Export for Node.js or RingoJS.
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // Export for Rhino with CommonJS support.
    else {
      freeExports._ = _;
    }
  }
  else {
    // Export for a browser or Rhino.
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module), __webpack_require__(4)))

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**
 * riveter - Mix-in, inheritance and constructor extend behavior for your JavaScript enjoyment.
 * © 2012 - Copyright appendTo, LLC 
 * Author(s): Jim Cowart, Nicholas Cloud, Doug Neiner
 * Version: v0.2.0
 * Url: https://github.com/a2labs/riveter
 * License(s): MIT, GPL
 */
(function (root, factory) {
    if (true) {
        // AMD. Register as an anonymous module.
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(22)], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_) {
            return factory(_, root);
        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof module === "object" && module.exports) {
        // Node, or CommonJS-Like environments
        module.exports = factory(require("lodash"));
    } else {
        // Browser globals
        root.riveter = factory(root._, root);
    }
}(this, function (_, global, undefined) {
    var slice = Array.prototype.slice;
    var riveter = function () {
        var args = slice.call(arguments, 0);
        while (args.length) {
            riveter.rivet(args.shift());
        }
    };
    function getActualType(val) {
        if (_.isArray(val)) {
            return "array";
        }
        if (_.isDate(val)) {
            return "date";
        }
        if (_.isRegExp(val)) {
            return "regex";
        }
        return typeof val;
    }
    function getHandlerName(val) {
        var propType = getActualType(val);
        return behavior[propType] ? propType : "*";
    }
    var behavior = {
        "*": function (obj, sourcePropKey, sourcePropVal) {
            obj[sourcePropKey] = sourcePropVal;
        },
        "object": function (obj, sourcePropKey, sourcePropVal) {
            obj[sourcePropKey] = deepExtend(obj[sourcePropKey] || {}, sourcePropVal);
        },
        "array": function (obj, sourcePropKey, sourcePropVal) {
            obj[sourcePropKey] = [];
            _.each(sourcePropVal, function (item, idx) {
                behavior[getHandlerName(item)](obj[sourcePropKey], idx, item);
            }, this);
        }
    };
    function deepExtend(obj) {
        _.each(slice.call(arguments, 1), function (source) {
            _.each(source, function (sourcePropVal, sourcePropKey) {
                behavior[getHandlerName(sourcePropVal)](obj, sourcePropKey, sourcePropVal);
            });
        });
        return obj;
    }
    riveter.rivet = function (fn) {
        if (!fn.hasOwnProperty("extend")) {
            fn.extend = function (props, ctorProps, options) {
                return riveter.extend(fn, props, ctorProps, options);
            };
        }
        if (!fn.hasOwnProperty("compose")) {
            fn.compose = function () {
                return riveter.compose.apply(this, [fn].concat(slice.call(arguments, 0)));
            };
        }
        if (!fn.hasOwnProperty("inherits")) {
            fn.inherits = function (parent, ctorProps, options) {
                return riveter.inherits(fn, parent, ctorProps, options);
            };
        }
        if (!fn.hasOwnProperty("mixin")) {
            fn.mixin = function () {
                return riveter.mixin.apply(this, ([fn].concat(slice.call(arguments, 0))));
            };
        }
        if (!fn.hasOwnProperty("punch")) {
            fn.punch = function () {
                return riveter.punch.apply(this, ([fn].concat(slice.call(arguments, 0))));
            };
        }
    };
    riveter.inherits = function (child, parent, ctorProps, options) {
        options = options || {};
        var childProto;
        var TmpCtor = function () {};
        var Child = function () {
            parent.apply(this, arguments);
        };
        if (typeof child === "object") {
            if (child.hasOwnProperty("constructor")) {
                Child = child.constructor;
            }
            childProto = child;
        } else {
            Child = child;
            childProto = child.prototype;
        }
        riveter.rivet(Child);
        if (options.deep) {
            deepExtend(Child, parent, ctorProps);
        } else {
            _.defaults(Child, parent, ctorProps);
        }
        TmpCtor.prototype = parent.prototype;
        Child.prototype = new TmpCtor();
        if (options.deep) {
            deepExtend(Child.prototype, childProto, {
                constructor: Child
            });
        } else {
            _.extend(Child.prototype, childProto, {
                constructor: Child
            });
        }
        Child.__super = parent;
        // Next line is all about Backbone compatibility
        Child.__super__ = parent.prototype;
        return Child;
    };
    riveter.extend = function (ctor, props, ctorProps, options) {
        return riveter.inherits(props, ctor, ctorProps, options);
    };
    riveter.compose = function () {
        var args = slice.call(arguments, 0);
        var ctor = args.shift();
        riveter.rivet(ctor);
        var mixin = _.reduce(args, function (memo, val) {
            if (val.hasOwnProperty("_preInit")) {
                memo.preInit.push(val._preInit);
            }
            if (val.hasOwnProperty("_postInit")) {
                memo.postInit.push(val._postInit);
            }
            val = val.mixin || val;
            memo.items.push(val);
            return memo;
        }, {
            items: [],
            preInit: [],
            postInit: []
        });
        var res = ctor.extend({
            constructor: function () {
                var args = slice.call(arguments, 0);
                _.each(mixin.preInit, function (initializer) {
                    initializer.apply(this, args);
                }, this);
                ctor.prototype.constructor.apply(this, args);
                _.each(mixin.postInit, function (initializer) {
                    initializer.apply(this, args);
                }, this);
            }
        });
        riveter.rivet(res);
        _.defaults(res.prototype, _.extend.apply(null, [{}].concat(mixin.items)));
        return res;
    };
    riveter.mixin = function () {
        var args = slice.call(arguments, 0);
        var ctor = args.shift();
        riveter.rivet(ctor);
        _.defaults(ctor.prototype, _.extend.apply(null, [{}].concat(args)));
        return ctor;
    };
    riveter.punch = function () {
        var args = slice.call(arguments, 0);
        var ctor = args.shift();
        riveter.rivet(ctor);
        _.extend(ctor.prototype, _.extend.apply(null, [{}].concat(args)));
        return ctor;
    };
    return riveter;
}));

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lo-Dash 2.4.2 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern -o ./dist/lodash.js`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre ES5 environments */
  var undefined;

  /** Used to pool arrays and objects used internally */
  var arrayPool = [],
      objectPool = [];

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
  var keyPrefix = +new Date + '';

  /** Used as the size when optimizations are enabled for large arrays */
  var largeArraySize = 75;

  /** Used as the max size of the `arrayPool` and `objectPool` */
  var maxPoolSize = 40;

  /** Used to detect and test whitespace */
  var whitespace = (
    // whitespace
    ' \t\x0B\f\xA0\ufeff' +

    // line terminators
    '\n\r\u2028\u2029' +

    // unicode category "Zs" space separators
    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
  );

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to detected named functions */
  var reFuncName = /^\s*function[ \n\r\t]+\w/;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match leading whitespace and zeros to be removed */
  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to detect functions containing a `this` reference */
  var reThis = /\bthis\b/;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to assign default `context` object properties */
  var contextProps = [
    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',
    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
    'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used as an internal `_.debounce` options object */
  var debounceOptions = {
    'leading': false,
    'maxWait': 0,
    'trailing': false
  };

  /** Used as the property descriptor for `__bindData__` */
  var descriptor = {
    'configurable': false,
    'enumerable': false,
    'value': null,
    'writable': false
  };

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Used as a reference to the global object */
  var root = (objectTypes[typeof window] && window) || this;

  /** Detect free variable `exports` */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module` */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports` */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    root = freeGlobal;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `_.indexOf` without support for binary searches
   * or `fromIndex` constraints.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the matched value or `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    var index = (fromIndex || 0) - 1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * An implementation of `_.contains` for cache objects that mimics the return
   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
   *
   * @private
   * @param {Object} cache The cache object to inspect.
   * @param {*} value The value to search for.
   * @returns {number} Returns `0` if `value` is found, else `-1`.
   */
  function cacheIndexOf(cache, value) {
    var type = typeof value;
    cache = cache.cache;

    if (type == 'boolean' || value == null) {
      return cache[value] ? 0 : -1;
    }
    if (type != 'number' && type != 'string') {
      type = 'object';
    }
    var key = type == 'number' ? value : keyPrefix + value;
    cache = (cache = cache[type]) && cache[key];

    return type == 'object'
      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
      : (cache ? 0 : -1);
  }

  /**
   * Adds a given value to the corresponding cache object.
   *
   * @private
   * @param {*} value The value to add to the cache.
   */
  function cachePush(value) {
    var cache = this.cache,
        type = typeof value;

    if (type == 'boolean' || value == null) {
      cache[value] = true;
    } else {
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value,
          typeCache = cache[type] || (cache[type] = {});

      if (type == 'object') {
        (typeCache[key] || (typeCache[key] = [])).push(value);
      } else {
        typeCache[key] = true;
      }
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default callback when a given
   * collection is a string value.
   *
   * @private
   * @param {string} value The character to inspect.
   * @returns {number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ac = a.criteria,
        bc = b.criteria,
        index = -1,
        length = ac.length;

    while (++index < length) {
      var value = ac[index],
          other = bc[index];

      if (value !== other) {
        if (value > other || typeof value == 'undefined') {
          return 1;
        }
        if (value < other || typeof other == 'undefined') {
          return -1;
        }
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to return the same value for
    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
    //
    // This also ensures a stable sort in V8 and other engines.
    // See http://code.google.com/p/v8/issues/detail?id=90
    return a.index - b.index;
  }

  /**
   * Creates a cache object to optimize linear searches of large arrays.
   *
   * @private
   * @param {Array} [array=[]] The array to search.
   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
   */
  function createCache(array) {
    var index = -1,
        length = array.length,
        first = array[0],
        mid = array[(length / 2) | 0],
        last = array[length - 1];

    if (first && typeof first == 'object' &&
        mid && typeof mid == 'object' && last && typeof last == 'object') {
      return false;
    }
    var cache = getObject();
    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

    var result = getObject();
    result.array = array;
    result.cache = cache;
    result.push = cachePush;

    while (++index < length) {
      result.push(array[index]);
    }
    return result;
  }

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {string} match The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Gets an array from the array pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Array} The array from the pool.
   */
  function getArray() {
    return arrayPool.pop() || [];
  }

  /**
   * Gets an object from the object pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Object} The object from the pool.
   */
  function getObject() {
    return objectPool.pop() || {
      'array': null,
      'cache': null,
      'criteria': null,
      'false': false,
      'index': 0,
      'null': false,
      'number': null,
      'object': null,
      'push': null,
      'string': null,
      'true': false,
      'undefined': false,
      'value': null
    };
  }

  /**
   * Releases the given array back to the array pool.
   *
   * @private
   * @param {Array} [array] The array to release.
   */
  function releaseArray(array) {
    array.length = 0;
    if (arrayPool.length < maxPoolSize) {
      arrayPool.push(array);
    }
  }

  /**
   * Releases the given object back to the object pool.
   *
   * @private
   * @param {Object} [object] The object to release.
   */
  function releaseObject(object) {
    var cache = object.cache;
    if (cache) {
      releaseObject(cache);
    }
    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
    if (objectPool.length < maxPoolSize) {
      objectPool.push(object);
    }
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used instead of `Array#slice` to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|string} collection The collection to slice.
   * @param {number} start The start index.
   * @param {number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new `lodash` function using the given context object.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns the `lodash` function.
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See http://es5.github.io/#x11.1.5.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references */
    var Array = context.Array,
        Boolean = context.Boolean,
        Date = context.Date,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /**
     * Used for `Array` method references.
     *
     * Normally `Array.prototype` would suffice, however, using an array literal
     * avoids issues in Narwhal.
     */
    var arrayRef = [];

    /** Used for native method references */
    var objectProto = Object.prototype;

    /** Used to restore the original `_` reference in `noConflict` */
    var oldDash = context._;

    /** Used to resolve the internal [[Class]] of values */
    var toString = objectProto.toString;

    /** Used to detect if a method is native */
    var reNative = RegExp('^' +
      String(toString)
        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        .replace(/toString| for [^\]]+/g, '.*?') + '$'
    );

    /** Native method shortcuts */
    var ceil = Math.ceil,
        clearTimeout = context.clearTimeout,
        floor = Math.floor,
        fnToString = Function.prototype.toString,
        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
        hasOwnProperty = objectProto.hasOwnProperty,
        push = arrayRef.push,
        setTimeout = context.setTimeout,
        splice = arrayRef.splice,
        unshift = arrayRef.unshift;

    /** Used to set meta data on functions */
    var defineProperty = (function() {
      // IE 8 only accepts DOM elements
      try {
        var o = {},
            func = isNative(func = Object.defineProperty) && func,
            result = func(o, o, o) && func;
      } catch(e) { }
      return result;
    }());

    /* Native method shortcuts for methods with the same name as other `lodash` methods */
    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
        nativeIsFinite = context.isFinite,
        nativeIsNaN = context.isNaN,
        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used to lookup a built-in constructor by [[Class]] */
    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps the given value to enable intuitive
     * method chaining.
     *
     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
     * and `unshift`
     *
     * Chaining is supported in custom builds as long as the `value` method is
     * implicitly or explicitly included in the build.
     *
     * The chainable wrapper functions are:
     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
     * and `zip`
     *
     * The non-chainable wrapper functions are:
     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
     * `template`, `unescape`, `uniqueId`, and `value`
     *
     * The wrapper functions `first` and `last` return wrapped values when `n` is
     * provided, otherwise they return unwrapped values.
     *
     * Explicit chaining can be enabled by using the `_.chain` method.
     *
     * @name _
     * @constructor
     * @category Chaining
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns a `lodash` instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(num) {
     *   return num * num;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
       ? value
       : new lodashWrapper(value);
    }

    /**
     * A fast path for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap in a `lodash` instance.
     * @param {boolean} chainAll A flag to enable chaining for all methods
     * @returns {Object} Returns a `lodash` instance.
     */
    function lodashWrapper(value, chainAll) {
      this.__chain__ = !!chainAll;
      this.__wrapped__ = value;
    }
    // ensure `new lodashWrapper` is an instance of `lodash`
    lodashWrapper.prototype = lodash.prototype;

    /**
     * An object used to flag environments features.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * Detect if functions can be decompiled by `Function#toString`
     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

    /**
     * Detect if `Function#name` is supported (all but IE).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcNames = typeof Function.name == 'string';

    /**
     * By default, the template delimiters used by Lo-Dash are similar to those in
     * embedded Ruby (ERB). Change the following template settings to use alternative
     * delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': /<%-([\s\S]+?)%>/g,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': /<%([\s\S]+?)%>/g,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * The base implementation of `_.bind` that creates the bound function and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new bound function.
     */
    function baseBind(bindData) {
      var func = bindData[0],
          partialArgs = bindData[2],
          thisArg = bindData[4];

      function bound() {
        // `Function#bind` spec
        // http://es5.github.io/#x15.3.4.5
        if (partialArgs) {
          // avoid `arguments` object deoptimizations by using `slice` instead
          // of `Array.prototype.slice.call` and not assigning `arguments` to a
          // variable as a ternary expression
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        // mimic the constructor's `return` behavior
        // http://es5.github.io/#x13.2.2
        if (this instanceof bound) {
          // ensure `new bound` is an instance of `func`
          var thisBinding = baseCreate(func.prototype),
              result = func.apply(thisBinding, args || arguments);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisArg, args || arguments);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.clone` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, callback, stackA, stackB) {
      if (callback) {
        var result = callback(value);
        if (typeof result != 'undefined') {
          return result;
        }
      }
      // inspect [[Class]]
      var isObj = isObject(value);
      if (isObj) {
        var className = toString.call(value);
        if (!cloneableClasses[className]) {
          return value;
        }
        var ctor = ctorByClass[className];
        switch (className) {
          case boolClass:
          case dateClass:
            return new ctor(+value);

          case numberClass:
          case stringClass:
            return new ctor(value);

          case regexpClass:
            result = ctor(value.source, reFlags.exec(value));
            result.lastIndex = value.lastIndex;
            return result;
        }
      } else {
        return value;
      }
      var isArr = isArray(value);
      if (isDeep) {
        // check for circular references and return corresponding clone
        var initedStack = !stackA;
        stackA || (stackA = getArray());
        stackB || (stackB = getArray());

        var length = stackA.length;
        while (length--) {
          if (stackA[length] == value) {
            return stackB[length];
          }
        }
        result = isArr ? ctor(value.length) : {};
      }
      else {
        result = isArr ? slice(value) : assign({}, value);
      }
      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // exit for shallow clone
      if (!isDeep) {
        return result;
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(prototype, properties) {
      return isObject(prototype) ? nativeCreate(prototype) : {};
    }
    // fallback for browsers without `Object.create`
    if (!nativeCreate) {
      baseCreate = (function() {
        function Object() {}
        return function(prototype) {
          if (isObject(prototype)) {
            Object.prototype = prototype;
            var result = new Object;
            Object.prototype = null;
          }
          return result || context.Object();
        };
      }());
    }

    /**
     * The base implementation of `_.createCallback` without support for creating
     * "_.pluck" or "_.where" style callbacks.
     *
     * @private
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     */
    function baseCreateCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      // exit early for no `thisArg` or already bound by `Function#bind`
      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
        return func;
      }
      var bindData = func.__bindData__;
      if (typeof bindData == 'undefined') {
        if (support.funcNames) {
          bindData = !func.name;
        }
        bindData = bindData || !support.funcDecomp;
        if (!bindData) {
          var source = fnToString.call(func);
          if (!support.funcNames) {
            bindData = !reFuncName.test(source);
          }
          if (!bindData) {
            // checks if `func` references the `this` keyword and stores the result
            bindData = reThis.test(source);
            setBindData(func, bindData);
          }
        }
      }
      // exit early if there are no `this` references or `func` is bound
      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 2: return function(a, b) {
          return func.call(thisArg, a, b);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
      }
      return bind(func, thisArg);
    }

    /**
     * The base implementation of `createWrapper` that creates the wrapper and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new function.
     */
    function baseCreateWrapper(bindData) {
      var func = bindData[0],
          bitmask = bindData[1],
          partialArgs = bindData[2],
          partialRightArgs = bindData[3],
          thisArg = bindData[4],
          arity = bindData[5];

      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          key = func;

      function bound() {
        var thisBinding = isBind ? thisArg : this;
        if (partialArgs) {
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        if (partialRightArgs || isCurry) {
          args || (args = slice(arguments));
          if (partialRightArgs) {
            push.apply(args, partialRightArgs);
          }
          if (isCurry && args.length < arity) {
            bitmask |= 16 & ~32;
            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
          }
        }
        args || (args = arguments);
        if (isBindKey) {
          func = thisBinding[key];
        }
        if (this instanceof bound) {
          thisBinding = baseCreate(func.prototype);
          var result = func.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisBinding, args);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.difference` that accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {Array} [values] The array of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     */
    function baseDifference(array, values) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
          result = [];

      if (isLarge) {
        var cache = createCache(values);
        if (cache) {
          indexOf = cacheIndexOf;
          values = cache;
        } else {
          isLarge = false;
        }
      }
      while (++index < length) {
        var value = array[index];
        if (indexOf(values, value) < 0) {
          result.push(value);
        }
      }
      if (isLarge) {
        releaseObject(values);
      }
      return result;
    }

    /**
     * The base implementation of `_.flatten` without support for callback
     * shorthands or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
     * @param {number} [fromIndex=0] The index to start from.
     * @returns {Array} Returns a new flattened array.
     */
    function baseFlatten(array, isShallow, isStrict, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value && typeof value == 'object' && typeof value.length == 'number'
            && (isArray(value) || isArguments(value))) {
          // recursively flatten arrays (susceptible to call stack limits)
          if (!isShallow) {
            value = baseFlatten(value, isShallow, isStrict);
          }
          var valIndex = -1,
              valLength = value.length,
              resIndex = result.length;

          result.length += valLength;
          while (++valIndex < valLength) {
            result[resIndex++] = value[valIndex];
          }
        } else if (!isStrict) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
     * that allows partial "_.where" style comparisons.
     *
     * @private
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
      // used to indicate that when comparing objects, `a` has at least the properties of `b`
      if (callback) {
        var result = callback(a, b);
        if (typeof result != 'undefined') {
          return !!result;
        }
      }
      // exit early for identical values
      if (a === b) {
        // treat `+0` vs. `-0` as not equal
        return a !== 0 || (1 / a == 1 / b);
      }
      var type = typeof a,
          otherType = typeof b;

      // exit early for unlike primitive values
      if (a === a &&
          !(a && objectTypes[type]) &&
          !(b && objectTypes[otherType])) {
        return false;
      }
      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
      // http://es5.github.io/#x15.3.4.4
      if (a == null || b == null) {
        return a === b;
      }
      // compare [[Class]] names
      var className = toString.call(a),
          otherClass = toString.call(b);

      if (className == argsClass) {
        className = objectClass;
      }
      if (otherClass == argsClass) {
        otherClass = objectClass;
      }
      if (className != otherClass) {
        return false;
      }
      switch (className) {
        case boolClass:
        case dateClass:
          // coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
          return +a == +b;

        case numberClass:
          // treat `NaN` vs. `NaN` as equal
          return (a != +a)
            ? b != +b
            // but treat `+0` vs. `-0` as not equal
            : (a == 0 ? (1 / a == 1 / b) : a == +b);

        case regexpClass:
        case stringClass:
          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
          // treat string primitives and their corresponding object instances as equal
          return a == String(b);
      }
      var isArr = className == arrayClass;
      if (!isArr) {
        // unwrap any `lodash` wrapped values
        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
            bWrapped = hasOwnProperty.call(b, '__wrapped__');

        if (aWrapped || bWrapped) {
          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
        }
        // exit for functions and DOM nodes
        if (className != objectClass) {
          return false;
        }
        // in older versions of Opera, `arguments` objects have `Array` constructors
        var ctorA = a.constructor,
            ctorB = b.constructor;

        // non `Object` object instances with different constructors are not equal
        if (ctorA != ctorB &&
              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
              ('constructor' in a && 'constructor' in b)
            ) {
          return false;
        }
      }
      // assume cyclic structures are equal
      // the algorithm for detecting cyclic structures is adapted from ES 5.1
      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == a) {
          return stackB[length] == b;
        }
      }
      var size = 0;
      result = true;

      // add `a` and `b` to the stack of traversed objects
      stackA.push(a);
      stackB.push(b);

      // recursively compare objects and arrays (susceptible to call stack limits)
      if (isArr) {
        // compare lengths to determine if a deep comparison is necessary
        length = a.length;
        size = b.length;
        result = size == length;

        if (result || isWhere) {
          // deep compare the contents, ignoring non-numeric properties
          while (size--) {
            var index = length,
                value = b[size];

            if (isWhere) {
              while (index--) {
                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                  break;
                }
              }
            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
              break;
            }
          }
        }
      }
      else {
        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
        // which, in this case, is more costly
        forIn(b, function(value, key, b) {
          if (hasOwnProperty.call(b, key)) {
            // count the number of properties.
            size++;
            // deep compare each property value.
            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
          }
        });

        if (result && !isWhere) {
          // ensure both objects have the same number of properties
          forIn(a, function(value, key, a) {
            if (hasOwnProperty.call(a, key)) {
              // `size` will be `-1` if `a` has more properties than `b`
              return (result = --size > -1);
            }
          });
        }
      }
      stackA.pop();
      stackB.pop();

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.merge` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     */
    function baseMerge(object, source, callback, stackA, stackB) {
      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
        var found,
            isArr,
            result = source,
            value = object[key];

        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            if ((found = stackA[stackLength] == source)) {
              value = stackB[stackLength];
              break;
            }
          }
          if (!found) {
            var isShallow;
            if (callback) {
              result = callback(value, source);
              if ((isShallow = typeof result != 'undefined')) {
                value = result;
              }
            }
            if (!isShallow) {
              value = isArr
                ? (isArray(value) ? value : [])
                : (isPlainObject(value) ? value : {});
            }
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value);

            // recursively merge objects and arrays (susceptible to call stack limits)
            if (!isShallow) {
              baseMerge(value, source, callback, stackA, stackB);
            }
          }
        }
        else {
          if (callback) {
            result = callback(value, source);
            if (typeof result == 'undefined') {
              result = source;
            }
          }
          if (typeof result != 'undefined') {
            value = result;
          }
        }
        object[key] = value;
      });
    }

    /**
     * The base implementation of `_.random` without argument juggling or support
     * for returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns a random number.
     */
    function baseRandom(min, max) {
      return min + floor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function} [callback] The function called per iteration.
     * @returns {Array} Returns a duplicate-value-free array.
     */
    function baseUniq(array, isSorted, callback) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          result = [];

      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
          seen = (callback || isLarge) ? getArray() : result;

      if (isLarge) {
        var cache = createCache(seen);
        indexOf = cacheIndexOf;
        seen = cache;
      }
      while (++index < length) {
        var value = array[index],
            computed = callback ? callback(value, index, array) : value;

        if (isSorted
              ? !index || seen[seen.length - 1] !== computed
              : indexOf(seen, computed) < 0
            ) {
          if (callback || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      if (isLarge) {
        releaseArray(seen.array);
        releaseObject(seen);
      } else if (callback) {
        releaseArray(seen);
      }
      return result;
    }

    /**
     * Creates a function that aggregates a collection, creating an object composed
     * of keys generated from the results of running each element of the collection
     * through a callback. The given `setter` function sets the keys and values
     * of the composed object.
     *
     * @private
     * @param {Function} setter The setter function.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter) {
      return function(collection, callback, thisArg) {
        var result = {};
        callback = lodash.createCallback(callback, thisArg, 3);

        var index = -1,
            length = collection ? collection.length : 0;

        if (typeof length == 'number') {
          while (++index < length) {
            var value = collection[index];
            setter(result, value, callback(value, index, collection), collection);
          }
        } else {
          forOwn(collection, function(value, key, collection) {
            setter(result, value, callback(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a function that, when called, either curries or invokes `func`
     * with an optional `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of method flags to compose.
     *  The bitmask may be composed of the following flags:
     *  1 - `_.bind`
     *  2 - `_.bindKey`
     *  4 - `_.curry`
     *  8 - `_.curry` (bound)
     *  16 - `_.partial`
     *  32 - `_.partialRight`
     * @param {Array} [partialArgs] An array of arguments to prepend to those
     *  provided to the new function.
     * @param {Array} [partialRightArgs] An array of arguments to append to those
     *  provided to the new function.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new function.
     */
    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          isPartial = bitmask & 16,
          isPartialRight = bitmask & 32;

      if (!isBindKey && !isFunction(func)) {
        throw new TypeError;
      }
      if (isPartial && !partialArgs.length) {
        bitmask &= ~16;
        isPartial = partialArgs = false;
      }
      if (isPartialRight && !partialRightArgs.length) {
        bitmask &= ~32;
        isPartialRight = partialRightArgs = false;
      }
      var bindData = func && func.__bindData__;
      if (bindData && bindData !== true) {
        // clone `bindData`
        bindData = slice(bindData);
        if (bindData[2]) {
          bindData[2] = slice(bindData[2]);
        }
        if (bindData[3]) {
          bindData[3] = slice(bindData[3]);
        }
        // set `thisBinding` is not previously bound
        if (isBind && !(bindData[1] & 1)) {
          bindData[4] = thisArg;
        }
        // set if previously bound but not currently (subsequent curried functions)
        if (!isBind && bindData[1] & 1) {
          bitmask |= 8;
        }
        // set curried arity if not yet set
        if (isCurry && !(bindData[1] & 4)) {
          bindData[5] = arity;
        }
        // append partial left arguments
        if (isPartial) {
          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
        }
        // append partial right arguments
        if (isPartialRight) {
          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
        }
        // merge flags
        bindData[1] |= bitmask;
        return createWrapper.apply(null, bindData);
      }
      // fast path for `_.bind`
      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
    }

    /**
     * Used by `escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} match The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeHtmlChar(match) {
      return htmlEscapes[match];
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized, this method returns the custom method, otherwise it returns
     * the `baseIndexOf` function.
     *
     * @private
     * @returns {Function} Returns the "indexOf" function.
     */
    function getIndexOf() {
      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
      return result;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
     */
    function isNative(value) {
      return typeof value == 'function' && reNative.test(value);
    }

    /**
     * Sets `this` binding data on a given function.
     *
     * @private
     * @param {Function} func The function to set data on.
     * @param {Array} value The data array to set.
     */
    var setBindData = !defineProperty ? noop : function(func, value) {
      descriptor.value = value;
      defineProperty(func, '__bindData__', descriptor);
      descriptor.value = null;
    };

    /**
     * A fallback implementation of `isPlainObject` which checks if a given value
     * is an object created by the `Object` constructor, assuming objects created
     * by the `Object` constructor have no inherited enumerable properties and that
     * there are no `Object.prototype` extensions.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     */
    function shimIsPlainObject(value) {
      var ctor,
          result;

      // avoid non Object objects, `arguments` objects, and DOM elements
      if (!(value && toString.call(value) == objectClass) ||
          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
        return false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
    }

    /**
     * Used by `unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} match The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    function unescapeHtmlChar(match) {
      return htmlUnescapes[match];
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Checks if `value` is an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
     * @example
     *
     * (function() { return _.isArguments(arguments); })(1, 2, 3);
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == argsClass || false;
    }

    /**
     * Checks if `value` is an array.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
     * @example
     *
     * (function() { return _.isArray(arguments); })();
     * // => false
     *
     * _.isArray([1, 2, 3]);
     * // => true
     */
    var isArray = nativeIsArray || function(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == arrayClass || false;
    };

    /**
     * A fallback implementation of `Object.keys` which produces an array of the
     * given object's own enumerable property names.
     *
     * @private
     * @type Function
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     */
    var shimKeys = function(object) {
      var index, iterable = object, result = [];
      if (!iterable) return result;
      if (!(objectTypes[typeof object])) return result;
        for (index in iterable) {
          if (hasOwnProperty.call(iterable, index)) {
            result.push(index);
          }
        }
      return result
    };

    /**
     * Creates an array composed of the own enumerable property names of an object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     * @example
     *
     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      if (!isObject(object)) {
        return [];
      }
      return nativeKeys(object);
    };

    /**
     * Used to convert characters to HTML entities:
     *
     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
     * don't require escaping in HTML and have no special meaning unless they're part
     * of a tag or an unquoted attribute value.
     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
     */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /** Used to convert HTML entities to characters */
    var htmlUnescapes = invert(htmlEscapes);

    /** Used to match HTML entities and HTML characters */
    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

    /*--------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources will overwrite property assignments of previous
     * sources. If a callback is provided it will be executed to produce the
     * assigned values. The callback is bound to `thisArg` and invoked with two
     * arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @type Function
     * @alias extend
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize assigning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
     * // => { 'name': 'fred', 'employer': 'slate' }
     *
     * var defaults = _.partialRight(_.assign, function(a, b) {
     *   return typeof a == 'undefined' ? b : a;
     * });
     *
     * var object = { 'name': 'barney' };
     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var assign = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
        callback = args[--argsLength];
      }
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
        }
        }
      }
      return result
    };

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
     * be cloned, otherwise they will be assigned by reference. If a callback
     * is provided it will be executed to produce the cloned values. If the
     * callback returns `undefined` cloning will be handled by the method instead.
     * The callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var shallow = _.clone(characters);
     * shallow[0] === characters[0];
     * // => true
     *
     * var deep = _.clone(characters, true);
     * deep[0] === characters[0];
     * // => false
     *
     * _.mixin({
     *   'clone': _.partialRight(_.clone, function(value) {
     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
     *   })
     * });
     *
     * var clone = _.clone(document.body);
     * clone.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, callback, thisArg) {
      // allows working with "Collections" methods without using their `index`
      // and `collection` arguments for `isDeep` and `callback`
      if (typeof isDeep != 'boolean' && isDeep != null) {
        thisArg = callback;
        callback = isDeep;
        isDeep = false;
      }
      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates a deep clone of `value`. If a callback is provided it will be
     * executed to produce the cloned values. If the callback returns `undefined`
     * cloning will be handled by the method instead. The callback is bound to
     * `thisArg` and invoked with one argument; (value).
     *
     * Note: This method is loosely based on the structured clone algorithm. Functions
     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var deep = _.cloneDeep(characters);
     * deep[0] === characters[0];
     * // => false
     *
     * var view = {
     *   'label': 'docs',
     *   'node': element
     * };
     *
     * var clone = _.cloneDeep(view, function(value) {
     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
     * });
     *
     * clone.node == view.node;
     * // => false
     */
    function cloneDeep(value, callback, thisArg) {
      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? assign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional defaults of the same property will be ignored.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param- {Object} [guard] Allows working with `_.reduce` without using its
     *  `key` and `object` arguments as sources.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var object = { 'name': 'barney' };
     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var defaults = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (typeof result[index] == 'undefined') result[index] = iterable[index];
        }
        }
      }
      return result
    };

    /**
     * This method is like `_.findIndex` except that it returns the key of the
     * first element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': false },
     *   'fred': {    'age': 40, 'blocked': true },
     *   'pebbles': { 'age': 1,  'blocked': false }
     * };
     *
     * _.findKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (property order is not guaranteed across environments)
     *
     * // using "_.where" callback shorthand
     * _.findKey(characters, { 'age': 1 });
     * // => 'pebbles'
     *
     * // using "_.pluck" callback shorthand
     * _.findKey(characters, 'blocked');
     * // => 'fred'
     */
    function findKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': true },
     *   'fred': {    'age': 40, 'blocked': false },
     *   'pebbles': { 'age': 1,  'blocked': true }
     * };
     *
     * _.findLastKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
     *
     * // using "_.where" callback shorthand
     * _.findLastKey(characters, { 'age': 40 });
     * // => 'fred'
     *
     * // using "_.pluck" callback shorthand
     * _.findLastKey(characters, 'blocked');
     * // => 'pebbles'
     */
    function findLastKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwnRight(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over own and inherited enumerable properties of an object,
     * executing the callback for each property. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, key, object). Callbacks may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forIn(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
     */
    var forIn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        for (index in iterable) {
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forIn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forInRight(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
     */
    function forInRight(object, callback, thisArg) {
      var pairs = [];

      forIn(object, function(value, key) {
        pairs.push(key, value);
      });

      var length = pairs.length;
      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(pairs[length--], pairs[length], object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Iterates over own enumerable properties of an object, executing the callback
     * for each property. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, key, object). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
     */
    var forOwn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forOwn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
     */
    function forOwnRight(object, callback, thisArg) {
      var props = keys(object),
          length = props.length;

      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        var key = props[length];
        if (callback(object[key], key, object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Creates a sorted array of property names of all enumerable properties,
     * own and inherited, of `object` that have function values.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names that have function values.
     * @example
     *
     * _.functions(_);
     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
     */
    function functions(object) {
      var result = [];
      forIn(object, function(value, key) {
        if (isFunction(value)) {
          result.push(key);
        }
      });
      return result.sort();
    }

    /**
     * Checks if the specified property name exists as a direct property of `object`,
     * instead of an inherited property.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to check.
     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
     * @example
     *
     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
     * // => true
     */
    function has(object, key) {
      return object ? hasOwnProperty.call(object, key) : false;
    }

    /**
     * Creates an object composed of the inverted keys and values of the given object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the created inverted object.
     * @example
     *
     * _.invert({ 'first': 'fred', 'second': 'barney' });
     * // => { 'fred': 'first', 'barney': 'second' }
     */
    function invert(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        result[object[key]] = key;
      }
      return result;
    }

    /**
     * Checks if `value` is a boolean value.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
     * @example
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        value && typeof value == 'object' && toString.call(value) == boolClass || false;
    }

    /**
     * Checks if `value` is a date.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     */
    function isDate(value) {
      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     */
    function isElement(value) {
      return value && value.nodeType === 1 || false;
    }

    /**
     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
     * length of `0` and objects with no own enumerable properties are considered
     * "empty".
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({});
     * // => true
     *
     * _.isEmpty('');
     * // => true
     */
    function isEmpty(value) {
      var result = true;
      if (!value) {
        return result;
      }
      var className = toString.call(value),
          length = value.length;

      if ((className == arrayClass || className == stringClass || className == argsClass ) ||
          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
        return !length;
      }
      forOwn(value, function() {
        return (result = false);
      });
      return result;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent to each other. If a callback is provided it will be executed
     * to compare values. If the callback returns `undefined` comparisons will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (a, b).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var copy = { 'name': 'fred' };
     *
     * object == copy;
     * // => false
     *
     * _.isEqual(object, copy);
     * // => true
     *
     * var words = ['hello', 'goodbye'];
     * var otherWords = ['hi', 'goodbye'];
     *
     * _.isEqual(words, otherWords, function(a, b) {
     *   var reGreet = /^(?:hello|hi)$/i,
     *       aGreet = _.isString(a) && reGreet.test(a),
     *       bGreet = _.isString(b) && reGreet.test(b);
     *
     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
     * });
     * // => true
     */
    function isEqual(a, b, callback, thisArg) {
      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
    }

    /**
     * Checks if `value` is, or can be coerced to, a finite number.
     *
     * Note: This is not the same as native `isFinite` which will return true for
     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
     * @example
     *
     * _.isFinite(-101);
     * // => true
     *
     * _.isFinite('10');
     * // => true
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite('');
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
    }

    /**
     * Checks if `value` is a function.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     */
    function isFunction(value) {
      return typeof value == 'function';
    }

    /**
     * Checks if `value` is the language type of Object.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // check if the value is the ECMAScript language type of Object
      // http://es5.github.io/#x8
      // and avoid a V8 bug
      // http://code.google.com/p/v8/issues/detail?id=2291
      return !!(value && objectTypes[typeof value]);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * Note: This is not the same as native `isNaN` which will return `true` for
     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // `NaN` as a primitive is the only value that is not equal to itself
      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(undefined);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is a number.
     *
     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(8.4 * 5);
     * // => true
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        value && typeof value == 'object' && toString.call(value) == numberClass || false;
    }

    /**
     * Checks if `value` is an object created by the `Object` constructor.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * _.isPlainObject(new Shape);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     */
    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
      if (!(value && toString.call(value) == objectClass)) {
        return false;
      }
      var valueOf = value.valueOf,
          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

      return objProto
        ? (value == objProto || getPrototypeOf(value) == objProto)
        : shimIsPlainObject(value);
    };

    /**
     * Checks if `value` is a regular expression.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
     * @example
     *
     * _.isRegExp(/fred/);
     * // => true
     */
    function isRegExp(value) {
      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
    }

    /**
     * Checks if `value` is a string.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
     * @example
     *
     * _.isString('fred');
     * // => true
     */
    function isString(value) {
      return typeof value == 'string' ||
        value && typeof value == 'object' && toString.call(value) == stringClass || false;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     */
    function isUndefined(value) {
      return typeof value == 'undefined';
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     *
     * var characters = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // using "_.pluck" callback shorthand
     * _.mapValues(characters, 'age');
     * // => { 'fred': 40, 'pebbles': 1 }
     */
    function mapValues(object, callback, thisArg) {
      var result = {};
      callback = lodash.createCallback(callback, thisArg, 3);

      forOwn(object, function(value, key, object) {
        result[key] = callback(value, key, object);
      });
      return result;
    }

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * will overwrite property assignments of previous sources. If a callback is
     * provided it will be executed to produce the merged values of the destination
     * and source properties. If the callback returns `undefined` merging will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var names = {
     *   'characters': [
     *     { 'name': 'barney' },
     *     { 'name': 'fred' }
     *   ]
     * };
     *
     * var ages = {
     *   'characters': [
     *     { 'age': 36 },
     *     { 'age': 40 }
     *   ]
     * };
     *
     * _.merge(names, ages);
     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
     *
     * var food = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var otherFood = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(food, otherFood, function(a, b) {
     *   return _.isArray(a) ? a.concat(b) : undefined;
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
     */
    function merge(object) {
      var args = arguments,
          length = 2;

      if (!isObject(object)) {
        return object;
      }
      // allows working with `_.reduce` and `_.reduceRight` without using
      // their `index` and `collection` arguments
      if (typeof args[2] != 'number') {
        length = args.length;
      }
      if (length > 3 && typeof args[length - 2] == 'function') {
        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
      } else if (length > 2 && typeof args[length - 1] == 'function') {
        callback = args[--length];
      }
      var sources = slice(arguments, 1, length),
          index = -1,
          stackA = getArray(),
          stackB = getArray();

      while (++index < length) {
        baseMerge(object, sources[index], callback, stackA, stackB);
      }
      releaseArray(stackA);
      releaseArray(stackB);
      return object;
    }

    /**
     * Creates a shallow clone of `object` excluding the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` omitting the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The properties to omit or the
     *  function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object without the omitted properties.
     * @example
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
     * // => { 'name': 'fred' }
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
     *   return typeof value == 'number';
     * });
     * // => { 'name': 'fred' }
     */
    function omit(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var props = [];
        forIn(object, function(value, key) {
          props.push(key);
        });
        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          result[key] = object[key];
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (!callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * Creates a two dimensional array of an object's key-value pairs,
     * i.e. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
     */
    function pairs(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates a shallow clone of `object` composed of the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` picking the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The function called per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object composed of the picked properties.
     * @example
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
     * // => { 'name': 'fred' }
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
     *   return key.charAt(0) != '_';
     * });
     * // => { 'name': 'fred' }
     */
    function pick(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var index = -1,
            props = baseFlatten(arguments, true, false, 1),
            length = isObject(object) ? props.length : 0;

        while (++index < length) {
          var key = props[index];
          if (key in object) {
            result[key] = object[key];
          }
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * An alternative to `_.reduce` this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable properties through a callback, with each callback execution
     * potentially mutating the `accumulator` object. The callback is bound to
     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
     * Callbacks may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
     *   num *= num;
     *   if (num % 2) {
     *     return result.push(num) < 3;
     *   }
     * });
     * // => [1, 9, 25]
     *
     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     * });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function transform(object, callback, accumulator, thisArg) {
      var isArr = isArray(object);
      if (accumulator == null) {
        if (isArr) {
          accumulator = [];
        } else {
          var ctor = object && object.constructor,
              proto = ctor && ctor.prototype;

          accumulator = baseCreate(proto);
        }
      }
      if (callback) {
        callback = lodash.createCallback(callback, thisArg, 4);
        (isArr ? forEach : forOwn)(object, function(value, index, object) {
          return callback(accumulator, value, index, object);
        });
      }
      return accumulator;
    }

    /**
     * Creates an array composed of the own enumerable property values of `object`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property values.
     * @example
     *
     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
     * // => [1, 2, 3] (property order is not guaranteed across environments)
     */
    function values(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array of elements from the specified indexes, or keys, of the
     * `collection`. Indexes may be specified as individual arguments or as arrays
     * of indexes.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
     *   to retrieve, specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns a new array of elements corresponding to the
     *  provided indexes.
     * @example
     *
     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
     * // => ['a', 'c', 'e']
     *
     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
     * // => ['fred', 'pebbles']
     */
    function at(collection) {
      var args = arguments,
          index = -1,
          props = baseFlatten(args, true, false, 1),
          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
          result = Array(length);

      while(++index < length) {
        result[index] = collection[props[index]];
      }
      return result;
    }

    /**
     * Checks if a given value is present in a collection using strict equality
     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
     * offset from the end of the collection.
     *
     * @static
     * @memberOf _
     * @alias include
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {*} target The value to check for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
     * @example
     *
     * _.contains([1, 2, 3], 1);
     * // => true
     *
     * _.contains([1, 2, 3], 1, 2);
     * // => false
     *
     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.contains('pebbles', 'eb');
     * // => true
     */
    function contains(collection, target, fromIndex) {
      var index = -1,
          indexOf = getIndexOf(),
          length = collection ? collection.length : 0,
          result = false;

      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
      if (isArray(collection)) {
        result = indexOf(collection, target, fromIndex) > -1;
      } else if (typeof length == 'number') {
        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
      } else {
        forOwn(collection, function(value) {
          if (++index >= fromIndex) {
            return !(result = value === target);
          }
        });
      }
      return result;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through the callback. The corresponding value
     * of each key is the number of times the key was returned by the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });

    /**
     * Checks if the given callback returns truey value for **all** elements of
     * a collection. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if all elements passed the callback check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes']);
     * // => false
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.every(characters, 'age');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.every(characters, { 'age': 36 });
     * // => false
     */
    function every(collection, callback, thisArg) {
      var result = true;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (!(result = !!callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return (result = !!callback(value, index, collection));
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning an array of all elements
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that passed the callback check.
     * @example
     *
     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [2, 4, 6]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.filter(characters, 'blocked');
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     *
     * // using "_.where" callback shorthand
     * _.filter(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     */
    function filter(collection, callback, thisArg) {
      var result = [];
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            result.push(value);
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result.push(value);
          }
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning the first element that
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect, findWhere
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.find(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
     *
     * // using "_.where" callback shorthand
     * _.find(characters, { 'age': 1 });
     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
     *
     * // using "_.pluck" callback shorthand
     * _.find(characters, 'blocked');
     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
     */
    function find(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            return value;
          }
        }
      } else {
        var result;
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result = value;
            return false;
          }
        });
        return result;
      }
    }

    /**
     * This method is like `_.find` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(num) {
     *   return num % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forEachRight(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result = value;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over elements of a collection, executing the callback for each
     * element. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * Note: As with other "Collections" methods, objects with a `length` property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
     * // => logs each number and returns '1,2,3'
     *
     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
     * // => logs each number and returns the object (property order is not guaranteed across environments)
     */
    function forEach(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
     * // => logs each number from right to left and returns '3,2,1'
     */
    function forEachRight(collection, callback, thisArg) {
      var length = collection ? collection.length : 0;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (length--) {
          if (callback(collection[length], length, collection) === false) {
            break;
          }
        }
      } else {
        var props = keys(collection);
        length = props.length;
        forOwn(collection, function(value, key, collection) {
          key = props ? props[--length] : --length;
          return callback(collection[key], key, collection);
        });
      }
      return collection;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of a collection through the callback. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using "_.pluck" callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of the collection through the given callback. The corresponding
     * value of each key is the last element responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keys = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keys, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method named by `methodName` on each element in the `collection`
     * returning an array of the results of each invoked method. Additional arguments
     * will be provided to each invoked method. If `methodName` is a function it
     * will be invoked for, and `this` bound to, each element in the `collection`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|string} methodName The name of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [arg] Arguments to invoke the method with.
     * @returns {Array} Returns a new array of the results of each invoked method.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    function invoke(collection, methodName) {
      var args = slice(arguments, 2),
          index = -1,
          isFunc = typeof methodName == 'function',
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in the collection
     * through the callback. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of the results of each `callback` execution.
     * @example
     *
     * _.map([1, 2, 3], function(num) { return num * 3; });
     * // => [3, 6, 9]
     *
     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
     * // => [3, 6, 9] (property order is not guaranteed across environments)
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(characters, 'name');
     * // => ['barney', 'fred']
     */
    function map(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        var result = Array(length);
        while (++index < length) {
          result[index] = callback(collection[index], index, collection);
        }
      } else {
        result = [];
        forOwn(collection, function(value, key, collection) {
          result[++index] = callback(value, key, collection);
        });
      }
      return result;
    }

    /**
     * Retrieves the maximum value of a collection. If the collection is empty or
     * falsey `-Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.max(characters, function(chr) { return chr.age; });
     * // => { 'name': 'fred', 'age': 40 };
     *
     * // using "_.pluck" callback shorthand
     * _.max(characters, 'age');
     * // => { 'name': 'fred', 'age': 40 };
     */
    function max(collection, callback, thisArg) {
      var computed = -Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value > result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current > computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the minimum value of a collection. If the collection is empty or
     * falsey `Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.min(characters, function(chr) { return chr.age; });
     * // => { 'name': 'barney', 'age': 36 };
     *
     * // using "_.pluck" callback shorthand
     * _.min(characters, 'age');
     * // => { 'name': 'barney', 'age': 36 };
     */
    function min(collection, callback, thisArg) {
      var computed = Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value < result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current < computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the value of a specified property from all elements in the collection.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {string} property The name of the property to pluck.
     * @returns {Array} Returns a new array of property values.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(characters, 'name');
     * // => ['barney', 'fred']
     */
    var pluck = map;

    /**
     * Reduces a collection to a value which is the accumulated result of running
     * each element in the collection through the callback, where each successive
     * callback execution consumes the return value of the previous execution. If
     * `accumulator` is not provided the first element of the collection will be
     * used as the initial `accumulator` value. The callback is bound to `thisArg`
     * and invoked with four arguments; (accumulator, value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var sum = _.reduce([1, 2, 3], function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function reduce(collection, callback, accumulator, thisArg) {
      if (!collection) return accumulator;
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);

      var index = -1,
          length = collection.length;

      if (typeof length == 'number') {
        if (noaccum) {
          accumulator = collection[++index];
        }
        while (++index < length) {
          accumulator = callback(accumulator, collection[index], index, collection);
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          accumulator = noaccum
            ? (noaccum = false, value)
            : callback(accumulator, value, index, collection)
        });
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var list = [[0, 1], [2, 3], [4, 5]];
     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, callback, accumulator, thisArg) {
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);
      forEachRight(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The opposite of `_.filter` this method returns the elements of a
     * collection that the callback does **not** return truey for.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that failed the callback check.
     * @example
     *
     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [1, 3, 5]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.reject(characters, 'blocked');
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     *
     * // using "_.where" callback shorthand
     * _.reject(characters, { 'age': 36 });
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     */
    function reject(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);
      return filter(collection, function(value, index, collection) {
        return !callback(value, index, collection);
      });
    }

    /**
     * Retrieves a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Allows working with functions like `_.map`
     *  without using their `index` arguments as `n`.
     * @returns {Array} Returns the random sample(s) of `collection`.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (collection && typeof collection.length != 'number') {
        collection = values(collection);
      }
      if (n == null || guard) {
        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
      }
      var result = shuffle(collection);
      result.length = nativeMin(nativeMax(0, n), result.length);
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the Fisher-Yates
     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns a new shuffled collection.
     * @example
     *
     * _.shuffle([1, 2, 3, 4, 5, 6]);
     * // => [4, 1, 6, 3, 5, 2]
     */
    function shuffle(collection) {
      var index = -1,
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        var rand = baseRandom(0, ++index);
        result[index] = result[rand];
        result[rand] = value;
      });
      return result;
    }

    /**
     * Gets the size of the `collection` by returning `collection.length` for arrays
     * and array-like objects or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns `collection.length` or number of own enumerable properties.
     * @example
     *
     * _.size([1, 2]);
     * // => 2
     *
     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
     * // => 3
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    /**
     * Checks if the callback returns a truey value for **any** element of a
     * collection. The function returns as soon as it finds a passing value and
     * does not iterate over the entire collection. The callback is bound to
     * `thisArg` and invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if any element passed the callback check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.some(characters, 'blocked');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.some(characters, { 'age': 1 });
     * // => false
     */
    function some(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if ((result = callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return !(result = callback(value, index, collection));
        });
      }
      return !!result;
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through the callback. This method
     * performs a stable sort, that is, it will preserve the original sort order
     * of equal elements. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an array of property names is provided for `callback` the collection
     * will be sorted by each property value.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of sorted elements.
     * @example
     *
     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
     * // => [3, 1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'barney',  'age': 26 },
     *   { 'name': 'fred',    'age': 30 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(_.sortBy(characters, 'age'), _.values);
     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
     *
     * // sorting by multiple properties
     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
     */
    function sortBy(collection, callback, thisArg) {
      var index = -1,
          isArr = isArray(callback),
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      if (!isArr) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      forEach(collection, function(value, key, collection) {
        var object = result[++index] = getObject();
        if (isArr) {
          object.criteria = map(callback, function(key) { return value[key]; });
        } else {
          (object.criteria = getArray())[0] = callback(value, key, collection);
        }
        object.index = index;
        object.value = value;
      });

      length = result.length;
      result.sort(compareAscending);
      while (length--) {
        var object = result[length];
        result[length] = object.value;
        if (!isArr) {
          releaseArray(object.criteria);
        }
        releaseObject(object);
      }
      return result;
    }

    /**
     * Converts the `collection` to an array.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to convert.
     * @returns {Array} Returns the new converted array.
     * @example
     *
     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
     * // => [2, 3, 4]
     */
    function toArray(collection) {
      if (collection && typeof collection.length == 'number') {
        return slice(collection);
      }
      return values(collection);
    }

    /**
     * Performs a deep comparison of each element in a `collection` to the given
     * `properties` object, returning an array of all elements that have equivalent
     * property values.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Object} props The object of property values to filter by.
     * @returns {Array} Returns a new array of elements that have the given properties.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.where(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
     *
     * _.where(characters, { 'pets': ['dino'] });
     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
     */
    var where = filter;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are all falsey.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to compact.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array excluding all values of the provided arrays using strict
     * equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
     * // => [1, 3, 4]
     */
    function difference(array) {
      return baseDifference(array, baseFlatten(arguments, true, true, 1));
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.findIndex(characters, function(chr) {
     *   return chr.age < 20;
     * });
     * // => 2
     *
     * // using "_.where" callback shorthand
     * _.findIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findIndex(characters, 'blocked');
     * // => 1
     */
    function findIndex(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        if (callback(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': true },
     *   { 'name': 'fred',    'age': 40, 'blocked': false },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
     * ];
     *
     * _.findLastIndex(characters, function(chr) {
     *   return chr.age > 30;
     * });
     * // => 1
     *
     * // using "_.where" callback shorthand
     * _.findLastIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findLastIndex(characters, 'blocked');
     * // => 2
     */
    function findLastIndex(array, callback, thisArg) {
      var length = array ? array.length : 0;
      callback = lodash.createCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(array[length], length, array)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Gets the first element or first `n` elements of an array. If a callback
     * is provided elements at the beginning of the array are returned as long
     * as the callback returns truey. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias head, take
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the first element(s) of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.first([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.first(characters, 'blocked');
     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
     * // => ['barney', 'fred']
     */
    function first(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = -1;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[0] : undefined;
        }
      }
      return slice(array, 0, nativeMin(nativeMax(0, n), length));
    }

    /**
     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
     * is truey, the array will only be flattened a single level. If a callback
     * is provided each element of the array is passed through the callback before
     * flattening. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new flattened array.
     * @example
     *
     * _.flatten([1, [2], [3, [[4]]]]);
     * // => [1, 2, 3, 4];
     *
     * _.flatten([1, [2], [3, [[4]]]], true);
     * // => [1, 2, 3, [[4]]];
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.flatten(characters, 'pets');
     * // => ['hoppy', 'baby puss', 'dino']
     */
    function flatten(array, isShallow, callback, thisArg) {
      // juggle arguments
      if (typeof isShallow != 'boolean' && isShallow != null) {
        thisArg = callback;
        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
        isShallow = false;
      }
      if (callback != null) {
        array = map(array, callback, thisArg);
      }
      return baseFlatten(array, isShallow);
    }

    /**
     * Gets the index at which the first occurrence of `value` is found using
     * strict equality for comparisons, i.e. `===`. If the array is already sorted
     * providing `true` for `fromIndex` will run a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 1
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 4
     *
     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      if (typeof fromIndex == 'number') {
        var length = array ? array.length : 0;
        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
      } else if (fromIndex) {
        var index = sortedIndex(array, value);
        return array[index] === value ? index : -1;
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element or last `n` elements of an array. If a
     * callback is provided elements at the end of the array are excluded from
     * the result as long as the callback returns truey. The callback is bound
     * to `thisArg` and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     *
     * _.initial([1, 2, 3], 2);
     * // => [1]
     *
     * _.initial([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [1]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.initial(characters, 'blocked');
     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
     * // => ['barney', 'fred']
     */
    function initial(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : callback || n;
      }
      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
    }

    /**
     * Creates an array of unique values present in all provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of shared values.
     * @example
     *
     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2]
     */
    function intersection() {
      var args = [],
          argsIndex = -1,
          argsLength = arguments.length,
          caches = getArray(),
          indexOf = getIndexOf(),
          trustIndexOf = indexOf === baseIndexOf,
          seen = getArray();

      while (++argsIndex < argsLength) {
        var value = arguments[argsIndex];
        if (isArray(value) || isArguments(value)) {
          args.push(value);
          caches.push(trustIndexOf && value.length >= largeArraySize &&
            createCache(argsIndex ? args[argsIndex] : seen));
        }
      }
      var array = args[0],
          index = -1,
          length = array ? array.length : 0,
          result = [];

      outer:
      while (++index < length) {
        var cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    /**
     * Gets the last element or last `n` elements of an array. If a callback is
     * provided elements at the end of the array are returned as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the last element(s) of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     *
     * _.last([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.last([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [2, 3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.last(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.last(characters, { 'employer': 'na' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function last(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[length - 1] : undefined;
        }
      }
      return slice(array, nativeMax(0, length - n));
    }

    /**
     * Gets the index at which the last occurrence of `value` is found using strict
     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
     * as the offset from the end of the collection.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 4
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var index = array ? array.length : 0;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from the given array using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {...*} [value] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull(array) {
      var args = arguments,
          argsIndex = 0,
          argsLength = args.length,
          length = array ? array.length : 0;

      while (++argsIndex < argsLength) {
        var index = -1,
            value = args[argsIndex];
        while (++index < length) {
          if (array[index] === value) {
            splice.call(array, index--, 1);
            length--;
          }
        }
      }
      return array;
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to but not including `end`. If `start` is less than `stop` a
     * zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns a new range array.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      start = +start || 0;
      step = typeof step == 'number' ? step : (+step || 1);

      if (end == null) {
        end = start;
        start = 0;
      }
      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
      var index = -1,
          length = nativeMax(0, ceil((end - start) / (step || 1))),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Removes all elements from an array that the callback returns truey for
     * and returns an array of removed elements. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4, 5, 6];
     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
     *
     * console.log(array);
     * // => [1, 3, 5]
     *
     * console.log(evens);
     * // => [2, 4, 6]
     */
    function remove(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (callback(value, index, array)) {
          result.push(value);
          splice.call(array, index--, 1);
          length--;
        }
      }
      return result;
    }

    /**
     * The opposite of `_.initial` this method gets all but the first element or
     * first `n` elements of an array. If a callback function is provided elements
     * at the beginning of the array are excluded from the result as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias drop, tail
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     *
     * _.rest([1, 2, 3], 2);
     * // => [3]
     *
     * _.rest([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.rest(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.rest(characters, { 'employer': 'slate' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function rest(array, callback, thisArg) {
      if (typeof callback != 'number' && callback != null) {
        var n = 0,
            index = -1,
            length = array ? array.length : 0;

        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
      }
      return slice(array, n);
    }

    /**
     * Uses a binary search to determine the smallest index at which a value
     * should be inserted into a given sorted array in order to maintain the sort
     * order of the array. If a callback is provided it will be executed for
     * `value` and each element of `array` to compute their sort ranking. The
     * callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([20, 30, 50], 40);
     * // => 2
     *
     * // using "_.pluck" callback shorthand
     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 2
     *
     * var dict = {
     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
     * };
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return dict.wordToNumber[word];
     * });
     * // => 2
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return this.wordToNumber[word];
     * }, dict);
     * // => 2
     */
    function sortedIndex(array, value, callback, thisArg) {
      var low = 0,
          high = array ? array.length : low;

      // explicitly reference `identity` for better inlining in Firefox
      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
      value = callback(value);

      while (low < high) {
        var mid = (low + high) >>> 1;
        (callback(array[mid]) < value)
          ? low = mid + 1
          : high = mid;
      }
      return low;
    }

    /**
     * Creates an array of unique values, in order, of the provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of combined values.
     * @example
     *
     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2, 3, 5, 4]
     */
    function union() {
      return baseUniq(baseFlatten(arguments, true, true));
    }

    /**
     * Creates a duplicate-value-free version of an array using strict equality
     * for comparisons, i.e. `===`. If the array is sorted, providing
     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
     * each element of `array` is passed through the callback before uniqueness
     * is computed. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a duplicate-value-free array.
     * @example
     *
     * _.uniq([1, 2, 1, 3, 1]);
     * // => [1, 2, 3]
     *
     * _.uniq([1, 1, 2, 2, 3], true);
     * // => [1, 2, 3]
     *
     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
     * // => ['A', 'b', 'C']
     *
     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
     * // => [1, 2.5, 3]
     *
     * // using "_.pluck" callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, callback, thisArg) {
      // juggle arguments
      if (typeof isSorted != 'boolean' && isSorted != null) {
        thisArg = callback;
        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
        isSorted = false;
      }
      if (callback != null) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      return baseUniq(array, isSorted, callback);
    }

    /**
     * Creates an array excluding all provided values using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to filter.
     * @param {...*} [value] The values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
     * // => [2, 3, 4]
     */
    function without(array) {
      return baseDifference(array, slice(arguments, 1));
    }

    /**
     * Creates an array that is the symmetric difference of the provided arrays.
     * See http://en.wikipedia.org/wiki/Symmetric_difference.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of values.
     * @example
     *
     * _.xor([1, 2, 3], [5, 2, 1, 4]);
     * // => [3, 5, 4]
     *
     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
     * // => [1, 4, 5]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArray(array) || isArguments(array)) {
          var result = result
            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
            : array;
        }
      }
      return result || [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second
     * elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @alias unzip
     * @category Arrays
     * @param {...Array} [array] Arrays to process.
     * @returns {Array} Returns a new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    function zip() {
      var array = arguments.length > 1 ? arguments : arguments[0],
          index = -1,
          length = array ? max(pluck(array, 'length')) : 0,
          result = Array(length < 0 ? 0 : length);

      while (++index < length) {
        result[index] = pluck(array, index);
      }
      return result;
    }

    /**
     * Creates an object composed from arrays of `keys` and `values`. Provide
     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
     * or two arrays, one of `keys` and one of corresponding `values`.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Arrays
     * @param {Array} keys The array of keys.
     * @param {Array} [values=[]] The array of values.
     * @returns {Object} Returns an object composed of the given keys and
     *  corresponding values.
     * @example
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(keys, values) {
      var index = -1,
          length = keys ? keys.length : 0,
          result = {};

      if (!values && length && !isArray(keys[0])) {
        values = [];
      }
      while (++index < length) {
        var key = keys[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that executes `func`, with  the `this` binding and
     * arguments of the created function, only after being called `n` times.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {number} n The number of times the function must be called before
     *  `func` is executed.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('Done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'Done saving!', after all saves have completed
     */
    function after(n, func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with the `this`
     * binding of `thisArg` and prepends any additional `bind` arguments to those
     * provided to the bound function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var func = function(greeting) {
     *   return greeting + ' ' + this.name;
     * };
     *
     * func = _.bind(func, { 'name': 'fred' }, 'hi');
     * func();
     * // => 'hi fred'
     */
    function bind(func, thisArg) {
      return arguments.length > 2
        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
        : createWrapper(func, 1, null, null, thisArg);
    }

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all the function properties
     * of `object` will be bound.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...string} [methodName] The object method names to
     *  bind, specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() { console.log('clicked ' + this.label); }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs', when the button is clicked
     */
    function bindAll(object) {
      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
          index = -1,
          length = funcs.length;

      while (++index < length) {
        var key = funcs[index];
        object[key] = createWrapper(object[key], 1, null, null, object);
      }
      return object;
    }

    /**
     * Creates a function that, when called, invokes the method at `object[key]`
     * and prepends any additional `bindKey` arguments to those provided to the bound
     * function. This method differs from `_.bind` by allowing bound functions to
     * reference methods that will be redefined or don't yet exist.
     * See http://michaux.ca/articles/lazy-function-definition-pattern.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'name': 'fred',
     *   'greet': function(greeting) {
     *     return greeting + ' ' + this.name;
     *   }
     * };
     *
     * var func = _.bindKey(object, 'greet', 'hi');
     * func();
     * // => 'hi fred'
     *
     * object.greet = function(greeting) {
     *   return greeting + 'ya ' + this.name + '!';
     * };
     *
     * func();
     * // => 'hiya fred!'
     */
    function bindKey(object, key) {
      return arguments.length > 2
        ? createWrapper(key, 19, slice(arguments, 2), null, object)
        : createWrapper(key, 3, null, null, object);
    }

    /**
     * Creates a function that is the composition of the provided functions,
     * where each function consumes the return value of the function that follows.
     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
     * Each function is executed with the `this` binding of the composed function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {...Function} [func] Functions to compose.
     * @returns {Function} Returns the new composed function.
     * @example
     *
     * var realNameMap = {
     *   'pebbles': 'penelope'
     * };
     *
     * var format = function(name) {
     *   name = realNameMap[name.toLowerCase()] || name;
     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
     * };
     *
     * var greet = function(formatted) {
     *   return 'Hiya ' + formatted + '!';
     * };
     *
     * var welcome = _.compose(greet, format);
     * welcome('pebbles');
     * // => 'Hiya Penelope!'
     */
    function compose() {
      var funcs = arguments,
          length = funcs.length;

      while (length--) {
        if (!isFunction(funcs[length])) {
          throw new TypeError;
        }
      }
      return function() {
        var args = arguments,
            length = funcs.length;

        while (length--) {
          args = [funcs[length].apply(this, args)];
        }
        return args[0];
      };
    }

    /**
     * Creates a function which accepts one or more arguments of `func` that when
     * invoked either executes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` can be specified
     * if `func.length` is not sufficient.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var curried = _.curry(function(a, b, c) {
     *   console.log(a + b + c);
     * });
     *
     * curried(1)(2)(3);
     * // => 6
     *
     * curried(1, 2)(3);
     * // => 6
     *
     * curried(1, 2, 3);
     * // => 6
     */
    function curry(func, arity) {
      arity = typeof arity == 'number' ? arity : (+arity || func.length);
      return createWrapper(func, 4, null, null, null, arity);
    }

    /**
     * Creates a function that will delay the execution of `func` until after
     * `wait` milliseconds have elapsed since the last time it was invoked.
     * Provide an options object to indicate that `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
     * to the debounced function will return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to debounce.
     * @param {number} wait The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * var lazyLayout = _.debounce(calculateLayout, 150);
     * jQuery(window).on('resize', lazyLayout);
     *
     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * });
     *
     * // ensure `batchLog` is executed once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * source.addEventListener('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }, false);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      wait = nativeMax(0, wait) || 0;
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = options.leading;
        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      var delayed = function() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0) {
          if (maxTimeoutId) {
            clearTimeout(maxTimeoutId);
          }
          var isCalled = trailingCall;
          maxTimeoutId = timeoutId = trailingCall = undefined;
          if (isCalled) {
            lastCalled = now();
            result = func.apply(thisArg, args);
            if (!timeoutId && !maxTimeoutId) {
              args = thisArg = null;
            }
          }
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      };

      var maxDelayed = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (trailing || (maxWait !== wait)) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = null;
          }
        }
      };

      return function() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
        return result;
      };
    }

    /**
     * Defers executing the `func` function until the current call stack has cleared.
     * Additional arguments will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to defer.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) { console.log(text); }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    function defer(func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 1);
      return setTimeout(function() { func.apply(undefined, args); }, 1);
    }

    /**
     * Executes the `func` function after `wait` milliseconds. Additional arguments
     * will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay execution.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) { console.log(text); }, 1000, 'later');
     * // => logs 'later' after one second
     */
    function delay(func, wait) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 2);
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it will be used to determine the cache key for storing the result
     * based on the arguments provided to the memoized function. By default, the
     * first argument provided to the memoized function is used as the cache key.
     * The `func` is executed with the `this` binding of the memoized function.
     * The result cache is exposed as the `cache` property on the memoized function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] A function used to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var fibonacci = _.memoize(function(n) {
     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
     * });
     *
     * fibonacci(9)
     * // => 34
     *
     * var data = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // modifying the result cache
     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
     * get('pebbles');
     * // => { 'name': 'pebbles', 'age': 1 }
     *
     * get.cache.pebbles.name = 'penelope';
     * get('pebbles');
     * // => { 'name': 'penelope', 'age': 1 }
     */
    function memoize(func, resolver) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var memoized = function() {
        var cache = memoized.cache,
            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

        return hasOwnProperty.call(cache, key)
          ? cache[key]
          : (cache[key] = func.apply(this, arguments));
      }
      memoized.cache = {};
      return memoized;
    }

    /**
     * Creates a function that is restricted to execute `func` once. Repeat calls to
     * the function will return the value of the first call. The `func` is executed
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` executes `createApplication` once
     */
    function once(func) {
      var ran,
          result;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (ran) {
          return result;
        }
        ran = true;
        result = func.apply(this, arguments);

        // clear the `func` variable so the function may be garbage collected
        func = null;
        return result;
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with any additional
     * `partial` arguments prepended to those provided to the new function. This
     * method is similar to `_.bind` except it does **not** alter the `this` binding.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) { return greeting + ' ' + name; };
     * var hi = _.partial(greet, 'hi');
     * hi('fred');
     * // => 'hi fred'
     */
    function partial(func) {
      return createWrapper(func, 16, slice(arguments, 1));
    }

    /**
     * This method is like `_.partial` except that `partial` arguments are
     * appended to those provided to the new function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
     *
     * var options = {
     *   'variable': 'data',
     *   'imports': { 'jq': $ }
     * };
     *
     * defaultsDeep(options, _.templateSettings);
     *
     * options.variable
     * // => 'data'
     *
     * options.imports
     * // => { '_': _, 'jq': $ }
     */
    function partialRight(func) {
      return createWrapper(func, 32, null, slice(arguments, 1));
    }

    /**
     * Creates a function that, when executed, will only call the `func` function
     * at most once per every `wait` milliseconds. Provide an options object to
     * indicate that `func` should be invoked on the leading and/or trailing edge
     * of the `wait` timeout. Subsequent calls to the throttled function will
     * return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to throttle.
     * @param {number} wait The number of milliseconds to throttle executions to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * var throttled = _.throttle(updatePosition, 100);
     * jQuery(window).on('scroll', throttled);
     *
     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? options.leading : leading;
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      debounceOptions.leading = leading;
      debounceOptions.maxWait = wait;
      debounceOptions.trailing = trailing;

      return debounce(func, wait, debounceOptions);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Additional arguments provided to the function are appended
     * to those provided to the wrapper function. The wrapper is executed with
     * the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('Fred, Wilma, & Pebbles');
     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
     */
    function wrap(value, wrapper) {
      return createWrapper(wrapper, 16, [value]);
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var getter = _.constant(object);
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Produces a callback bound to an optional `thisArg`. If `func` is a property
     * name the created callback will return the property value for a given element.
     * If `func` is an object the created callback will return `true` for elements
     * that contain the equivalent object properties, otherwise it will return `false`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
     *   return !match ? func(callback, thisArg) : function(object) {
     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(characters, 'age__gt38');
     * // => [{ 'name': 'fred', 'age': 40 }]
     */
    function createCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (func == null || type == 'function') {
        return baseCreateCallback(func, thisArg, argCount);
      }
      // handle "_.pluck" style callback shorthands
      if (type != 'object') {
        return property(func);
      }
      var props = keys(func),
          key = props[0],
          a = func[key];

      // handle "_.where" style callback shorthands
      if (props.length == 1 && a === a && !isObject(a)) {
        // fast path the common case of providing an object with a single
        // property containing a primitive value
        return function(object) {
          var b = object[key];
          return a === b && (a !== 0 || (1 / a == 1 / b));
        };
      }
      return function(object) {
        var length = props.length,
            result = false;

        while (length--) {
          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
            break;
          }
        }
        return result;
      };
    }

    /**
     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
     * corresponding HTML entities.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('Fred, Wilma, & Pebbles');
     * // => 'Fred, Wilma, &amp; Pebbles'
     */
    function escape(string) {
      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Adds function properties of a source object to the destination object.
     * If `object` is a function methods will be added to its prototype as well.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Function|Object} [object=lodash] object The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
     * @example
     *
     * function capitalize(string) {
     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
     * }
     *
     * _.mixin({ 'capitalize': capitalize });
     * _.capitalize('fred');
     * // => 'Fred'
     *
     * _('fred').capitalize().value();
     * // => 'Fred'
     *
     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
     * _('fred').capitalize();
     * // => 'Fred'
     */
    function mixin(object, source, options) {
      var chain = true,
          methodNames = source && functions(source);

      if (!source || (!options && !methodNames.length)) {
        if (options == null) {
          options = source;
        }
        ctor = lodashWrapper;
        source = object;
        object = lodash;
        methodNames = functions(source);
      }
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      var ctor = object,
          isFunc = isFunction(ctor);

      forEach(methodNames, function(methodName) {
        var func = object[methodName] = source[methodName];
        if (isFunc) {
          ctor.prototype[methodName] = function() {
            var chainAll = this.__chain__,
                value = this.__wrapped__,
                args = [value];

            push.apply(args, arguments);
            var result = func.apply(object, args);
            if (chain || chainAll) {
              if (value === result && isObject(result)) {
                return this;
              }
              result = new ctor(result);
              result.__chain__ = chainAll;
            }
            return result;
          };
        }
      });
    }

    /**
     * Reverts the '_' variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      context._ = oldDash;
      return this;
    }

    /**
     * A no-operation function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // no operation performed
    }

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var stamp = _.now();
     * _.defer(function() { console.log(_.now() - stamp); });
     * // => logs the number of milliseconds it took for the deferred function to be called
     */
    var now = isNative(now = Date.now) && now || function() {
      return new Date().getTime();
    };

    /**
     * Converts the given value into an integer of the specified radix.
     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
     *
     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
     * implementations. See http://es5.github.io/#E.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} value The value to parse.
     * @param {number} [radix] The radix used to interpret the value to parse.
     * @returns {number} Returns the new integer value.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     */
    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
    };

    /**
     * Creates a "_.pluck" style function, which returns the `key` value of a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} key The name of the property to retrieve.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var characters = [
     *   { 'name': 'fred',   'age': 40 },
     *   { 'name': 'barney', 'age': 36 }
     * ];
     *
     * var getName = _.property('name');
     *
     * _.map(characters, getName);
     * // => ['barney', 'fred']
     *
     * _.sortBy(characters, getName);
     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
     */
    function property(key) {
      return function(object) {
        return object[key];
      };
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number will be
     * returned. If `floating` is truey or either `min` or `max` are floats a
     * floating-point number will be returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating=false] Specify returning a floating-point number.
     * @returns {number} Returns a random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (typeof min == 'boolean' && noMax) {
          floating = min;
          min = 1;
        }
        else if (!noMax && typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /**
     * Resolves the value of property `key` on `object`. If `key` is a function
     * it will be invoked with the `this` binding of `object` and its result returned,
     * else the property value is returned. If `object` is falsey then `undefined`
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to resolve.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = {
     *   'cheese': 'crumpets',
     *   'stuff': function() {
     *     return 'nonsense';
     *   }
     * };
     *
     * _.result(object, 'cheese');
     * // => 'crumpets'
     *
     * _.result(object, 'stuff');
     * // => 'nonsense'
     */
    function result(object, key) {
      if (object) {
        var value = object[key];
        return isFunction(value) ? object[key]() : value;
      }
    }

    /**
     * A micro-templating method that handles arbitrary delimiters, preserves
     * whitespace, and correctly escapes quotes within interpolated code.
     *
     * Note: In the development build, `_.template` utilizes sourceURLs for easier
     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
     *
     * For more information on precompiling templates see:
     * https://lodash.com/custom-builds
     *
     * For more information on Chrome extension sandboxes see:
     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} text The template text.
     * @param {Object} data The data object used to populate the text.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as local variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [variable] The data object variable name.
     * @returns {Function|string} Returns a compiled function when no `data` object
     *  is given, else it returns the interpolated text.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= name %>');
     * compiled({ 'name': 'fred' });
     * // => 'hello fred'
     *
     * // using the "escape" delimiter to escape HTML in data property values
     * _.template('<b><%- value %></b>', { 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to generate HTML
     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
     * _.template('hello ${ name }', { 'name': 'pebbles' });
     * // => 'hello pebbles'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
     * // => 'hello barney!'
     *
     * // using a custom template delimiters
     * _.templateSettings = {
     *   'interpolate': /{{([\s\S]+?)}}/g
     * };
     *
     * _.template('hello {{ name }}!', { 'name': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using the `imports` option to import jQuery
     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     *   var __t, __p = '', __e = _.escape;
     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
     *   return __p;
     * }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(text, data, options) {
      // based on John Resig's `tmpl` implementation
      // http://ejohn.org/blog/javascript-micro-templating/
      // and Laura Doktorova's doT.js
      // https://github.com/olado/doT
      var settings = lodash.templateSettings;
      text = String(text || '');

      // avoid missing dependencies when `iteratorTemplate` is not defined
      options = defaults({}, options, settings);

      var imports = defaults({}, options.imports, settings.imports),
          importsKeys = keys(imports),
          importsValues = values(imports);

      var isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // compile the regexp to match each delimiter
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // escape characters that cannot be included in string literals
        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // replace delimiters with snippets
        if (escapeValue) {
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // the JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value
        return match;
      });

      source += "';\n";

      // if `variable` is not specified, wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain
      var variable = options.variable,
          hasVariable = variable;

      if (!hasVariable) {
        variable = 'obj';
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      // cleanup code by stripping empty strings
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // frame code as the function body
      source = 'function(' + variable + ') {\n' +
        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
        "var __t, __p = '', __e = _.escape" +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      // Use a sourceURL for easier debugging.
      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

      try {
        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
      } catch(e) {
        e.source = source;
        throw e;
      }
      if (data) {
        return result(data);
      }
      // provide the compiled function's source by its `toString` method, in
      // supported environments, or the `source` property as a convenience for
      // inlining compiled templates during the build process
      result.source = source;
      return result;
    }

    /**
     * Executes the callback `n` times, returning an array of the results
     * of each callback execution. The callback is bound to `thisArg` and invoked
     * with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} n The number of times to execute the callback.
     * @param {Function} callback The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns an array of the results of each `callback` execution.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) { mage.castSpell(n); });
     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
     *
     * _.times(3, function(n) { this.cast(n); }, mage);
     * // => also calls `mage.castSpell(n)` three times
     */
    function times(n, callback, thisArg) {
      n = (n = +n) > -1 ? n : 0;
      var index = -1,
          result = Array(n);

      callback = baseCreateCallback(callback, thisArg, 1);
      while (++index < n) {
        result[index] = callback(index);
      }
      return result;
    }

    /**
     * The inverse of `_.escape` this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
     * corresponding characters.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('Fred, Barney &amp; Pebbles');
     * // => 'Fred, Barney & Pebbles'
     */
    function unescape(string) {
      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return String(prefix == null ? '' : prefix) + id;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps the given value with explicit
     * method chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(characters)
     *     .sortBy('age')
     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
     *     .first()
     *     .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      value = new lodashWrapper(value);
      value.__chain__ = true;
      return value;
    }

    /**
     * Invokes `interceptor` with the `value` as the first argument and then
     * returns `value`. The purpose of this method is to "tap into" a method
     * chain in order to perform operations on intermediate results within
     * the chain.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3, 4])
     *  .tap(function(array) { array.pop(); })
     *  .reverse()
     *  .value();
     * // => [3, 2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chaining
     * @returns {*} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(characters).first();
     * // => { 'name': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(characters).chain()
     *   .first()
     *   .pick('age')
     *   .value();
     * // => { 'age': 36 }
     */
    function wrapperChain() {
      this.__chain__ = true;
      return this;
    }

    /**
     * Produces the `toString` result of the wrapped value.
     *
     * @name toString
     * @memberOf _
     * @category Chaining
     * @returns {string} Returns the string result.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return String(this.__wrapped__);
    }

    /**
     * Extracts the wrapped value.
     *
     * @name valueOf
     * @memberOf _
     * @alias value
     * @category Chaining
     * @returns {*} Returns the wrapped value.
     * @example
     *
     * _([1, 2, 3]).valueOf();
     * // => [1, 2, 3]
     */
    function wrapperValueOf() {
      return this.__wrapped__;
    }

    /*--------------------------------------------------------------------------*/

    // add functions that return wrapped values when chaining
    lodash.after = after;
    lodash.assign = assign;
    lodash.at = at;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.chain = chain;
    lodash.compact = compact;
    lodash.compose = compose;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.createCallback = createCallback;
    lodash.curry = curry;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.map = map;
    lodash.mapValues = mapValues;
    lodash.max = max;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.min = min;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.pull = pull;
    lodash.range = range;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.shuffle = shuffle;
    lodash.sortBy = sortBy;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.values = values;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;

    // add aliases
    lodash.collect = map;
    lodash.drop = rest;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    lodash.unzip = zip;

    // add functions to `lodash.prototype`
    mixin(lodash);

    /*--------------------------------------------------------------------------*/

    // add functions that return unwrapped values when chaining
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.contains = contains;
    lodash.escape = escape;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.has = has;
    lodash.identity = identity;
    lodash.indexOf = indexOf;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isNaN = isNaN;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isUndefined = isUndefined;
    lodash.lastIndexOf = lastIndexOf;
    lodash.mixin = mixin;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.result = result;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.template = template;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;

    // add aliases
    lodash.all = every;
    lodash.any = some;
    lodash.detect = find;
    lodash.findWhere = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.include = contains;
    lodash.inject = reduce;

    mixin(function() {
      var source = {}
      forOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }(), false);

    /*--------------------------------------------------------------------------*/

    // add functions capable of returning wrapped and unwrapped values when chaining
    lodash.first = first;
    lodash.last = last;
    lodash.sample = sample;

    // add aliases
    lodash.take = first;
    lodash.head = first;

    forOwn(lodash, function(func, methodName) {
      var callbackable = methodName !== 'sample';
      if (!lodash.prototype[methodName]) {
        lodash.prototype[methodName]= function(n, guard) {
          var chainAll = this.__chain__,
              result = func(this.__wrapped__, n, guard);

          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
            ? result
            : new lodashWrapper(result, chainAll);
        };
      }
    });

    /*--------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = '2.4.2';

    // add "Chaining" functions to the wrapper
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.value = wrapperValueOf;
    lodash.prototype.valueOf = wrapperValueOf;

    // add `Array` functions that return unwrapped values
    forEach(['join', 'pop', 'shift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        var chainAll = this.__chain__,
            result = func.apply(this.__wrapped__, arguments);

        return chainAll
          ? new lodashWrapper(result, chainAll)
          : result;
      };
    });

    // add `Array` functions that return the existing wrapped value
    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        func.apply(this.__wrapped__, arguments);
        return this;
      };
    });

    // add `Array` functions that return new wrapped values
    forEach(['concat', 'slice', 'splice'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
      };
    });

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  var _ = runInContext();

  // some AMD build optimizers like r.js check for condition patterns like the following:
  if (true) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash is loaded with a RequireJS shim config.
    // See http://requirejs.org/docs/api.html#config-shim
    root._ = _;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports && freeModule) {
    // in Node.js or RingoJS
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // in Narwhal or Rhino -require
    else {
      freeExports._ = _;
    }
  }
  else {
    // in a browser or Rhino
    root._ = _;
  }
}.call(this));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module), __webpack_require__(4)))

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = debounce;
// Returns a function, that, as long as it continues to be invoked, will not
// be triggered. The function will be called after it stops being called for
// N milliseconds. If `immediate` is passed, trigger the function on the
// leading edge, instead of the trailing.

function debounce(func, wait, immediate) {
  var _this = this;

  var timeout = void 0;
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var context = _this;
    var later = function later() {
      timeout = null;
      if (!immediate) {
        func.apply(context, args);
      }
    };
    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    if (callNow) {
      func.apply(context, args);
    }
  };
}

exports.default = {
  debounce: debounce
};

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(25);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(6)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js??ref--52-1!../../node_modules/postcss-loader/lib/index.js??ref--52-2!./ParallelCoordinates.mcss", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js??ref--52-1!../../node_modules/postcss-loader/lib/index.js??ref--52-2!./ParallelCoordinates.mcss");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(5)(undefined);
// imports


// module
exports.push([module.i, ".ParallelCoordinates-hidden_ar4rh {\n  display: none;\n}\n\n.ParallelCoordinates-selectionBars_2rpfx {\n  stroke: white;\n  stroke-width: 2;\n  fill: rgb(105, 195, 255);\n}\n\n.ParallelCoordinates-controlItem_2qeag {\n  cursor: pointer;\n}\n\n.ParallelCoordinates-axisControlElements_4waxs {\n  cursor: pointer;\n  pointer-events: all;\n}\n\n.ParallelCoordinates-upsideDown_2dxx4 polygon.top {\n  stroke: rgb(151, 151, 151);\n  fill: rgb(216, 216, 216);\n}\n\n.ParallelCoordinates-upsideDown_2dxx4 polygon.bottom {\n  stroke: rgb(151, 151, 151);\n  fill: black;\n}\n\n.ParallelCoordinates-rightsideUp_2n7wz polygon.bottom {\n  stroke: rgb(151, 151, 151);\n  fill: rgb(216, 216, 216);\n}\n\n.ParallelCoordinates-rightsideUp_2n7wz polygon.top {\n  stroke: rgb(151, 151, 151);\n  fill: black;\n}\n\n.ParallelCoordinates-axisAnnotationIndicators_3pqf7 {\n  fill: none;\n  stroke-width: 2;\n  stroke: rgb(105, 195, 255);\n  display: none;\n}\n\n.ParallelCoordinates-axisAnnotated_61k8y {\n  display: block;\n}\n\n.ParallelCoordinates-axisLabels_wh8ey {\n  font-family: \"Optima\", \"Linux Biolinum\", \"URW Classico\", sans;\n  font-size: 12px;\n  fill: black;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n.ParallelCoordinates-axisTicks_9bfkc {\n  font-family: \"Optima\", \"Linux Biolinum\", \"URW Classico\", sans;\n  font-size: 9px;\n  fill: black;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n\n.ParallelCoordinates-annotatedAxisText_4pz16 {\n  font-size: 13px;\n  fill: rgb(105, 195, 255);\n  pointer-events: all;\n  cursor: pointer;\n}\n\n.ParallelCoordinates-axisLines_2rhhh {\n  fill: grey;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 3;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx polygon {\n  stroke: #979797;\n  fill: #D8D8D8;\n}\n\n.ParallelCoordinates-axisControlsGroupContainer_434gm {\n  stroke: none;\n  stroke-width: 1;\n  fill: none;\n  fill-rule: evenodd;\n}\n\n.ParallelCoordinates-hoverBinIndicator_4v1pb {\n  fill: blue;\n  position: relative;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx rect.left-rect:hover ~ polygon.left {\n  stroke: black;\n  fill: darkgray;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx rect.right-rect:hover ~ polygon.right {\n  stroke: black;\n  fill: darkgray;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx rect.center-rect:hover ~ polygon.top {\n  stroke: black;\n  fill: darkgray;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx rect.center-rect:hover ~ polygon.bottom {\n  stroke: black;\n  fill: darkgray;\n}\n\nspan.pc-placeholder-title, span.pc-placeholder-info {\n    font-family: \"Optima\", \"Linux Biolinum\", \"URW Classico\", sans;\n    text-align: center;\n    -webkit-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\ndiv.parallel-coords-placeholder span.pc-placeholder-title {\n    font-size: 45px;\n}\n\ndiv.parallel-coords-placeholder {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 30%;\n}\n\ndiv.pc-placeholder-row {\n  text-align: center;\n}\n\n.ParallelCoordinates-parallelCoordsOverlay_zgwrx g.axis-controls-group polygon {\n  pointer-events: none;\n}\n\nuse.ParallelCoordinates-colorToFill_esje4 * {\n  fill: currentColor;\n}\n\nuse.ParallelCoordinates-blackStroke_fxt3r * {\n  stroke: black;\n}\n\n.ParallelCoordinates-clickable_6bcr3 {\n  pointer-events: bounding-box;\n  cursor: pointer;\n}\n", ""]);

// exports
exports.locals = {
	"hidden": "ParallelCoordinates-hidden_ar4rh",
	"selectionBars": "ParallelCoordinates-selectionBars_2rpfx",
	"controlItem": "ParallelCoordinates-controlItem_2qeag",
	"axisControlElements": "ParallelCoordinates-axisControlElements_4waxs",
	"upsideDown": "ParallelCoordinates-upsideDown_2dxx4",
	"rightsideUp": "ParallelCoordinates-rightsideUp_2n7wz",
	"axisAnnotationIndicators": "ParallelCoordinates-axisAnnotationIndicators_3pqf7",
	"axisAnnotated": "ParallelCoordinates-axisAnnotated_61k8y",
	"axisLabels": "ParallelCoordinates-axisLabels_wh8ey",
	"axisTicks": "ParallelCoordinates-axisTicks_9bfkc",
	"annotatedAxisText": "ParallelCoordinates-annotatedAxisText_4pz16",
	"axisLines": "ParallelCoordinates-axisLines_2rhhh",
	"parallelCoordsOverlay": "ParallelCoordinates-parallelCoordsOverlay_zgwrx",
	"axisControlsGroupContainer": "ParallelCoordinates-axisControlsGroupContainer_434gm",
	"hoverBinIndicator": "ParallelCoordinates-hoverBinIndicator_4v1pb",
	"colorToFill": "ParallelCoordinates-colorToFill_esje4",
	"blackStroke": "ParallelCoordinates-blackStroke_fxt3r",
	"clickable": "ParallelCoordinates-clickable_6bcr3"
};

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _UUID = __webpack_require__(27);

var _SelectionBuilder = __webpack_require__(10);

var _SelectionBuilder2 = _interopRequireDefault(_SelectionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ----------------------------------------------------------------------------
// Internal helpers
// ----------------------------------------------------------------------------

var generation = 0;

function setInitialGenerationNumber(genNum) {
  generation = genNum;
}

// ----------------------------------------------------------------------------
// Public builder method
// ----------------------------------------------------------------------------

function annotation(selection, score) {
  var weight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  var rationale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  var name = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';

  generation += 1;
  return {
    id: (0, _UUID.generateUUID)(),
    generation: generation,
    selection: selection,
    score: score,
    weight: weight,
    rationale: rationale,
    name: name
  };
}

// ----------------------------------------------------------------------------

function update(annotationObject, changeSet) {
  var updatedAnnotation = Object.assign({}, annotationObject, changeSet);

  var changeDetected = false;
  Object.keys(updatedAnnotation).forEach(function (key) {
    if (updatedAnnotation[key] !== annotationObject[key]) {
      changeDetected = true;
    }
  });

  if (changeDetected) {
    generation += 1;
    updatedAnnotation.generation = generation;
  }

  return updatedAnnotation;
}

// ----------------------------------------------------------------------------

function updateReadOnlyFlag(annotationToEdit, readOnlyFields) {
  if (!annotationToEdit || !annotationToEdit.selection || !readOnlyFields) {
    return;
  }

  annotationToEdit.readOnly = _SelectionBuilder2.default.hasField(annotationToEdit.selection, readOnlyFields);
}

// ----------------------------------------------------------------------------

function fork(annotationObj) {
  var id = (0, _UUID.generateUUID)();
  generation += 1;
  return Object.assign({}, annotationObj, { generation: generation, id: id });
}

function setDefaultName(annotationObject) {
  if (annotationObject.selection.type === 'range') {
    var rangeNames = Object.keys(annotationObject.selection.range.variables);
    if (rangeNames.length > 0) {
      annotationObject.name = rangeNames[0];
      if (rangeNames.length > 1) {
        annotationObject.name += ' & ' + rangeNames[1];
      }
      if (rangeNames.length > 2) {
        annotationObject.name += ' &...';
      }
    } else {
      annotationObject.name = 'empty';
    }
    annotationObject.name += ' (range)';
  } else if (annotationObject.selection.type === 'partition') {
    annotationObject.name = annotationObject.selection.partition.variable + ' (partition)';
  } else {
    annotationObject.name = 'unknown';
  }
}

// ----------------------------------------------------------------------------

function markModified(annotationObject) {
  generation += 1;
  return Object.assign({}, annotationObject, { generation: generation });
}

// ----------------------------------------------------------------------------
// Exposed object
// ----------------------------------------------------------------------------

var EMPTY_ANNOTATION = annotation(_SelectionBuilder2.default.EMPTY_SELECTION, []);

exports.default = {
  annotation: annotation,
  EMPTY_ANNOTATION: EMPTY_ANNOTATION,
  fork: fork,
  markModified: markModified,
  setDefaultName: setDefaultName,
  setInitialGenerationNumber: setInitialGenerationNumber,
  update: update,
  updateReadOnlyFlag: updateReadOnlyFlag
};

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateUUID = generateUUID;
/**
 * The following method was adapted from code found here:
 *
 *    http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript
 */

/* global window */
/* eslint-disable no-bitwise */

function generateUUID() {
  var d = Date.now();
  if (window.performance && typeof window.performance.now === 'function') {
    d += window.performance.now(); // use high-precision timer if available
  }
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);
  });
  return uuid;
}

exports.default = {
  generateUUID: generateUUID
};

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ParallelCoordinates = __webpack_require__(8);

var _Axis = __webpack_require__(31);

var _Axis2 = _interopRequireDefault(_Axis);

var _SelectionBuilder = __webpack_require__(10);

var _SelectionBuilder2 = _interopRequireDefault(_SelectionBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function toEndpoint(closeLeft, closeRight) {
  var result = [];
  result.push(closeLeft ? '*' : 'o');
  result.push(closeRight ? '*' : 'o');
  return result.join('');
}

// ----------------------------------------------------------------------------

var AxesManager = function () {
  function AxesManager() {
    _classCallCheck(this, AxesManager);

    this.axes = [];
    this.listeners = [];
    this.axisListChangeListeners = [];
  }

  _createClass(AxesManager, [{
    key: 'clearAxes',
    value: function clearAxes() {
      if (this.axes.length) {
        this.axes = [];
        this.triggerAxisListChange();
      }
    }
  }, {
    key: 'updateAxes',
    value: function updateAxes(axisList) {
      var _this = this;

      if (this.axes.length === 0) {
        axisList.forEach(function (entry) {
          _this.addAxis(new _Axis2.default(entry.name, entry.range));
        });
      } else {
        var targetList = [];
        var toAdd = [];

        // index axes
        var nameToAxisMap = {};
        this.axes.forEach(function (axis) {
          nameToAxisMap[axis.name] = axis;
        });

        axisList.forEach(function (entry) {
          targetList.push(entry.name);
          if (!nameToAxisMap[entry.name]) {
            toAdd.push(new _Axis2.default(entry.name, entry.range));
          }
        });

        // Remove unwanted axis while keeping the previous order
        var previousSize = this.axes.length;
        this.axes = this.axes.filter(function (axis) {
          return targetList.indexOf(axis.name) !== -1;
        }).concat(toAdd);
        if (toAdd.length || this.axes.length !== previousSize) {
          this.triggerAxisListChange();
        }
      }
      // Update index
      this.axes.forEach(function (item, idx) {
        item.idx = idx;
      });
    }
  }, {
    key: 'addAxis',
    value: function addAxis(axis) {
      axis.idx = this.axes.length;
      this.axes.push(axis);
      this.triggerAxisListChange();
    }
  }, {
    key: 'getAxis',
    value: function getAxis(index) {
      return this.axes[index];
    }
  }, {
    key: 'getAxisByName',
    value: function getAxisByName(name) {
      return this.axes.filter(function (axis) {
        return axis.name === name;
      })[0];
    }
  }, {
    key: 'canRender',
    value: function canRender() {
      return this.axes.length > 1;
    }
  }, {
    key: 'getNumberOf2DHistogram',
    value: function getNumberOf2DHistogram() {
      return this.axes.length - 1;
    }
  }, {
    key: 'getNumberOfAxes',
    value: function getNumberOfAxes() {
      return this.axes.length;
    }
  }, {
    key: 'getAxesNames',
    value: function getAxesNames() {
      return this.axes.map(function (axis) {
        return axis.name;
      });
    }
  }, {
    key: 'getAxesPairs',
    value: function getAxesPairs() {
      var axesPairs = [];
      for (var i = 1; i < this.axes.length; i++) {
        axesPairs.push([this.axes[i - 1].name, this.axes[i].name]);
      }
      return axesPairs;
    }
  }, {
    key: 'resetSelections',
    value: function resetSelections() {
      var selection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var triggerEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var scoreMapping = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
      var scoreColorMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];

      this.clearAllSelections(true);

      // index axes
      var nameToAxisMap = {};
      this.axes.forEach(function (axis) {
        nameToAxisMap[axis.name] = axis;
      });

      // Update selections
      if (selection) {
        if (selection.type === 'range') {
          this.selection = selection;
          Object.keys(selection.range.variables).forEach(function (axisName) {
            if (nameToAxisMap[axisName]) {
              nameToAxisMap[axisName].selections = selection.range.variables[axisName].map(function (i) {
                return Object.assign({}, i);
              });
              if (scoreMapping && scoreMapping.length === 1) {
                nameToAxisMap[axisName].selections.forEach(function (axisSelection) {
                  axisSelection.score = scoreMapping[0];
                  axisSelection.color = scoreColorMap[scoreMapping[0]] ? 'rgb(' + scoreColorMap[scoreMapping[0]].join(',') + ')' : 'rgb(105, 195, 255)';
                });
              }
            }
          });
        } else if (selection.type === 'partition') {
          this.selection = selection;
          var axis = nameToAxisMap[selection.partition.variable];
          if (axis) {
            axis.selections = [];
            selection.partition.dividers.forEach(function (divider, idx, array) {
              if (idx === 0) {
                axis.selections.push({
                  interval: [axis.range[0], divider.value],
                  endpoints: toEndpoint(true, !divider.closeToLeft),
                  uncertainty: divider.uncertainty, // FIXME that is wrong...
                  color: scoreColorMap[scoreMapping[idx]] ? 'rgb(' + scoreColorMap[scoreMapping[idx]].join(',') + ')' : 'rgb(105, 195, 255)',
                  score: scoreMapping[idx]
                });
              } else {
                axis.selections.push({
                  interval: [array[idx - 1].value, divider.value],
                  endpoints: toEndpoint(array[idx - 1].closeToLeft, !divider.closeToLeft),
                  uncertainty: divider.uncertainty, // FIXME that is wrong...
                  color: scoreColorMap[scoreMapping[idx]] ? 'rgb(' + scoreColorMap[scoreMapping[idx]].join(',') + ')' : 'rgb(105, 195, 255)',
                  score: scoreMapping[idx]
                });
              }
              if (idx + 1 === array.length) {
                axis.selections.push({
                  interval: [divider.value, axis.range[1]],
                  endpoints: toEndpoint(divider.closeToLeft, true),
                  uncertainty: divider.uncertainty, // FIXME that is wrong...
                  color: scoreColorMap[scoreMapping[idx + 1]] ? 'rgb(' + scoreColorMap[scoreMapping[idx + 1]].join(',') + ')' : 'rgb(105, 195, 255)',
                  score: scoreMapping[idx + 1]
                });
              }
            });
          }
        } else if (selection.type === 'empty') {
          // nothing to do we already cleared the selection
        } else {
          console.error(selection, 'Parallel coordinate does not understand a selection that is not range based');
        }
      }

      if (triggerEvent) {
        this.triggerSelectionChange(false);
      }
    }
  }, {
    key: 'addSelection',
    value: function addSelection(axisIdx, start, end, endpoints, uncertainty) {
      this.axes[axisIdx].addSelection(start < end ? start : end, end < start ? start : end, endpoints, uncertainty);
      this.triggerSelectionChange();
    }
  }, {
    key: 'updateSelection',
    value: function updateSelection(axisIdx, selectionIdx, start, end) {
      this.axes[axisIdx].updateSelection(selectionIdx, start < end ? start : end, end < start ? start : end);
      this.triggerSelectionChange();
    }
  }, {
    key: 'clearSelection',
    value: function clearSelection(axisIdx) {
      this.axes[axisIdx].clearSelection();
      this.triggerSelectionChange();
    }
  }, {
    key: 'getAxisCenter',
    value: function getAxisCenter(index, width) {
      return index * width / (this.axes.length - 1);
    }
  }, {
    key: 'toggleOrientation',
    value: function toggleOrientation(index) {
      this.axes[index].toggleOrientation();
    }
  }, {
    key: 'swapAxes',
    value: function swapAxes(aIdx, bIdx) {
      if (!this.axes[aIdx] || !this.axes[bIdx]) {
        return;
      }
      var a = this.axes[aIdx];
      var b = this.axes[bIdx];
      this.axes[aIdx] = b;
      this.axes[bIdx] = a;
      a.idx = bIdx;
      b.idx = aIdx;
      this.triggerAxisListChange();
    }
  }, {
    key: 'hasSelection',
    value: function hasSelection() {
      return this.axes.filter(function (axis) {
        return axis.hasSelection();
      }).length > 0;
    }
  }, {
    key: 'clearAllSelections',
    value: function clearAllSelections(silence) {
      this.axes.forEach(function (axis) {
        return axis.clearSelection();
      });
      if (!silence) {
        this.triggerSelectionChange();
      }
    }
  }, {
    key: 'onSelectionChange',
    value: function onSelectionChange(callback) {
      var _this2 = this;

      var listenerId = this.listeners.length;
      var unsubscribe = function unsubscribe() {
        _this2.listeners[listenerId] = null;
      };
      this.listeners.push(callback);
      return { unsubscribe: unsubscribe };
    }
  }, {
    key: 'triggerSelectionChange',
    value: function triggerSelectionChange() {
      var _this3 = this;

      var reset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      setImmediate(function () {
        if (reset) {
          _this3.selection = null;
        }
        var selection = _this3.getSelection();
        // Notify listeners
        _this3.listeners.forEach(function (listener) {
          if (listener) {
            listener(selection);
          }
        });
      });
    }
  }, {
    key: 'onAxisListChange',
    value: function onAxisListChange(callback) {
      var _this4 = this;

      var listenerId = this.axisListChangeListeners.length;
      var unsubscribe = function unsubscribe() {
        _this4.axisListChangeListeners[listenerId] = null;
      };
      this.axisListChangeListeners.push(callback);
      return { unsubscribe: unsubscribe };
    }
  }, {
    key: 'triggerAxisListChange',
    value: function triggerAxisListChange() {
      var _this5 = this;

      setImmediate(function () {
        // Notify listeners
        _this5.axisListChangeListeners.forEach(function (listener) {
          if (listener) {
            listener(_this5.getAxesPairs());
          }
        });
      });
    }
  }, {
    key: 'getSelection',
    value: function getSelection() {
      if (!this.selection) {
        var vars = {};
        var selectionCount = 0;
        this.axes.forEach(function (axis) {
          if (axis.hasSelection()) {
            vars[axis.name] = [].concat(axis.selections);
            selectionCount += 1;
          }
        });
        this.selection = selectionCount ? _SelectionBuilder2.default.range(vars) : _SelectionBuilder2.default.EMPTY_SELECTION;
      }

      return this.selection;
    }
  }, {
    key: 'extractSelections',
    value: function extractSelections(model, drawScore) {
      var _this6 = this;

      var selections = [];
      if (this.hasSelection()) {
        this.axes.forEach(function (axis, index) {
          var screenX = _this6.getAxisCenter(index, model.drawableArea.width) + model.borderOffsetLeft;
          axis.selections.forEach(function (selection, selectionIndex) {
            if (drawScore && selection.score !== undefined) {
              if (!drawScore(selection.score)) {
                return; // Skip unwanted score
              }
            }
            selections.push({
              index: index,
              selectionIndex: selectionIndex,
              screenX: screenX,
              screenRangeY: [(0, _ParallelCoordinates.dataToScreen)(model, selection.interval[0], axis), (0, _ParallelCoordinates.dataToScreen)(model, selection.interval[1], axis)],
              color: selection.color ? selection.color : 'rgb(105, 195, 255)'
            });
          });
        });
      }
      return selections;
    }
  }, {
    key: 'extractAxesControl',
    value: function extractAxesControl(model) {
      var _this7 = this;

      var controlsDataModel = [];
      this.axes.forEach(function (axis, index) {
        controlsDataModel.push({
          orient: !axis.isUpsideDown(),
          centerX: _this7.getAxisCenter(index, model.drawableArea.width) + model.borderOffsetLeft,
          centerY: model.canvasArea.height - model.borderOffsetBottom + 30 // FIXME what is 30?
        });
      });

      // Tag first/last axis
      controlsDataModel[0].pos = -1;
      controlsDataModel[controlsDataModel.length - 1].pos = 1;

      return controlsDataModel;
    }
  }, {
    key: 'extractLabels',
    value: function extractLabels(model) {
      var _this8 = this;

      var labelModel = [];

      this.axes.forEach(function (axis, index) {
        labelModel.push({
          name: axis.name,
          centerX: _this8.getAxisCenter(index, model.drawableArea.width) + model.borderOffsetLeft,
          annotated: axis.hasSelection(),
          align: 'middle'
        });
      });

      // Tag first/last axis
      labelModel[0].align = 'start';
      labelModel[labelModel.length - 1].align = 'end';

      return labelModel;
    }
  }, {
    key: 'extractAxisTicks',
    value: function extractAxisTicks(model) {
      var _this9 = this;

      var tickModel = [];

      this.axes.forEach(function (axis, index) {
        tickModel.push({
          value: !axis.upsideDown ? axis.range[1] : axis.range[0],
          xpos: _this9.getAxisCenter(index, model.drawableArea.width) + model.borderOffsetLeft,
          ypos: model.borderOffsetTop - 4,
          align: 'middle'
        });
        tickModel.push({
          value: !axis.upsideDown ? axis.range[0] : axis.range[1],
          xpos: _this9.getAxisCenter(index, model.drawableArea.width) + model.borderOffsetLeft,
          ypos: model.borderOffsetTop + model.drawableArea.height + 13,
          align: 'middle'
        });
      });

      // Make adjustments to ticks for first and last axes
      tickModel[0].align = 'start';
      tickModel[1].align = 'start';
      tickModel[0].xpos -= model.axisWidth / 2;
      tickModel[1].xpos -= model.axisWidth / 2;

      tickModel[this.axes.length * 2 - 1].align = 'end';
      tickModel[this.axes.length * 2 - 2].align = 'end';
      tickModel[this.axes.length * 2 - 1].xpos += model.axisWidth / 2;
      tickModel[this.axes.length * 2 - 2].xpos += model.axisWidth / 2;

      return tickModel;
    }
  }, {
    key: 'extractAxesCenters',
    value: function extractAxesCenters(model) {
      var _this10 = this;

      var axesCenters = [];
      this.axes.forEach(function (axis, index) {
        axesCenters.push(_this10.getAxisCenter(index, model.drawableArea.width) + model.borderOffsetLeft);
      });
      return axesCenters;
    }
  }]);

  return AxesManager;
}();

exports.default = AxesManager;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11).setImmediate))

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(30)))

/***/ }),
/* 30 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Axis = function () {
  function Axis(name) {
    var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 1];

    _classCallCheck(this, Axis);

    this.name = name;
    this.range = [].concat(range);
    this.upsideDown = false;
    this.selections = [];
  }

  _createClass(Axis, [{
    key: 'toggleOrientation',
    value: function toggleOrientation() {
      this.upsideDown = !this.upsideDown;
    }
  }, {
    key: 'isUpsideDown',
    value: function isUpsideDown() {
      return this.upsideDown;
    }
  }, {
    key: 'hasSelection',
    value: function hasSelection() {
      return this.selections.length > 0;
    }
  }, {
    key: 'updateRange',
    value: function updateRange(newRange) {
      if (this.range[0] !== newRange[0] || this.range[1] !== newRange[1] || this.range[1] === this.range[0]) {
        this.range[0] = newRange[0];
        this.range[1] = newRange[1];
        if (this.range[0] === this.range[1]) {
          this.range[1] += 1;
        }
      }
    }
  }, {
    key: 'updateSelection',
    value: function updateSelection(selectionIndex, start, end) {
      var entry = [start, end];
      this.selections[selectionIndex].interval = entry;
      // if entire selection is outside range, delete it.
      if (start < this.range[0] && end < this.range[0] || end > this.range[1] && start > this.range[1]) {
        this.selections.splice(selectionIndex, 1);
        return;
      }

      // Clamp to axis range
      if (start < this.range[0]) {
        entry[0] = this.range[0];
      }

      if (end > this.range[1]) {
        entry[1] = this.range[1];
      }

      // notification handled by AxesManager
    }
  }, {
    key: 'addSelection',
    value: function addSelection(start, end) {
      var endpoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '**';
      var uncertainty = arguments[3];

      var interval = [start < this.range[0] ? this.range[0] : start, end < this.range[1] ? end : this.range[1]];
      this.selections.push({ interval: interval, endpoints: endpoints, uncertainty: uncertainty });
    }
  }, {
    key: 'clearSelection',
    value: function clearSelection() {
      this.selections = [];
    }
  }]);

  return Axis;
}();

exports.default = Axis;

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = "<div class=\"parallel-coords-placeholder\">\n  <div class=\"pc-placeholder-row\">\n    <span class=\"pc-placeholder-title\">Parallel Coordinates</span>\n  </div>\n  <div class=\"pc-placeholder-row\">\n    <img class=\"pc-placeholder-image\"/>\n  </div>\n  <div class=\"pc-placeholder-row\">\n    <span class=\"pc-placeholder-info\">Please select two or more variables</span>\n  </div>\n</div>\n";

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "dd2b12fdad175453c8a7633ffa7e600e.png";

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = undefined;
exports.extend = extend;

var _d = __webpack_require__(9);

var _d2 = _interopRequireDefault(_d);

var _FieldSelector = __webpack_require__(35);

var _FieldSelector2 = _interopRequireDefault(_FieldSelector);

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

var _template = __webpack_require__(43);

var _template2 = _interopRequireDefault(_template);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ----------------------------------------------------------------------------
// Global
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// Field Selector
// ----------------------------------------------------------------------------

function fieldSelector(publicAPI, model) {
  // private variables
  var hideField = {
    minMax: false,
    hist: false,
    minMaxWidth: 0,
    histWidth: 0
  };

  // storage for 1d histograms
  if (!model.histograms) {
    model.histograms = {};
  }

  // public API
  publicAPI.resize = function () {
    publicAPI.render();
  };

  publicAPI.setContainer = function (el) {
    if (model.container) {
      while (model.container.firstChild) {
        model.container.removeChild(model.container.firstChild);
      }
      model.container = null;
    }

    model.container = el;

    if (el) {
      _d2.default.select(model.container).html(_template2.default);
      _d2.default.select(model.container).select('.fieldSelector').classed(_FieldSelector2.default.fieldSelector, true);

      model.fieldShowHistogram = model.fieldShowHistogram && model.provider.isA('Histogram1DProvider');
      // append headers for histogram columns
      if (model.fieldShowHistogram) {
        var header = _d2.default.select(model.container).select('thead').select('tr');
        header.append('th').text('Min').classed(_FieldSelector2.default.jsHistMin, true);
        header.append('th').text('Histogram').classed(_FieldSelector2.default.jsSparkline, true);
        header.append('th').text('Max').classed(_FieldSelector2.default.jsHistMax, true);
      }
      publicAPI.render();
    }
  };

  publicAPI.render = function () {
    if (!model.container) {
      return;
    }

    var legendSize = 15;

    // Apply style
    _d2.default.select(model.container).select('thead').classed(_FieldSelector2.default.thead, true);
    _d2.default.select(model.container).select('tbody').classed(_FieldSelector2.default.tbody, true);
    _d2.default.select(model.container).select('th.field-selector-mode').on('click', function (d) {
      model.displayUnselected = !model.displayUnselected;
      publicAPI.render();
    }).select('i')
    // apply class - 'false' should come first to not remove common base class.
    .classed(!model.displayUnselected ? _FieldSelector2.default.allFieldsIcon : _FieldSelector2.default.selectedFieldsIcon, false).classed(model.displayUnselected ? _FieldSelector2.default.allFieldsIcon : _FieldSelector2.default.selectedFieldsIcon, true);

    var data = model.displayUnselected ? model.provider.getFieldNames() : model.provider.getActiveFieldNames();
    var totalNum = model.displayUnselected ? data.length : model.provider.getFieldNames().length;

    // Update header label
    _d2.default.select(model.container).select('th.field-selector-label').style('text-align', 'left').text(model.displayUnselected ? 'Only Selected (' + data.length + ' total)' : 'Only Selected (' + data.length + ' / ' + totalNum + ' total)').on('click', function (d) {
      model.displayUnselected = !model.displayUnselected;
      publicAPI.render();
    });

    // test for too-long rows
    var hideMore = model.container.scrollWidth > model.container.clientWidth;
    if (hideMore) {
      if (!hideField.minMax) {
        hideField.minMax = true;
        hideField.minMaxWidth = model.container.scrollWidth;
        // if we hide min/max, we may also need to hide hist, so trigger another resize
        setTimeout(publicAPI.resize, 0);
      } else if (!hideField.hist) {
        hideField.hist = true;
        hideField.histWidth = model.container.scrollWidth;
      }
    } else if (hideField.minMax) {
      // if we've hidden something, see if we can re-show it.
      if (hideField.hist) {
        if (model.container.scrollWidth - hideField.histWidth > 0) {
          hideField.hist = false;
          hideField.histWidth = 0;
          // if we show hist, we may also need to show min/max, so trigger another resize
          setTimeout(publicAPI.resize, 0);
        }
      } else if (hideField.minMax) {
        if (model.container.scrollWidth - hideField.minMaxWidth > 0) {
          hideField.minMax = false;
          hideField.minMaxWidth = 0;
        }
      }
    }
    var header = _d2.default.select(model.container).select('thead').select('tr');
    header.selectAll('.' + _FieldSelector2.default.jsHistMin).style('display', hideField.minMax ? 'none' : null);
    header.selectAll('.' + _FieldSelector2.default.jsSparkline).style('display', hideField.hist ? 'none' : null);
    header.selectAll('.' + _FieldSelector2.default.jsHistMax).style('display', hideField.minMax ? 'none' : null);

    // Handle variables
    var variablesContainer = _d2.default.select(model.container).select('tbody.fields').selectAll('tr').data(data);

    variablesContainer.enter().append('tr');
    variablesContainer.exit().remove();

    // Apply on each data item
    function renderField(fieldName, index) {
      var field = model.provider.getField(fieldName);
      var fieldContainer = _d2.default.select(this);
      var legendCell = fieldContainer.select('.' + _FieldSelector2.default.jsLegend);
      var fieldCell = fieldContainer.select('.' + _FieldSelector2.default.jsFieldName);

      // Apply style to row (selected/unselected)
      fieldContainer.classed(!field.active ? _FieldSelector2.default.selectedRow : _FieldSelector2.default.unselectedRow, false).classed(field.active ? _FieldSelector2.default.selectedRow : _FieldSelector2.default.unselectedRow, true).on('click', function (name) {
        model.provider.toggleFieldSelection(name);
      });

      // Create missing DOM element if any
      if (legendCell.empty()) {
        legendCell = fieldContainer.append('td').classed(_FieldSelector2.default.legend, true);

        fieldCell = fieldContainer.append('td').classed(_FieldSelector2.default.fieldName, true);
      }

      // Apply legend
      if (model.provider.isA('LegendProvider')) {
        var _model$provider$getLe = model.provider.getLegend(fieldName),
            color = _model$provider$getLe.color,
            shape = _model$provider$getLe.shape;

        legendCell.html('<svg class=\'' + _FieldSelector2.default.legendSvg + '\' width=\'' + legendSize + '\' height=\'' + legendSize + '\'\n                  fill=\'' + color + '\' stroke=\'black\'><use xlink:href=\'' + shape + '\'/></svg>');
      } else {
        legendCell.html('<i></i>').select('i').classed(!field.active ? _FieldSelector2.default.selectedRow : _FieldSelector2.default.unselectedRow, false).classed(field.active ? _FieldSelector2.default.selectedRow : _FieldSelector2.default.unselectedRow, true);
      }

      // Apply field name
      fieldCell.text(fieldName);

      if (model.fieldShowHistogram) {
        var minCell = fieldContainer.select('.' + _FieldSelector2.default.jsHistMin);
        var histCell = fieldContainer.select('.' + _FieldSelector2.default.jsSparkline);
        var maxCell = fieldContainer.select('.' + _FieldSelector2.default.jsHistMax);

        if (histCell.empty()) {
          minCell = fieldContainer.append('td').classed(_FieldSelector2.default.jsHistMin, true);
          histCell = fieldContainer.append('td').classed(_FieldSelector2.default.sparkline, true);
          maxCell = fieldContainer.append('td').classed(_FieldSelector2.default.jsHistMax, true);
          histCell.append('svg').classed(_FieldSelector2.default.sparklineSvg, true).attr('width', model.fieldHistWidth).attr('height', model.fieldHistHeight);
        }

        // make sure our data is ready. If not, render will be called when loaded.
        var hobj = model.histograms ? model.histograms[fieldName] : null;
        if (hobj) {
          histCell.style('display', hideField.hist ? 'none' : null);

          // only do work if histogram is displayed.
          if (!hideField.hist) {
            var cmax = 1.0 * _d2.default.max(hobj.counts);
            var hsize = hobj.counts.length;
            var hdata = histCell.select('svg').selectAll('.' + _FieldSelector2.default.jsHistRect).data(hobj.counts);

            hdata.enter().append('rect');
            // changes apply to both enter and update data join:
            hdata.attr('class', function (d, i) {
              return i % 2 === 0 ? _FieldSelector2.default.histRectEven : _FieldSelector2.default.histRectOdd;
            }).attr('pname', fieldName).attr('y', function (d) {
              return model.fieldHistHeight * (1.0 - d / cmax);
            }).attr('x', function (d, i) {
              return model.fieldHistWidth / hsize * i;
            }).attr('height', function (d) {
              return model.fieldHistHeight * (d / cmax);
            }).attr('width', model.fieldHistWidth / hsize);

            hdata.exit().remove();

            if (model.provider.isA('HistogramBinHoverProvider')) {
              histCell.select('svg').on('mousemove', function inner(d, i) {
                var mCoords = _d2.default.mouse(this);
                var binNum = Math.floor(mCoords[0] / model.fieldHistWidth * hsize);
                var state = {};
                state[fieldName] = [binNum];
                model.provider.setHoverState({ state: state });
              }).on('mouseout', function (d, i) {
                var state = {};
                state[fieldName] = [-1];
                model.provider.setHoverState({ state: state });
              });
            }
          }

          var formatter = _d2.default.format('.3s');
          minCell.text(formatter(hobj.min)).style('display', hideField.minMax ? 'none' : null);
          maxCell.text(formatter(hobj.max)).style('display', hideField.minMax ? 'none' : null);
        }
      }
    }

    // Render all fields
    variablesContainer.each(renderField);
  };

  function handleHoverUpdate(data) {
    var svg = _d2.default.select(model.container);
    Object.keys(data.state).forEach(function (pName) {
      var binList = data.state[pName];
      svg.selectAll('rect[pname=\'' + pName + '\']').classed(_FieldSelector2.default.histoHilite, function (d, i) {
        return binList.indexOf(-1) === -1;
      }).classed(_FieldSelector2.default.binHilite, function (d, i) {
        return binList.indexOf(i) >= 0;
      });
    });
  }

  // Make sure default values get applied
  publicAPI.setContainer(model.container);

  model.subscriptions.push({ unsubscribe: publicAPI.setContainer });

  model.subscriptions.push(model.provider.onFieldChange(function () {
    publicAPI.render();
    model.histogram1DDataSubscription.update(model.provider.getFieldNames(), {
      numberOfBins: model.numberOfBins,
      partial: true
    });
  }));

  if (model.fieldShowHistogram) {
    if (model.provider.isA('Histogram1DProvider')) {
      model.histogram1DDataSubscription = model.provider.subscribeToHistogram1D(function (allHistogram1d) {
        // Below, we're asking for partial updates, so we just update our
        // cache with anything that came in.
        Object.keys(allHistogram1d).forEach(function (paramName) {
          model.histograms[paramName] = allHistogram1d[paramName];
        });
        publicAPI.render();
      }, model.provider.getFieldNames(), {
        numberOfBins: model.numberOfBins,
        partial: true
      });

      model.subscriptions.push(model.histogram1DDataSubscription);
    }
  }

  if (model.provider.isA('HistogramBinHoverProvider')) {
    model.subscriptions.push(model.provider.onHoverBinChange(handleHoverUpdate));
  }
}

// ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------

var DEFAULT_VALUES = {
  container: null,
  provider: null,
  displayUnselected: true,
  fieldShowHistogram: true,
  fieldHistWidth: 120,
  fieldHistHeight: 15,
  numberOfBins: 32
};

// ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, DEFAULT_VALUES, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, 'VizComponent');
  _CompositeClosureHelper2.default.get(publicAPI, model, ['provider', 'container', 'fieldShowHistogram', 'numberOfBins']);
  _CompositeClosureHelper2.default.set(publicAPI, model, ['fieldShowHistogram', 'numberOfBins']);

  fieldSelector(publicAPI, model);
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = { newInstance: newInstance, extend: extend };

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(36);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {"hmr":true}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(6)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/css-loader/index.js??ref--52-1!../../node_modules/postcss-loader/lib/index.js??ref--52-2!./FieldSelector.mcss", function() {
			var newContent = require("!!../../node_modules/css-loader/index.js??ref--52-1!../../node_modules/postcss-loader/lib/index.js??ref--52-2!./FieldSelector.mcss");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(5)(undefined);
// imports
exports.i(__webpack_require__(0), undefined);

// module
exports.push([module.i, "/*empty styles allow for d3 selection in javascript*/\n.FieldSelector-jsFieldName_3jheu,\n.FieldSelector-jsHistMax_4ewdh,\n.FieldSelector-jsHistMin_31bac,\n.FieldSelector-jsHistRect_45bu4,\n.FieldSelector-jsLegend_46e1f,\n.FieldSelector-jsSparkline_423ar {\n\n}\n\n.FieldSelector-fieldSelector_3v35e {\n  font-family: \"Optima\", \"Linux Biolinum\", \"URW Classico\", sans;\n}\n\n.FieldSelector-icon_3vny7 {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n}\n\n.FieldSelector-selectedFieldsIcon_nej41 {\n}\n\n.FieldSelector-allFieldsIcon_226ak {\n}\n\n.FieldSelector-legend_3u62h {\n  text-align: center;\n  padding: 5px;\n}\n.FieldSelector-legendSvg_3jakw {\n  vertical-align: middle;\n}\n\n.FieldSelector-fieldName_2a7ax {\n  width: 100%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.FieldSelector-row_yjxwb {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n}\n\n.FieldSelector-unselectedRow_4h94u {\n  opacity: 0.5;\n}\n\n.FieldSelector-selectedRow_4gzmp {\n  opacity: 1;\n}\n\n.FieldSelector-row_yjxwb:hover {\n  background-color: #ccd;\n}\n\n.FieldSelector-thead_42dkk {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  cursor: pointer;\n}\n\n.FieldSelector-tbody_3qw2u {\n}\n\n.FieldSelector-sparkline_5ertz {\n  padding: 2px;\n}\n\n.FieldSelector-sparklineSvg_3vbst {\n  vertical-align: middle;\n}\n\n.FieldSelector-histRect_4jgy3 {\n  stroke: none;\n  shape-rendering: crispEdges;\n}\n.FieldSelector-histRectEven_4whd6 {\n  fill: #8089B8;\n}\n.FieldSelector-histRectOdd_38b28 {\n  fill: #7780AB;\n}\n\n.FieldSelector-histoHilite_4tjq9 {\n  fill: #999;\n}\n\n.FieldSelector-binHilite_359z7 {\n  fill: #001EB8;\n}\n", ""]);

// exports
exports.locals = {
	"jsFieldName": "FieldSelector-jsFieldName_3jheu",
	"jsHistMax": "FieldSelector-jsHistMax_4ewdh",
	"jsHistMin": "FieldSelector-jsHistMin_31bac",
	"jsHistRect": "FieldSelector-jsHistRect_45bu4",
	"jsLegend": "FieldSelector-jsLegend_46e1f",
	"jsSparkline": "FieldSelector-jsSparkline_423ar",
	"fieldSelector": "FieldSelector-fieldSelector_3v35e",
	"icon": "FieldSelector-icon_3vny7 " + __webpack_require__(0).locals["fa"] + " " + __webpack_require__(0).locals["fa-fw"] + "",
	"selectedFieldsIcon": "FieldSelector-selectedFieldsIcon_nej41 FieldSelector-icon_3vny7 " + __webpack_require__(0).locals["fa"] + " " + __webpack_require__(0).locals["fa-fw"] + " " + __webpack_require__(0).locals["fa-check-square-o"] + "",
	"allFieldsIcon": "FieldSelector-allFieldsIcon_226ak FieldSelector-icon_3vny7 " + __webpack_require__(0).locals["fa"] + " " + __webpack_require__(0).locals["fa-fw"] + " " + __webpack_require__(0).locals["fa-square-o"] + "",
	"legend": "FieldSelector-legend_3u62h FieldSelector-jsLegend_46e1f",
	"legendSvg": "FieldSelector-legendSvg_3jakw",
	"fieldName": "FieldSelector-fieldName_2a7ax FieldSelector-jsFieldName_3jheu",
	"row": "FieldSelector-row_yjxwb",
	"unselectedRow": "FieldSelector-unselectedRow_4h94u FieldSelector-row_yjxwb",
	"selectedRow": "FieldSelector-selectedRow_4gzmp FieldSelector-row_yjxwb",
	"thead": "FieldSelector-thead_42dkk",
	"tbody": "FieldSelector-tbody_3qw2u",
	"sparkline": "FieldSelector-sparkline_5ertz FieldSelector-jsSparkline_423ar",
	"sparklineSvg": "FieldSelector-sparklineSvg_3vbst",
	"histRect": "FieldSelector-histRect_4jgy3 FieldSelector-jsHistRect_45bu4",
	"histRectEven": "FieldSelector-histRectEven_4whd6 FieldSelector-histRect_4jgy3 FieldSelector-jsHistRect_45bu4",
	"histRectOdd": "FieldSelector-histRectOdd_38b28 FieldSelector-histRect_4jgy3 FieldSelector-jsHistRect_45bu4",
	"histoHilite": "FieldSelector-histoHilite_4tjq9",
	"binHilite": "FieldSelector-binHilite_359z7"
};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "674f50d287a8c48dc19ba404d20fe713.eot";

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "674f50d287a8c48dc19ba404d20fe713.eot";

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "af7ae505a9eed503f8b8e6982036873e.woff2";

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fee66e712a8a08eef5805a46892932ad.woff";

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "b06871f281fee6b241d60582ae9369b9.ttf";

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "912ec66d7572ff821749319396470bde.svg";

/***/ }),
/* 43 */
/***/ (function(module, exports) {

module.exports = "<table class=\"fieldSelector\">\n  <thead>\n    <tr><th class=\"field-selector-mode\"><i></i></th><th class=\"field-selector-label\"></th></tr>\n  </thead>\n  <tbody class=\"fields\"></tbody>\n</table>\n";

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = undefined;
exports.extend = extend;

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_FIELD_STATE = {
  range: [0, 1],
  active: false
};

var PROVIDER_NAME = 'FieldProvider';

// ----------------------------------------------------------------------------
// Field Provider
// ----------------------------------------------------------------------------

function fieldProvider(publicAPI, model) {
  if (!model.fields) {
    model.fields = {};
  }

  var triggerFieldChange = function triggerFieldChange(field) {
    if (publicAPI.isA('PersistentStateProvider')) {
      publicAPI.setPersistentState(PROVIDER_NAME, model.fields);
    }
    publicAPI.fireFieldChange(field);
  };

  publicAPI.loadFieldsFromState = function () {
    var count = 0;
    if (publicAPI.isA('PersistentStateProvider')) {
      var storageItems = publicAPI.getPersistentState(PROVIDER_NAME);
      Object.keys(storageItems).forEach(function (storeKey) {
        publicAPI.updateField(storeKey, storageItems[storeKey]);
        count += 1;
      });
    }
    return count;
  };

  publicAPI.getFieldNames = function () {
    var val = Object.keys(model.fields);
    if (model.fieldsSorted) val.sort();
    return val;
  };

  publicAPI.getActiveFieldNames = function () {
    var val = Object.keys(model.fields).filter(function (name) {
      return model.fields[name].active;
    });
    if (model.fieldsSorted) val.sort();
    return val;
  };

  publicAPI.addField = function (name) {
    var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var field = Object.assign({}, DEFAULT_FIELD_STATE, initialState, {
      name: name
    });
    field.range = [].concat(field.range); // Make sure we copy the array
    model.fields[name] = field;
    triggerFieldChange(field);
  };

  publicAPI.removeField = function (name) {
    delete model.fields[name];
    triggerFieldChange();
  };

  publicAPI.getField = function (name) {
    return model.fields[name];
  };

  publicAPI.updateField = function (name) {
    var changeSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var field = model.fields[name] || {};
    var hasChange = false;

    Object.keys(changeSet).forEach(function (key) {
      hasChange = hasChange || JSON.stringify(field[key]) !== JSON.stringify(changeSet[key]);
      // Set changes
      field[key] = changeSet[key];
    });

    if (hasChange) {
      field.name = name; // Just in case
      model.fields[name] = field;
      triggerFieldChange(field);
    }
  };

  publicAPI.toggleFieldSelection = function (name) {
    model.fields[name].active = !model.fields[name].active;
    triggerFieldChange(model.fields[name]);
  };

  publicAPI.removeAllFields = function () {
    model.fields = {};
    triggerFieldChange();
  };
}

// ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------

var DEFAULT_VALUES = {
  fields: null,
  fieldsSorted: true
};

// ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, DEFAULT_VALUES, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, PROVIDER_NAME);
  _CompositeClosureHelper2.default.event(publicAPI, model, 'FieldChange');
  _CompositeClosureHelper2.default.get(publicAPI, model, ['fieldsSorted']);
  _CompositeClosureHelper2.default.set(publicAPI, model, ['fieldsSorted']);

  fieldProvider(publicAPI, model);
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = { newInstance: newInstance, extend: extend };

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = undefined;
exports.extend = extend;

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ----------------------------------------------------------------------------
// Histogram 1D Provider
// ----------------------------------------------------------------------------

/*
  Data Format: Below is an example of the expected histogram 1D data format

  {
    "name": "points per game",
    "min": 0,
    "max": 32,
    "counts": [10, 4, 0, 0, 13, ... ]
  }
*/

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, 'Histogram1DProvider');
  _CompositeClosureHelper2.default.dataSubscriber(publicAPI, model, 'histogram1D', {
    defaultMetadata: {
      numberOfBins: 32,
      partial: true
    },
    set: function set(storage, data) {
      var numberOfBins = data.counts.length;
      if (!storage[numberOfBins]) {
        storage[numberOfBins] = {};
      }
      var binStorage = storage[numberOfBins];

      // Ensure that empty range histogram to only fill the first bin
      if (data.min === data.max) {
        var totalCount = data.counts.reduce(function (a, b) {
          return a + b;
        }, 0);
        data.counts = data.counts.map(function (v, i) {
          return i ? 0 : totalCount;
        });
      }

      var sameAsBefore = JSON.stringify(data) === JSON.stringify(binStorage[data.name]);
      binStorage[data.name] = data;

      return sameAsBefore;
    },
    get: function get(storage, request, dataChanged) {
      var numberOfBins = request.metadata.numberOfBins;

      var binStorage = storage[numberOfBins];
      var returnedData = {};
      var count = 0;
      request.variables.forEach(function (name) {
        if (binStorage && binStorage[name]) {
          count += 1;
          returnedData[name] = binStorage[name];
        }
      });
      if (count === request.variables.length || request.metadata.partial && count > 0) {
        return returnedData;
      }
      return null;
    }
  });
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = { newInstance: newInstance, extend: extend };

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = undefined;
exports.extend = extend;

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ----------------------------------------------------------------------------
// Expected Data Format for Histogram2D
// ----------------------------------------------------------------------------
//
// {
//   "x": {
//     delta: 3.5,
//     extent: [0, 35],
//     name: "Name of X",
//   },
//   "y": {
//     delta: 1,
//     extent: [0, 10],
//     name: "Name of Y",
//   },
//   "bins": [
//     { x: 3.5, y: 5, count: 46 }, ...
//   ],
//   "maxCount": 11, // computed after data is received
//   "numberOfBins": 32,
// }
//
// ----------------------------------------------------------------------------

// ----------------------------------------------------------------------------
// Global
// ----------------------------------------------------------------------------

function flipHistogram(histo2d) {
  var newHisto2d = {
    bins: histo2d.bins.map(function (bin) {
      var x = bin.x,
          y = bin.y,
          count = bin.count;

      return {
        x: y,
        y: x,
        count: count
      };
    }),
    x: histo2d.y,
    y: histo2d.x,
    maxCount: histo2d.maxCount,
    numberOfBins: histo2d.numberOfBins
  };

  return newHisto2d;
}

// ----------------------------------------------------------------------------
// Histogram 2D Provider
// ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, 'Histogram2DProvider');
  _CompositeClosureHelper2.default.dataSubscriber(publicAPI, model, 'histogram2D', {
    defaultMetadata: {
      numberOfBins: 32,
      partial: true
    },
    set: function set(storage, data) {
      var binSize = data.numberOfBins || 'default';
      if (!storage[binSize]) {
        storage[binSize] = {};
      }
      var binStorage = storage[binSize];
      if (!binStorage[data.x.name]) {
        binStorage[data.x.name] = {};
      }
      if (!binStorage[data.y.name]) {
        binStorage[data.y.name] = {};
      }

      // Add maxCount
      var maxCount = 0;
      data.bins.forEach(function (item) {
        maxCount = maxCount < item.count ? item.count : maxCount;
      });
      data.maxCount = maxCount;

      var cleanedData = Object.assign({}, data, { annotationInfo: [] });
      var previousData = binStorage[data.x.name][data.y.name];

      var sameAsBefore = JSON.stringify(cleanedData) === JSON.stringify(previousData);

      binStorage[data.x.name][data.y.name] = cleanedData;
      binStorage[data.y.name][data.x.name] = flipHistogram(cleanedData);

      return sameAsBefore;
    },
    get: function get(storage, request, dataChanged) {
      var returnedData = {};
      var count = 0;
      var maxCount = 0;
      var numberOfBins = request.metadata.numberOfBins;

      var binStorage = storage[numberOfBins];
      var rangeConsistency = {};
      request.variables.forEach(function (axisPair) {
        if (!returnedData[axisPair[0]]) {
          returnedData[axisPair[0]] = {};
        }
        if (binStorage && binStorage[axisPair[0]] && binStorage[axisPair[0]][axisPair[1]]) {
          var hist2d = binStorage[axisPair[0]][axisPair[1]];

          // Look for range consistency within data
          if (hist2d.x.name && hist2d.y.name) {
            if (!rangeConsistency[hist2d.x.name]) {
              rangeConsistency[hist2d.x.name] = [];
            }
            rangeConsistency[hist2d.x.name].push(JSON.stringify(hist2d.x.extent));
            if (!rangeConsistency[hist2d.y.name]) {
              rangeConsistency[hist2d.y.name] = [];
            }
            rangeConsistency[hist2d.y.name].push(JSON.stringify(hist2d.y.extent));
          }
          count += 1;
          maxCount = maxCount < hist2d.maxCount ? hist2d.maxCount : maxCount;
          returnedData[axisPair[0]][axisPair[1]] = hist2d;
          if (request.metadata.symmetric) {
            if (!returnedData[axisPair[1]]) {
              returnedData[axisPair[1]] = {};
            }
            returnedData[axisPair[1]][axisPair[0]] = binStorage[axisPair[1]][axisPair[0]];
          }
        }
      });

      // Attach global maxCount
      returnedData.maxCount = maxCount;

      if (count === request.variables.length || request.metadata.partial && count > 0) {
        // Chech consistency
        var skip = false;
        Object.keys(rangeConsistency).forEach(function (name) {
          var values = rangeConsistency[name];
          values.sort();
          if (values.length > 1) {
            var a = values.pop();
            var b = values.shift();
            if (a !== b) {
              skip = true;
            }
          }
        });

        return skip ? null : returnedData;
      }

      return null;
    }
  });
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = { newInstance: newInstance, extend: extend };

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = exports.STATIC = undefined;
exports.createSortedIterator = createSortedIterator;
exports.extend = extend;

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

var _shapes = __webpack_require__(48);

var _shapes2 = _interopRequireDefault(_shapes);

var _ColorPalettes = __webpack_require__(58);

var _ColorPalettes2 = _interopRequireDefault(_ColorPalettes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ----------------------------------------------------------------------------
// Global
// ----------------------------------------------------------------------------

function convert(item, model) {
  var result = { color: item.colors };
  result.shape = model.legendShapes[item.shapes];
  return result;
}

function createSortedIterator(priorityOrder, propertyChoices, defaultValues) {
  var propertyKeys = Object.keys(propertyChoices);

  var prioritySizes = priorityOrder.map(function (name) {
    return propertyChoices[name].length;
  });
  var priorityIndex = prioritySizes.map(function (i) {
    return 0;
  });

  var get = function get() {
    var item = {};
    propertyKeys.forEach(function (name) {
      var idx = priorityOrder.indexOf(name);
      if (idx === -1) {
        item[name] = defaultValues[name];
      } else {
        item[name] = propertyChoices[name][priorityIndex[idx]];
      }
    });
    return item;
  };

  var next = function next() {
    var overflowIdx = 0;
    priorityIndex[overflowIdx] += 1;
    while (priorityIndex[overflowIdx] === prioritySizes[overflowIdx]) {
      // Handle overflow
      priorityIndex[overflowIdx] = 0;
      if (overflowIdx < priorityIndex.length) {
        overflowIdx += 1;
        priorityIndex[overflowIdx] += 1;
      }
    }
  };

  return { get: get, next: next };
}

// ----------------------------------------------------------------------------
// Static API
// ----------------------------------------------------------------------------

var STATIC = exports.STATIC = {
  shapes: _shapes2.default,
  palettes: _ColorPalettes2.default
};

// ----------------------------------------------------------------------------
// Legend Provider
// ----------------------------------------------------------------------------

function legendProvider(publicAPI, model) {
  publicAPI.addLegendEntry = function (name) {
    if (model.legendEntries.indexOf(name) === -1 && name) {
      model.legendEntries.push(name);
      model.legendDirty = true;
    }
  };

  publicAPI.removeLegendEntry = function (name) {
    if (model.legendEntries.indexOf(name) !== -1 && name) {
      model.legendEntries.splice(model.legendEntries.indexOf(name), 1);
      model.legendDirty = true;
    }
  };
  publicAPI.removeAllLegendEntry = function () {
    model.legendEntries = [];
    model.legendDirty = true;
  };

  publicAPI.assignLegend = function () {
    var newPriority = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    if (newPriority) {
      model.legendPriorities = newPriority;
      model.legendDirty = true;
    }
    if (model.legendDirty) {
      var shapesArray = Object.keys(model.legendShapes);
      model.legendDirty = false;
      model.legendMapping = {};

      if (model.legendPriorities && model.legendPriorities.length) {
        var defaultColor = model.legendColors[0];
        var defaultShape = shapesArray[0];

        var iterator = createSortedIterator(model.legendPriorities, { colors: model.legendColors, shapes: shapesArray }, { colors: defaultColor, shapes: defaultShape });

        model.legendEntries.forEach(function (name) {
          model.legendMapping[name] = convert(iterator.get(), model);
          iterator.next();
        });
      } else {
        model.legendEntries.forEach(function (name, idx) {
          model.legendMapping[name] = {
            color: model.legendColors[idx % model.legendColors.length],
            shape: model.legendShapes[shapesArray[idx % shapesArray.length]]
          };
        });
      }
    }
  };

  publicAPI.useLegendPalette = function (name) {
    var colorSet = _ColorPalettes2.default[name];
    if (colorSet) {
      model.legendColors = [].concat(colorSet);
      model.legendDirty = true;
    }
  };

  publicAPI.updateLegendSettings = function (settings) {
    ['legendShapes', 'legendColors', 'legendEntries', 'legendPriorities'].forEach(function (key) {
      if (settings[key]) {
        model[key] = [].concat(settings.key);
        model.legendDirty = true;
      }
    });
  };

  publicAPI.listLegendColorPalettes = function () {
    return Object.keys(_ColorPalettes2.default);
  };

  publicAPI.getLegend = function (name) {
    if (model.legendDirty) {
      publicAPI.assignLegend();
    }
    return model.legendMapping[name];
  };
}

// ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------

var DEFAULT_VALUES = {
  legendShapes: _shapes2.default,
  legendColors: [].concat(_ColorPalettes2.default.Paired),
  legendEntries: [],
  legendPriorities: ['shapes', 'colors'],
  legendMapping: {},
  legendDirty: true
};

// ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, DEFAULT_VALUES, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, 'LegendProvider');

  legendProvider(publicAPI, model);
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = Object.assign({ newInstance: newInstance, extend: extend }, STATIC);

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Circle = __webpack_require__(49);

var _Circle2 = _interopRequireDefault(_Circle);

var _Square = __webpack_require__(50);

var _Square2 = _interopRequireDefault(_Square);

var _Triangle = __webpack_require__(51);

var _Triangle2 = _interopRequireDefault(_Triangle);

var _Diamond = __webpack_require__(52);

var _Diamond2 = _interopRequireDefault(_Diamond);

var _X = __webpack_require__(53);

var _X2 = _interopRequireDefault(_X);

var _Pentagon = __webpack_require__(54);

var _Pentagon2 = _interopRequireDefault(_Pentagon);

var _InvertedTriangle = __webpack_require__(55);

var _InvertedTriangle2 = _interopRequireDefault(_InvertedTriangle);

var _Star = __webpack_require__(56);

var _Star2 = _interopRequireDefault(_Star);

var _Plus = __webpack_require__(57);

var _Plus2 = _interopRequireDefault(_Plus);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  Circle: _Circle2.default,
  Square: _Square2.default,
  Triangle: _Triangle2.default,
  Diamond: _Diamond2.default,
  X: _X2.default,
  Pentagon: _Pentagon2.default,
  InvertedTriangle: _InvertedTriangle2.default,
  Star: _Star2.default,
  Plus: _Plus2.default
};

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Circle",
  "use": "Circle-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Circle\">\n<g>\n  <circle cx=\"7.5\" cy=\"7.5\" r=\"6\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Square",
  "use": "Square-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Square\">\n<g>\n  <rect x=\"2\" y=\"2\" width=\"12\" height=\"12\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Triangle",
  "use": "Triangle-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Triangle\">\n<g>\n  <polygon points=\"7.5,1 14,14 1,14\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Diamond",
  "use": "Diamond-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Diamond\">\n<g>\n  <polygon points=\"1,7.5 7.5,1 14,7.5 7.5,14\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "X",
  "use": "X-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"X\">\n<g>\n  <polygon points=\"4.0,1.0 7.5,4.5 11.0,1.0 14.0,4.0 10.5,7.5 14.0,11.0 11.0,14.0 7.5,10.5 4.0,14.0 1.0,11.0 4.5,7.5 1.0,4.0\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Pentagon",
  "use": "Pentagon-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Pentagon\">\n<g>\n  <polygon points=\"11.03,12.35 13.21,5.65 7.50,1.50 1.79,5.65 3.97,12.35\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "InvertedTriangle",
  "use": "InvertedTriangle-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"InvertedTriangle\">\n<g>\n  <polygon points=\"1,1 14,1 7.5,14\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Star",
  "use": "Star-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Star\">\n<g>\n  <polygon points=\"11.03,12.35 9.78,8.24 13.21,5.65 8.91,5.56 7.50,1.50 6.09,5.56 1.79,5.65 5.22,8.24 3.97,12.35 7.50,9.90\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build__);


var symbol = new __WEBPACK_IMPORTED_MODULE_0_svg_baker_runtime_browser_symbol___default.a({
  "id": "Plus",
  "use": "Plus-usage",
  "viewBox": "0 0 15 15",
  "content": "<symbol viewBox=\"0 0 15 15\" id=\"Plus\">\n<g>\n  <polygon points=\"5.5,1.0 9.5,1.0 9.5,5.5 14.0,5.5 14.0,9.5 9.5,9.5 9.5,14.0 5.5,14.0 5.5,9.5 1,9.5 1,5.5 5.5,5.5\" />\n</g>\n</symbol>"
});
var result = __WEBPACK_IMPORTED_MODULE_1_svg_sprite_loader_runtime_browser_sprite_build___default.a.add(symbol);
/* harmony default export */ __webpack_exports__["default"] = ("#" + symbol.id);

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var YlGn = ['rgb(255, 255, 229)', 'rgb(247, 252, 185)', 'rgb(217, 240, 163)', 'rgb(173, 221, 142)', 'rgb(120, 198, 121)', 'rgb(65, 171, 93)', 'rgb(35, 132, 67)', 'rgb(0, 104, 55)', 'rgb(0, 69, 41)'];

var YlGnBu = ['rgb(255, 255, 217)', 'rgb(237, 248, 177)', 'rgb(199, 233, 180)', 'rgb(127, 205, 187)', 'rgb(65, 182, 196)', 'rgb(29, 145, 192)', 'rgb(34, 94, 168)', 'rgb(37, 52, 148)', 'rgb(8, 29, 88)'];

var GnBu = ['rgb(247, 252, 240)', 'rgb(224, 243, 219)', 'rgb(204, 235, 197)', 'rgb(168, 221, 181)', 'rgb(123, 204, 196)', 'rgb(78, 179, 211)', 'rgb(43, 140, 190)', 'rgb(8, 104, 172)', 'rgb(8, 64, 129)'];

var BuGn = ['rgb(247, 252, 253)', 'rgb(229, 245, 249)', 'rgb(204, 236, 230)', 'rgb(153, 216, 201)', 'rgb(102, 194, 164)', 'rgb(65, 174, 118)', 'rgb(35, 139, 69)', 'rgb(0, 109, 44)', 'rgb(0, 68, 27)'];

var PuBuGn = ['rgb(255, 247, 251)', 'rgb(236, 226, 240)', 'rgb(208, 209, 230)', 'rgb(166, 189, 219)', 'rgb(103, 169, 207)', 'rgb(54, 144, 192)', 'rgb(2, 129, 138)', 'rgb(1, 108, 89)', 'rgb(1, 70, 54)'];

var PuBu = ['rgb(255, 247, 251)', 'rgb(236, 231, 242)', 'rgb(208, 209, 230)', 'rgb(166, 189, 219)', 'rgb(116, 169, 207)', 'rgb(54, 144, 192)', 'rgb(5, 112, 176)', 'rgb(4, 90, 141)', 'rgb(2, 56, 88)'];

var BuPu = ['rgb(247, 252, 253)', 'rgb(224, 236, 244)', 'rgb(191, 211, 230)', 'rgb(158, 188, 218)', 'rgb(140, 150, 198)', 'rgb(140, 107, 177)', 'rgb(136, 65, 157)', 'rgb(129, 15, 124)', 'rgb(77, 0, 75)'];

var RdPu = ['rgb(255, 247, 243)', 'rgb(253, 224, 221)', 'rgb(252, 197, 192)', 'rgb(250, 159, 181)', 'rgb(247, 104, 161)', 'rgb(221, 52, 151)', 'rgb(174, 1, 126)', 'rgb(122, 1, 119)', 'rgb(73, 0, 106)'];

var PuRd = ['rgb(247, 244, 249)', 'rgb(231, 225, 239)', 'rgb(212, 185, 218)', 'rgb(201, 148, 199)', 'rgb(223, 101, 176)', 'rgb(231, 41, 138)', 'rgb(206, 18, 86)', 'rgb(152, 0, 67)', 'rgb(103, 0, 31)'];

var OrRd = ['rgb(255, 247, 236)', 'rgb(254, 232, 200)', 'rgb(253, 212, 158)', 'rgb(253, 187, 132)', 'rgb(252, 141, 89)', 'rgb(239, 101, 72)', 'rgb(215, 48, 31)', 'rgb(179, 0, 0)', 'rgb(127, 0, 0)'];

var YlOrRd = ['rgb(255, 255, 204)', 'rgb(255, 237, 160)', 'rgb(254, 217, 118)', 'rgb(254, 178, 76)', 'rgb(253, 141, 60)', 'rgb(252, 78, 42)', 'rgb(227, 26, 28)', 'rgb(189, 0, 38)', 'rgb(128, 0, 38)'];

var YlOrBr = ['rgb(255, 255, 229)', 'rgb(255, 247, 188)', 'rgb(254, 227, 145)', 'rgb(254, 196, 79)', 'rgb(254, 153, 41)', 'rgb(236, 112, 20)', 'rgb(204, 76, 2)', 'rgb(153, 52, 4)', 'rgb(102, 37, 6)'];

var Purples = ['rgb(252, 251, 253)', 'rgb(239, 237, 245)', 'rgb(218, 218, 235)', 'rgb(188, 189, 220)', 'rgb(158, 154, 200)', 'rgb(128, 125, 186)', 'rgb(106, 81, 163)', 'rgb(84, 39, 143)', 'rgb(63, 0, 125)'];

var Blues = ['rgb(247, 251, 255)', 'rgb(222, 235, 247)', 'rgb(198, 219, 239)', 'rgb(158, 202, 225)', 'rgb(107, 174, 214)', 'rgb(66, 146, 198)', 'rgb(33, 113, 181)', 'rgb(8, 81, 156)', 'rgb(8, 48, 107)'];

var Greens = ['rgb(247, 252, 245)', 'rgb(229, 245, 224)', 'rgb(199, 233, 192)', 'rgb(161, 217, 155)', 'rgb(116, 196, 118)', 'rgb(65, 171, 93)', 'rgb(35, 139, 69)', 'rgb(0, 109, 44)', 'rgb(0, 68, 27)'];

var Oranges = ['rgb(255, 245, 235)', 'rgb(254, 230, 206)', 'rgb(253, 208, 162)', 'rgb(253, 174, 107)', 'rgb(253, 141, 60)', 'rgb(241, 105, 19)', 'rgb(217, 72, 1)', 'rgb(166, 54, 3)', 'rgb(127, 39, 4)'];

var Reds = ['rgb(255, 245, 240)', 'rgb(254, 224, 210)', 'rgb(252, 187, 161)', 'rgb(252, 146, 114)', 'rgb(251, 106, 74)', 'rgb(239, 59, 44)', 'rgb(203, 24, 29)', 'rgb(165, 15, 21)', 'rgb(103, 0, 13)'];

var Greys = ['rgb(255, 255, 255)', 'rgb(240, 240, 240)', 'rgb(217, 217, 217)', 'rgb(189, 189, 189)', 'rgb(150, 150, 150)', 'rgb(115, 115, 115)', 'rgb(82, 82, 82)', 'rgb(37, 37, 37)', 'rgb(0, 0, 0)'];

var PuOr = ['rgb(127, 59, 8)', 'rgb(179, 88, 6)', 'rgb(224, 130, 20)', 'rgb(253, 184, 99)', 'rgb(254, 224, 182)', 'rgb(247, 247, 247)', 'rgb(216, 218, 235)', 'rgb(178, 171, 210)', 'rgb(128, 115, 172)', 'rgb(84, 39, 136)', 'rgb(45, 0, 75)'];

var BrBG = ['rgb(84, 48, 5)', 'rgb(140, 81, 10)', 'rgb(191, 129, 45)', 'rgb(223, 194, 125)', 'rgb(246, 232, 195)', 'rgb(245, 245, 245)', 'rgb(199, 234, 229)', 'rgb(128, 205, 193)', 'rgb(53, 151, 143)', 'rgb(1, 102, 94)', 'rgb(0, 60, 48)'];

var PRGn = ['rgb(64, 0, 75)', 'rgb(118, 42, 131)', 'rgb(153, 112, 171)', 'rgb(194, 165, 207)', 'rgb(231, 212, 232)', 'rgb(247, 247, 247)', 'rgb(217, 240, 211)', 'rgb(166, 219, 160)', 'rgb(90, 174, 97)', 'rgb(27, 120, 55)', 'rgb(0, 68, 27)'];

var PiYG = ['rgb(142, 1, 82)', 'rgb(197, 27, 125)', 'rgb(222, 119, 174)', 'rgb(241, 182, 218)', 'rgb(253, 224, 239)', 'rgb(247, 247, 247)', 'rgb(230, 245, 208)', 'rgb(184, 225, 134)', 'rgb(127, 188, 65)', 'rgb(77, 146, 33)', 'rgb(39, 100, 25)'];

var RdBu = ['rgb(103, 0, 31)', 'rgb(178, 24, 43)', 'rgb(214, 96, 77)', 'rgb(244, 165, 130)', 'rgb(253, 219, 199)', 'rgb(247, 247, 247)', 'rgb(209, 229, 240)', 'rgb(146, 197, 222)', 'rgb(67, 147, 195)', 'rgb(33, 102, 172)', 'rgb(5, 48, 97)'];

var RdGy = ['rgb(103, 0, 31)', 'rgb(178, 24, 43)', 'rgb(214, 96, 77)', 'rgb(244, 165, 130)', 'rgb(253, 219, 199)', 'rgb(255, 255, 255)', 'rgb(224, 224, 224)', 'rgb(186, 186, 186)', 'rgb(135, 135, 135)', 'rgb(77, 77, 77)', 'rgb(26, 26, 26)'];

var RdYlBu = ['rgb(165, 0, 38)', 'rgb(215, 48, 39)', 'rgb(244, 109, 67)', 'rgb(253, 174, 97)', 'rgb(254, 224, 144)', 'rgb(255, 255, 191)', 'rgb(224, 243, 248)', 'rgb(171, 217, 233)', 'rgb(116, 173, 209)', 'rgb(69, 117, 180)', 'rgb(49, 54, 149)'];

var Spectral = ['rgb(158, 1, 66)', 'rgb(213, 62, 79)', 'rgb(244, 109, 67)', 'rgb(253, 174, 97)', 'rgb(254, 224, 139)', 'rgb(255, 255, 191)', 'rgb(230, 245, 152)', 'rgb(171, 221, 164)', 'rgb(102, 194, 165)', 'rgb(50, 136, 189)', 'rgb(94, 79, 162)'];

var RdYlGn = ['rgb(165, 0, 38)', 'rgb(215, 48, 39)', 'rgb(244, 109, 67)', 'rgb(253, 174, 97)', 'rgb(254, 224, 139)', 'rgb(255, 255, 191)', 'rgb(217, 239, 139)', 'rgb(166, 217, 106)', 'rgb(102, 189, 99)', 'rgb(26, 152, 80)', 'rgb(0, 104, 55)'];

var Accent = ['rgb(127, 201, 127)', 'rgb(190, 174, 212)', 'rgb(253, 192, 134)', 'rgb(255, 255, 153)', 'rgb(56, 108, 176)', 'rgb(240, 2, 127)', 'rgb(191, 91, 23)', 'rgb(102, 102, 102)'];

var Dark2 = ['rgb(27, 158, 119)', 'rgb(217, 95, 2)', 'rgb(117, 112, 179)', 'rgb(231, 41, 138)', 'rgb(102, 166, 30)', 'rgb(230, 171, 2)', 'rgb(166, 118, 29)', 'rgb(102, 102, 102)'];

var Paired = ['rgb(166, 206, 227)', 'rgb(31, 120, 180)', 'rgb(178, 223, 138)', 'rgb(51, 160, 44)', 'rgb(251, 154, 153)', 'rgb(227, 26, 28)', 'rgb(253, 191, 111)', 'rgb(255, 127, 0)', 'rgb(202, 178, 214)', 'rgb(106, 61, 154)', 'rgb(255, 255, 153)', 'rgb(177, 89, 40)'];

var Pastel1 = ['rgb(251, 180, 174)', 'rgb(179, 205, 227)', 'rgb(204, 235, 197)', 'rgb(222, 203, 228)', 'rgb(254, 217, 166)', 'rgb(255, 255, 204)', 'rgb(229, 216, 189)', 'rgb(253, 218, 236)', 'rgb(242, 242, 242)'];

var Pastel2 = ['rgb(179, 226, 205)', 'rgb(253, 205, 172)', 'rgb(203, 213, 232)', 'rgb(244, 202, 228)', 'rgb(230, 245, 201)', 'rgb(255, 242, 174)', 'rgb(241, 226, 204)', 'rgb(204, 204, 204)'];

var Set1 = ['rgb(228, 26, 28)', 'rgb(55, 126, 184)', 'rgb(77, 175, 74)', 'rgb(152, 78, 163)', 'rgb(255, 127, 0)', 'rgb(255, 255, 51)', 'rgb(166, 86, 40)', 'rgb(247, 129, 191)', 'rgb(153, 153, 153)'];

var Set2 = ['rgb(102, 194, 165)', 'rgb(252, 141, 98)', 'rgb(141, 160, 203)', 'rgb(231, 138, 195)', 'rgb(166, 216, 84)', 'rgb(255, 217, 47)', 'rgb(229, 196, 148)', 'rgb(179, 179, 179)'];

var Set3 = ['rgb(141, 211, 199)', 'rgb(255, 255, 179)', 'rgb(190, 186, 218)', 'rgb(251, 128, 114)', 'rgb(128, 177, 211)', 'rgb(253, 180, 98)', 'rgb(179, 222, 105)', 'rgb(252, 205, 229)', 'rgb(217, 217, 217)', 'rgb(188, 128, 189)', 'rgb(204, 235, 197)', 'rgb(255, 237, 111)'];

exports.default = {
  YlGn: YlGn,
  YlGnBu: YlGnBu,
  GnBu: GnBu,
  BuGn: BuGn,
  PuBuGn: PuBuGn,
  PuBu: PuBu,
  BuPu: BuPu,
  RdPu: RdPu,
  PuRd: PuRd,
  OrRd: OrRd,
  YlOrRd: YlOrRd,
  YlOrBr: YlOrBr,
  Purples: Purples,
  Blues: Blues,
  Greens: Greens,
  Oranges: Oranges,
  Reds: Reds,
  Greys: Greys,
  PuOr: PuOr,
  BrBG: BrBG,
  PRGn: PRGn,
  PiYG: PiYG,
  RdBu: RdBu,
  RdGy: RdGy,
  RdYlBu: RdYlBu,
  Spectral: Spectral,
  RdYlGn: RdYlGn,
  Accent: Accent,
  Dark2: Dark2,
  Paired: Paired,
  Pastel1: Pastel1,
  Pastel2: Pastel2,
  Set1: Set1,
  Set2: Set2,
  Set3: Set3
};

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.newInstance = undefined;
exports.extend = extend;

var _CompositeClosureHelper = __webpack_require__(3);

var _CompositeClosureHelper2 = _interopRequireDefault(_CompositeClosureHelper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// ----------------------------------------------------------------------------
// Histogram Bin Hover Provider
// ----------------------------------------------------------------------------

function histogramBinHoverProvider(publicAPI, model) {
  if (!model.hoverState) {
    model.hoverState = {};
  }

  publicAPI.setHoverState = function (hoverState) {
    model.hoverState = hoverState;
    publicAPI.fireHoverBinChange(model.hoverState);
  };
}

// ----------------------------------------------------------------------------
// Object factory
// ----------------------------------------------------------------------------

var DEFAULT_VALUES = {};

// ----------------------------------------------------------------------------

function extend(publicAPI, model) {
  var initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  Object.assign(model, DEFAULT_VALUES, initialValues);

  _CompositeClosureHelper2.default.destroy(publicAPI, model);
  _CompositeClosureHelper2.default.isA(publicAPI, model, 'HistogramBinHoverProvider');
  _CompositeClosureHelper2.default.event(publicAPI, model, 'HoverBinChange');

  histogramBinHoverProvider(publicAPI, model);
}

// ----------------------------------------------------------------------------

var newInstance = exports.newInstance = _CompositeClosureHelper2.default.newInstance(extend);

// ----------------------------------------------------------------------------

exports.default = { newInstance: newInstance, extend: extend };

/***/ }),
/* 60 */
/***/ (function(module, exports) {

module.exports = {"fields":{"percentage of team minutes":{"range":[7.2,79.5],"active":true,"id":12,"name":"percentage of team minutes"},"percentage of team assists":{"range":[0,49.2],"active":true,"id":11,"name":"percentage of team assists"},"steals per game":{"range":[0,2.480305],"active":true,"id":17,"name":"steals per game"},"minutes":{"range":[5.1,38.5],"active":true,"id":10,"name":"minutes"},"free throw percent":{"range":[0,1],"active":true,"id":8,"name":"free throw percent"}},"histogram1D_storage":{"32":{"percentage of team minutes":{"max":79.5,"counts":[4,11,18,24,21,23,17,16,19,17,22,14,15,20,23,18,9,13,12,14,12,15,20,16,15,20,20,13,16,13,4,6],"name":"percentage of team minutes","min":7.2},"percentage of team assists":{"max":49.2,"counts":[18,12,37,55,47,61,34,41,26,20,18,21,12,8,17,6,9,12,5,9,7,6,8,0,2,1,4,1,0,1,0,2],"name":"percentage of team assists","min":0},"steals per game":{"max":2.48,"counts":[26,26,33,27,51,32,51,30,34,31,25,22,24,16,9,13,10,7,4,6,6,5,3,3,3,1,0,0,0,1,0,1],"name":"steals per game","min":0},"minutes":{"max":38.5,"counts":[14,22,20,26,20,15,14,15,19,21,19,12,15,27,19,11,9,8,18,12,16,16,13,15,15,23,16,12,16,13,3,6],"name":"minutes","min":5.1000000000000005},"free throw percent":{"max":1,"counts":[18,0,0,0,0,1,1,0,2,0,3,1,3,4,2,3,21,11,20,13,32,31,32,37,61,58,62,37,17,7,7,16],"name":"free throw percent","min":0}}},"histogram2D_storage":{"32":{"versatility index":{"rebounds pergame":{"y":{"name":"rebounds pergame","extent":[0,13.600000000000001],"delta":0.42500000000000004},"x":{"name":"versatility index","extent":[0,12.600000000000001],"delta":0.39375000000000004},"bins":[{"y":0,"x":0,"count":1},{"y":0,"x":4.331250000000001,"count":1},{"y":0,"x":5.11875,"count":1},{"y":0.42500000000000004,"x":0,"count":3},{"y":0.42500000000000004,"x":2.3625000000000003,"count":1},{"y":0.42500000000000004,"x":3.1500000000000004,"count":2},{"y":0.42500000000000004,"x":3.54375,"count":1},{"y":0.42500000000000004,"x":3.9375000000000004,"count":2},{"y":0.42500000000000004,"x":4.331250000000001,"count":4},{"y":0.42500000000000004,"x":4.7250000000000005,"count":4},{"y":0.42500000000000004,"x":5.11875,"count":1},{"y":0.42500000000000004,"x":5.512500000000001,"count":3},{"y":0.42500000000000004,"x":5.906250000000001,"count":1},{"y":0.42500000000000004,"x":6.300000000000001,"count":1},{"y":0.42500000000000004,"x":6.6937500000000005,"count":1},{"y":0.42500000000000004,"x":8.662500000000001,"count":1},{"y":0.8500000000000001,"x":0,"count":4},{"y":0.8500000000000001,"x":2.7562500000000005,"count":1},{"y":0.8500000000000001,"x":3.1500000000000004,"count":1},{"y":0.8500000000000001,"x":3.54375,"count":2},{"y":0.8500000000000001,"x":3.9375000000000004,"count":3},{"y":0.8500000000000001,"x":4.331250000000001,"count":3},{"y":0.8500000000000001,"x":4.7250000000000005,"count":5},{"y":0.8500000000000001,"x":5.11875,"count":1},{"y":0.8500000000000001,"x":5.512500000000001,"count":4},{"y":0.8500000000000001,"x":5.906250000000001,"count":4},{"y":0.8500000000000001,"x":6.300000000000001,"count":1},{"y":0.8500000000000001,"x":6.6937500000000005,"count":5},{"y":0.8500000000000001,"x":7.0875,"count":1},{"y":0.8500000000000001,"x":7.481250000000001,"count":3},{"y":0.8500000000000001,"x":8.26875,"count":1},{"y":1.2750000000000001,"x":0,"count":2},{"y":1.2750000000000001,"x":2.7562500000000005,"count":1},{"y":1.2750000000000001,"x":3.54375,"count":3},{"y":1.2750000000000001,"x":3.9375000000000004,"count":1},{"y":1.2750000000000001,"x":4.331250000000001,"count":6},{"y":1.2750000000000001,"x":4.7250000000000005,"count":5},{"y":1.2750000000000001,"x":5.11875,"count":2},{"y":1.2750000000000001,"x":5.512500000000001,"count":8},{"y":1.2750000000000001,"x":5.906250000000001,"count":3},{"y":1.2750000000000001,"x":6.300000000000001,"count":3},{"y":1.2750000000000001,"x":6.6937500000000005,"count":3},{"y":1.2750000000000001,"x":8.26875,"count":1},{"y":1.7000000000000002,"x":0,"count":1},{"y":1.7000000000000002,"x":3.54375,"count":2},{"y":1.7000000000000002,"x":3.9375000000000004,"count":1},{"y":1.7000000000000002,"x":4.331250000000001,"count":2},{"y":1.7000000000000002,"x":4.7250000000000005,"count":6},{"y":1.7000000000000002,"x":5.11875,"count":8},{"y":1.7000000000000002,"x":5.512500000000001,"count":6},{"y":1.7000000000000002,"x":5.906250000000001,"count":10},{"y":1.7000000000000002,"x":6.300000000000001,"count":2},{"y":1.7000000000000002,"x":6.6937500000000005,"count":3},{"y":1.7000000000000002,"x":7.0875,"count":11},{"y":1.7000000000000002,"x":7.481250000000001,"count":2},{"y":1.7000000000000002,"x":7.875000000000001,"count":2},{"y":1.7000000000000002,"x":8.26875,"count":3},{"y":2.125,"x":0,"count":2},{"y":2.125,"x":2.7562500000000005,"count":1},{"y":2.125,"x":3.54375,"count":3},{"y":2.125,"x":3.9375000000000004,"count":1},{"y":2.125,"x":4.331250000000001,"count":3},{"y":2.125,"x":4.7250000000000005,"count":9},{"y":2.125,"x":5.11875,"count":2},{"y":2.125,"x":5.512500000000001,"count":3},{"y":2.125,"x":5.906250000000001,"count":5},{"y":2.125,"x":6.300000000000001,"count":2},{"y":2.125,"x":6.6937500000000005,"count":4},{"y":2.125,"x":7.0875,"count":3},{"y":2.125,"x":7.481250000000001,"count":2},{"y":2.125,"x":7.875000000000001,"count":1},{"y":2.125,"x":8.26875,"count":1},{"y":2.125,"x":8.662500000000001,"count":1},{"y":2.5500000000000003,"x":0,"count":2},{"y":2.5500000000000003,"x":2.7562500000000005,"count":1},{"y":2.5500000000000003,"x":4.331250000000001,"count":6},{"y":2.5500000000000003,"x":4.7250000000000005,"count":3},{"y":2.5500000000000003,"x":5.11875,"count":5},{"y":2.5500000000000003,"x":5.512500000000001,"count":2},{"y":2.5500000000000003,"x":5.906250000000001,"count":6},{"y":2.5500000000000003,"x":6.300000000000001,"count":4},{"y":2.5500000000000003,"x":6.6937500000000005,"count":7},{"y":2.5500000000000003,"x":7.0875,"count":1},{"y":2.5500000000000003,"x":7.481250000000001,"count":3},{"y":2.5500000000000003,"x":7.875000000000001,"count":3},{"y":2.5500000000000003,"x":8.26875,"count":1},{"y":2.9750000000000005,"x":3.54375,"count":1},{"y":2.9750000000000005,"x":4.331250000000001,"count":2},{"y":2.9750000000000005,"x":4.7250000000000005,"count":7},{"y":2.9750000000000005,"x":5.11875,"count":1},{"y":2.9750000000000005,"x":5.512500000000001,"count":2},{"y":2.9750000000000005,"x":5.906250000000001,"count":6},{"y":2.9750000000000005,"x":6.300000000000001,"count":1},{"y":2.9750000000000005,"x":6.6937500000000005,"count":2},{"y":2.9750000000000005,"x":7.0875,"count":5},{"y":2.9750000000000005,"x":7.481250000000001,"count":3},{"y":2.9750000000000005,"x":7.875000000000001,"count":2},{"y":2.9750000000000005,"x":8.26875,"count":2},{"y":2.9750000000000005,"x":9.450000000000001,"count":1},{"y":3.4000000000000004,"x":3.9375000000000004,"count":2},{"y":3.4000000000000004,"x":4.331250000000001,"count":4},{"y":3.4000000000000004,"x":4.7250000000000005,"count":2},{"y":3.4000000000000004,"x":5.11875,"count":3},{"y":3.4000000000000004,"x":5.512500000000001,"count":7},{"y":3.4000000000000004,"x":5.906250000000001,"count":5},{"y":3.4000000000000004,"x":6.300000000000001,"count":6},{"y":3.4000000000000004,"x":6.6937500000000005,"count":6},{"y":3.4000000000000004,"x":7.0875,"count":1},{"y":3.4000000000000004,"x":7.875000000000001,"count":4},{"y":3.4000000000000004,"x":8.26875,"count":2},{"y":3.4000000000000004,"x":8.662500000000001,"count":1},{"y":3.4000000000000004,"x":9.05625,"count":1},{"y":3.825,"x":4.331250000000001,"count":1},{"y":3.825,"x":5.11875,"count":3},{"y":3.825,"x":5.512500000000001,"count":2},{"y":3.825,"x":5.906250000000001,"count":5},{"y":3.825,"x":6.300000000000001,"count":2},{"y":3.825,"x":6.6937500000000005,"count":1},{"y":3.825,"x":7.0875,"count":1},{"y":3.825,"x":7.481250000000001,"count":1},{"y":3.825,"x":7.875000000000001,"count":1},{"y":3.825,"x":8.26875,"count":2},{"y":3.825,"x":8.662500000000001,"count":1},{"y":3.825,"x":9.05625,"count":1},{"y":3.825,"x":9.450000000000001,"count":1},{"y":4.25,"x":4.7250000000000005,"count":3},{"y":4.25,"x":5.512500000000001,"count":1},{"y":4.25,"x":5.906250000000001,"count":2},{"y":4.25,"x":6.300000000000001,"count":1},{"y":4.25,"x":6.6937500000000005,"count":2},{"y":4.25,"x":7.0875,"count":2},{"y":4.25,"x":7.481250000000001,"count":2},{"y":4.25,"x":8.662500000000001,"count":1},{"y":4.25,"x":9.450000000000001,"count":1},{"y":4.25,"x":10.2375,"count":1},{"y":4.25,"x":10.631250000000001,"count":1},{"y":4.675000000000001,"x":0,"count":1},{"y":4.675000000000001,"x":3.1500000000000004,"count":2},{"y":4.675000000000001,"x":3.9375000000000004,"count":1},{"y":4.675000000000001,"x":5.11875,"count":2},{"y":4.675000000000001,"x":5.512500000000001,"count":1},{"y":4.675000000000001,"x":5.906250000000001,"count":3},{"y":4.675000000000001,"x":6.300000000000001,"count":1},{"y":4.675000000000001,"x":6.6937500000000005,"count":1},{"y":4.675000000000001,"x":7.0875,"count":2},{"y":4.675000000000001,"x":7.481250000000001,"count":3},{"y":4.675000000000001,"x":9.05625,"count":1},{"y":4.675000000000001,"x":9.450000000000001,"count":2},{"y":4.675000000000001,"x":9.843750000000002,"count":1},{"y":5.1000000000000005,"x":4.331250000000001,"count":1},{"y":5.1000000000000005,"x":5.11875,"count":1},{"y":5.1000000000000005,"x":5.512500000000001,"count":2},{"y":5.1000000000000005,"x":5.906250000000001,"count":5},{"y":5.1000000000000005,"x":6.6937500000000005,"count":3},{"y":5.1000000000000005,"x":7.0875,"count":2},{"y":5.1000000000000005,"x":7.481250000000001,"count":2},{"y":5.1000000000000005,"x":7.875000000000001,"count":2},{"y":5.1000000000000005,"x":8.26875,"count":3},{"y":5.1000000000000005,"x":10.2375,"count":1},{"y":5.525,"x":5.11875,"count":2},{"y":5.525,"x":5.512500000000001,"count":1},{"y":5.525,"x":5.906250000000001,"count":1},{"y":5.525,"x":7.481250000000001,"count":1},{"y":5.525,"x":9.450000000000001,"count":1},{"y":5.525,"x":12.20625,"count":1},{"y":5.950000000000001,"x":5.906250000000001,"count":2},{"y":5.950000000000001,"x":6.300000000000001,"count":1},{"y":5.950000000000001,"x":6.6937500000000005,"count":2},{"y":5.950000000000001,"x":7.481250000000001,"count":1},{"y":5.950000000000001,"x":7.875000000000001,"count":3},{"y":5.950000000000001,"x":8.26875,"count":1},{"y":5.950000000000001,"x":8.662500000000001,"count":1},{"y":5.950000000000001,"x":9.843750000000002,"count":1},{"y":6.375000000000001,"x":4.7250000000000005,"count":1},{"y":6.375000000000001,"x":5.11875,"count":1},{"y":6.375000000000001,"x":5.512500000000001,"count":1},{"y":6.375000000000001,"x":5.906250000000001,"count":3},{"y":6.375000000000001,"x":6.300000000000001,"count":1},{"y":6.375000000000001,"x":6.6937500000000005,"count":1},{"y":6.375000000000001,"x":7.875000000000001,"count":1},{"y":6.800000000000001,"x":5.512500000000001,"count":2},{"y":6.800000000000001,"x":6.300000000000001,"count":1},{"y":6.800000000000001,"x":6.6937500000000005,"count":2},{"y":6.800000000000001,"x":7.481250000000001,"count":2},{"y":6.800000000000001,"x":7.875000000000001,"count":1},{"y":6.800000000000001,"x":8.26875,"count":2},{"y":6.800000000000001,"x":8.662500000000001,"count":3},{"y":6.800000000000001,"x":11.025000000000002,"count":1},{"y":7.2250000000000005,"x":6.300000000000001,"count":1},{"y":7.2250000000000005,"x":7.481250000000001,"count":2},{"y":7.2250000000000005,"x":8.662500000000001,"count":1},{"y":7.2250000000000005,"x":11.025000000000002,"count":1},{"y":7.65,"x":5.11875,"count":1},{"y":7.65,"x":5.906250000000001,"count":2},{"y":7.65,"x":7.0875,"count":1},{"y":7.65,"x":8.26875,"count":1},{"y":8.075000000000001,"x":7.875000000000001,"count":2},{"y":8.075000000000001,"x":8.662500000000001,"count":1},{"y":8.075000000000001,"x":9.05625,"count":1},{"y":8.5,"x":5.512500000000001,"count":2},{"y":8.5,"x":5.906250000000001,"count":1},{"y":8.5,"x":6.6937500000000005,"count":2},{"y":8.5,"x":7.481250000000001,"count":1},{"y":8.5,"x":9.05625,"count":2},{"y":8.925,"x":0,"count":1},{"y":8.925,"x":5.512500000000001,"count":1},{"y":8.925,"x":7.875000000000001,"count":2},{"y":8.925,"x":8.26875,"count":1},{"y":9.350000000000001,"x":5.906250000000001,"count":1},{"y":9.350000000000001,"x":7.0875,"count":1},{"y":9.350000000000001,"x":7.875000000000001,"count":1},{"y":9.350000000000001,"x":10.631250000000001,"count":3},{"y":9.775,"x":7.481250000000001,"count":1},{"y":9.775,"x":7.875000000000001,"count":1},{"y":9.775,"x":8.662500000000001,"count":1},{"y":9.775,"x":10.2375,"count":1},{"y":10.625000000000002,"x":8.26875,"count":1},{"y":10.625000000000002,"x":9.05625,"count":1},{"y":11.05,"x":9.450000000000001,"count":1},{"y":11.05,"x":10.2375,"count":1},{"y":11.475000000000001,"x":11.025000000000002,"count":1},{"y":11.900000000000002,"x":8.662500000000001,"count":1},{"y":12.325000000000001,"x":12.20625,"count":1},{"y":13.175,"x":5.11875,"count":1},{"y":13.175,"x":5.512500000000001,"count":1}],"maxCount":11}},"rebounds pergame":{"points per game":{"y":{"name":"points per game","extent":[0,32],"delta":1},"x":{"name":"rebounds pergame","extent":[0,13.600000000000001],"delta":0.42500000000000004},"bins":[{"y":0,"x":0.42500000000000004,"count":5},{"y":0,"x":0.8500000000000001,"count":2},{"y":0,"x":1.2750000000000001,"count":1},{"y":0,"x":2.5500000000000003,"count":1},{"y":1,"x":0.42500000000000004,"count":7},{"y":1,"x":0.8500000000000001,"count":6},{"y":1,"x":1.2750000000000001,"count":7},{"y":1,"x":1.7000000000000002,"count":3},{"y":1,"x":2.125,"count":4},{"y":1,"x":2.9750000000000005,"count":2},{"y":2,"x":0,"count":2},{"y":2,"x":0.42500000000000004,"count":6},{"y":2,"x":0.8500000000000001,"count":13},{"y":2,"x":1.2750000000000001,"count":9},{"y":2,"x":1.7000000000000002,"count":6},{"y":2,"x":2.125,"count":4},{"y":2,"x":2.5500000000000003,"count":4},{"y":2,"x":2.9750000000000005,"count":1},{"y":2,"x":3.4000000000000004,"count":4},{"y":2,"x":3.825,"count":1},{"y":2,"x":4.675000000000001,"count":2},{"y":2,"x":8.925,"count":1},{"y":3,"x":0,"count":1},{"y":3,"x":0.42500000000000004,"count":5},{"y":3,"x":0.8500000000000001,"count":10},{"y":3,"x":1.2750000000000001,"count":6},{"y":3,"x":1.7000000000000002,"count":9},{"y":3,"x":2.125,"count":8},{"y":3,"x":2.5500000000000003,"count":5},{"y":3,"x":2.9750000000000005,"count":1},{"y":3,"x":3.4000000000000004,"count":4},{"y":3,"x":3.825,"count":2},{"y":3,"x":4.25,"count":1},{"y":3,"x":4.675000000000001,"count":2},{"y":4,"x":0.42500000000000004,"count":1},{"y":4,"x":0.8500000000000001,"count":5},{"y":4,"x":1.2750000000000001,"count":5},{"y":4,"x":1.7000000000000002,"count":10},{"y":4,"x":2.125,"count":5},{"y":4,"x":2.5500000000000003,"count":5},{"y":4,"x":2.9750000000000005,"count":4},{"y":4,"x":3.4000000000000004,"count":3},{"y":4,"x":3.825,"count":1},{"y":4,"x":4.25,"count":2},{"y":4,"x":4.675000000000001,"count":3},{"y":4,"x":5.525,"count":1},{"y":5,"x":0.8500000000000001,"count":2},{"y":5,"x":1.2750000000000001,"count":5},{"y":5,"x":1.7000000000000002,"count":5},{"y":5,"x":2.125,"count":2},{"y":5,"x":2.5500000000000003,"count":3},{"y":5,"x":2.9750000000000005,"count":2},{"y":5,"x":3.4000000000000004,"count":3},{"y":5,"x":3.825,"count":2},{"y":5,"x":4.675000000000001,"count":2},{"y":5,"x":5.1000000000000005,"count":1},{"y":5,"x":7.65,"count":2},{"y":6,"x":0.8500000000000001,"count":1},{"y":6,"x":1.2750000000000001,"count":1},{"y":6,"x":1.7000000000000002,"count":7},{"y":6,"x":2.125,"count":5},{"y":6,"x":2.5500000000000003,"count":2},{"y":6,"x":2.9750000000000005,"count":5},{"y":6,"x":3.4000000000000004,"count":4},{"y":6,"x":3.825,"count":2},{"y":6,"x":4.25,"count":1},{"y":6,"x":4.675000000000001,"count":3},{"y":6,"x":5.1000000000000005,"count":4},{"y":6,"x":5.525,"count":1},{"y":6,"x":6.375000000000001,"count":1},{"y":6,"x":6.800000000000001,"count":1},{"y":7,"x":1.2750000000000001,"count":2},{"y":7,"x":1.7000000000000002,"count":3},{"y":7,"x":2.125,"count":3},{"y":7,"x":2.9750000000000005,"count":4},{"y":7,"x":3.4000000000000004,"count":1},{"y":7,"x":3.825,"count":1},{"y":7,"x":4.25,"count":1},{"y":7,"x":4.675000000000001,"count":1},{"y":7,"x":5.1000000000000005,"count":2},{"y":7,"x":5.950000000000001,"count":2},{"y":7,"x":6.375000000000001,"count":1},{"y":7,"x":6.800000000000001,"count":1},{"y":7,"x":9.775,"count":1},{"y":8,"x":0.42500000000000004,"count":1},{"y":8,"x":1.2750000000000001,"count":1},{"y":8,"x":1.7000000000000002,"count":4},{"y":8,"x":2.125,"count":3},{"y":8,"x":2.5500000000000003,"count":4},{"y":8,"x":2.9750000000000005,"count":1},{"y":8,"x":3.4000000000000004,"count":4},{"y":8,"x":4.25,"count":1},{"y":8,"x":4.675000000000001,"count":1},{"y":8,"x":5.1000000000000005,"count":3},{"y":8,"x":5.525,"count":1},{"y":8,"x":5.950000000000001,"count":1},{"y":8,"x":7.65,"count":1},{"y":8,"x":9.350000000000001,"count":2},{"y":9,"x":1.7000000000000002,"count":3},{"y":9,"x":2.125,"count":1},{"y":9,"x":2.5500000000000003,"count":5},{"y":9,"x":2.9750000000000005,"count":2},{"y":9,"x":3.4000000000000004,"count":5},{"y":9,"x":3.825,"count":4},{"y":9,"x":4.25,"count":3},{"y":9,"x":5.1000000000000005,"count":2},{"y":9,"x":5.525,"count":1},{"y":9,"x":6.375000000000001,"count":2},{"y":9,"x":7.2250000000000005,"count":1},{"y":10,"x":1.2750000000000001,"count":1},{"y":10,"x":1.7000000000000002,"count":6},{"y":10,"x":2.125,"count":1},{"y":10,"x":2.5500000000000003,"count":2},{"y":10,"x":2.9750000000000005,"count":1},{"y":10,"x":3.4000000000000004,"count":3},{"y":10,"x":5.525,"count":1},{"y":10,"x":6.375000000000001,"count":3},{"y":10,"x":7.65,"count":1},{"y":10,"x":13.175,"count":1},{"y":11,"x":1.7000000000000002,"count":1},{"y":11,"x":2.125,"count":3},{"y":11,"x":2.5500000000000003,"count":3},{"y":11,"x":3.4000000000000004,"count":1},{"y":11,"x":3.825,"count":1},{"y":11,"x":4.25,"count":1},{"y":11,"x":4.675000000000001,"count":1},{"y":11,"x":5.1000000000000005,"count":4},{"y":11,"x":5.525,"count":1},{"y":11,"x":5.950000000000001,"count":1},{"y":11,"x":6.800000000000001,"count":2},{"y":11,"x":8.5,"count":2},{"y":11,"x":8.925,"count":2},{"y":11,"x":9.350000000000001,"count":1},{"y":12,"x":2.5500000000000003,"count":3},{"y":12,"x":2.9750000000000005,"count":2},{"y":12,"x":3.4000000000000004,"count":2},{"y":12,"x":3.825,"count":1},{"y":12,"x":5.950000000000001,"count":2},{"y":12,"x":6.800000000000001,"count":1},{"y":12,"x":7.2250000000000005,"count":1},{"y":12,"x":11.05,"count":1},{"y":13,"x":2.125,"count":1},{"y":13,"x":2.5500000000000003,"count":1},{"y":13,"x":2.9750000000000005,"count":2},{"y":13,"x":3.825,"count":2},{"y":13,"x":4.25,"count":2},{"y":13,"x":4.675000000000001,"count":2},{"y":13,"x":5.1000000000000005,"count":1},{"y":13,"x":5.950000000000001,"count":1},{"y":13,"x":6.800000000000001,"count":2},{"y":13,"x":7.2250000000000005,"count":1},{"y":13,"x":7.65,"count":1},{"y":13,"x":8.075000000000001,"count":2},{"y":13,"x":8.5,"count":3},{"y":13,"x":9.350000000000001,"count":1},{"y":13,"x":13.175,"count":1},{"y":14,"x":1.7000000000000002,"count":1},{"y":14,"x":2.5500000000000003,"count":1},{"y":14,"x":2.9750000000000005,"count":1},{"y":14,"x":3.4000000000000004,"count":1},{"y":14,"x":3.825,"count":3},{"y":14,"x":4.675000000000001,"count":1},{"y":14,"x":5.1000000000000005,"count":2},{"y":14,"x":5.950000000000001,"count":1},{"y":14,"x":6.800000000000001,"count":3},{"y":14,"x":10.625000000000002,"count":1},{"y":15,"x":1.7000000000000002,"count":1},{"y":15,"x":2.125,"count":1},{"y":15,"x":2.5500000000000003,"count":2},{"y":15,"x":2.9750000000000005,"count":4},{"y":15,"x":3.4000000000000004,"count":1},{"y":15,"x":8.5,"count":1},{"y":15,"x":8.925,"count":1},{"y":15,"x":9.775,"count":1},{"y":16,"x":2.125,"count":1},{"y":16,"x":2.5500000000000003,"count":1},{"y":16,"x":3.4000000000000004,"count":1},{"y":16,"x":4.25,"count":1},{"y":16,"x":5.1000000000000005,"count":2},{"y":16,"x":5.950000000000001,"count":1},{"y":16,"x":6.375000000000001,"count":1},{"y":16,"x":6.800000000000001,"count":1},{"y":17,"x":2.5500000000000003,"count":1},{"y":17,"x":3.4000000000000004,"count":3},{"y":17,"x":3.825,"count":1},{"y":17,"x":4.675000000000001,"count":2},{"y":17,"x":5.950000000000001,"count":1},{"y":17,"x":8.5,"count":2},{"y":17,"x":9.350000000000001,"count":1},{"y":17,"x":9.775,"count":1},{"y":18,"x":2.125,"count":1},{"y":18,"x":2.9750000000000005,"count":1},{"y":18,"x":3.4000000000000004,"count":1},{"y":18,"x":8.075000000000001,"count":1},{"y":18,"x":8.925,"count":1},{"y":18,"x":11.900000000000002,"count":1},{"y":19,"x":2.9750000000000005,"count":1},{"y":19,"x":3.4000000000000004,"count":1},{"y":19,"x":3.825,"count":1},{"y":19,"x":4.25,"count":2},{"y":19,"x":6.375000000000001,"count":1},{"y":19,"x":6.800000000000001,"count":1},{"y":19,"x":7.2250000000000005,"count":1},{"y":20,"x":2.5500000000000003,"count":1},{"y":20,"x":2.9750000000000005,"count":1},{"y":20,"x":3.4000000000000004,"count":2},{"y":20,"x":5.1000000000000005,"count":1},{"y":20,"x":5.950000000000001,"count":1},{"y":20,"x":9.775,"count":1},{"y":21,"x":5.525,"count":1},{"y":21,"x":5.950000000000001,"count":1},{"y":21,"x":6.800000000000001,"count":1},{"y":21,"x":10.625000000000002,"count":1},{"y":22,"x":4.25,"count":1},{"y":22,"x":11.475000000000001,"count":1},{"y":23,"x":11.05,"count":1},{"y":24,"x":4.25,"count":1},{"y":24,"x":9.350000000000001,"count":1},{"y":25,"x":4.675000000000001,"count":1},{"y":26,"x":12.325000000000001,"count":1},{"y":27,"x":6.800000000000001,"count":1},{"y":27,"x":8.075000000000001,"count":1},{"y":31,"x":7.2250000000000005,"count":1}],"maxCount":13},"versatility index":{"x":{"name":"rebounds pergame","extent":[0,13.600000000000001],"delta":0.42500000000000004},"y":{"name":"versatility index","extent":[0,12.600000000000001],"delta":0.39375000000000004},"bins":[{"x":0,"y":0,"count":1},{"x":0,"y":4.331250000000001,"count":1},{"x":0,"y":5.11875,"count":1},{"x":0.42500000000000004,"y":0,"count":3},{"x":0.42500000000000004,"y":2.3625000000000003,"count":1},{"x":0.42500000000000004,"y":3.1500000000000004,"count":2},{"x":0.42500000000000004,"y":3.54375,"count":1},{"x":0.42500000000000004,"y":3.9375000000000004,"count":2},{"x":0.42500000000000004,"y":4.331250000000001,"count":4},{"x":0.42500000000000004,"y":4.7250000000000005,"count":4},{"x":0.42500000000000004,"y":5.11875,"count":1},{"x":0.42500000000000004,"y":5.512500000000001,"count":3},{"x":0.42500000000000004,"y":5.906250000000001,"count":1},{"x":0.42500000000000004,"y":6.300000000000001,"count":1},{"x":0.42500000000000004,"y":6.6937500000000005,"count":1},{"x":0.42500000000000004,"y":8.662500000000001,"count":1},{"x":0.8500000000000001,"y":0,"count":4},{"x":0.8500000000000001,"y":2.7562500000000005,"count":1},{"x":0.8500000000000001,"y":3.1500000000000004,"count":1},{"x":0.8500000000000001,"y":3.54375,"count":2},{"x":0.8500000000000001,"y":3.9375000000000004,"count":3},{"x":0.8500000000000001,"y":4.331250000000001,"count":3},{"x":0.8500000000000001,"y":4.7250000000000005,"count":5},{"x":0.8500000000000001,"y":5.11875,"count":1},{"x":0.8500000000000001,"y":5.512500000000001,"count":4},{"x":0.8500000000000001,"y":5.906250000000001,"count":4},{"x":0.8500000000000001,"y":6.300000000000001,"count":1},{"x":0.8500000000000001,"y":6.6937500000000005,"count":5},{"x":0.8500000000000001,"y":7.0875,"count":1},{"x":0.8500000000000001,"y":7.481250000000001,"count":3},{"x":0.8500000000000001,"y":8.26875,"count":1},{"x":1.2750000000000001,"y":0,"count":2},{"x":1.2750000000000001,"y":2.7562500000000005,"count":1},{"x":1.2750000000000001,"y":3.54375,"count":3},{"x":1.2750000000000001,"y":3.9375000000000004,"count":1},{"x":1.2750000000000001,"y":4.331250000000001,"count":6},{"x":1.2750000000000001,"y":4.7250000000000005,"count":5},{"x":1.2750000000000001,"y":5.11875,"count":2},{"x":1.2750000000000001,"y":5.512500000000001,"count":8},{"x":1.2750000000000001,"y":5.906250000000001,"count":3},{"x":1.2750000000000001,"y":6.300000000000001,"count":3},{"x":1.2750000000000001,"y":6.6937500000000005,"count":3},{"x":1.2750000000000001,"y":8.26875,"count":1},{"x":1.7000000000000002,"y":0,"count":1},{"x":1.7000000000000002,"y":3.54375,"count":2},{"x":1.7000000000000002,"y":3.9375000000000004,"count":1},{"x":1.7000000000000002,"y":4.331250000000001,"count":2},{"x":1.7000000000000002,"y":4.7250000000000005,"count":6},{"x":1.7000000000000002,"y":5.11875,"count":8},{"x":1.7000000000000002,"y":5.512500000000001,"count":6},{"x":1.7000000000000002,"y":5.906250000000001,"count":10},{"x":1.7000000000000002,"y":6.300000000000001,"count":2},{"x":1.7000000000000002,"y":6.6937500000000005,"count":3},{"x":1.7000000000000002,"y":7.0875,"count":11},{"x":1.7000000000000002,"y":7.481250000000001,"count":2},{"x":1.7000000000000002,"y":7.875000000000001,"count":2},{"x":1.7000000000000002,"y":8.26875,"count":3},{"x":2.125,"y":0,"count":2},{"x":2.125,"y":2.7562500000000005,"count":1},{"x":2.125,"y":3.54375,"count":3},{"x":2.125,"y":3.9375000000000004,"count":1},{"x":2.125,"y":4.331250000000001,"count":3},{"x":2.125,"y":4.7250000000000005,"count":9},{"x":2.125,"y":5.11875,"count":2},{"x":2.125,"y":5.512500000000001,"count":3},{"x":2.125,"y":5.906250000000001,"count":5},{"x":2.125,"y":6.300000000000001,"count":2},{"x":2.125,"y":6.6937500000000005,"count":4},{"x":2.125,"y":7.0875,"count":3},{"x":2.125,"y":7.481250000000001,"count":2},{"x":2.125,"y":7.875000000000001,"count":1},{"x":2.125,"y":8.26875,"count":1},{"x":2.125,"y":8.662500000000001,"count":1},{"x":2.5500000000000003,"y":0,"count":2},{"x":2.5500000000000003,"y":2.7562500000000005,"count":1},{"x":2.5500000000000003,"y":4.331250000000001,"count":6},{"x":2.5500000000000003,"y":4.7250000000000005,"count":3},{"x":2.5500000000000003,"y":5.11875,"count":5},{"x":2.5500000000000003,"y":5.512500000000001,"count":2},{"x":2.5500000000000003,"y":5.906250000000001,"count":6},{"x":2.5500000000000003,"y":6.300000000000001,"count":4},{"x":2.5500000000000003,"y":6.6937500000000005,"count":7},{"x":2.5500000000000003,"y":7.0875,"count":1},{"x":2.5500000000000003,"y":7.481250000000001,"count":3},{"x":2.5500000000000003,"y":7.875000000000001,"count":3},{"x":2.5500000000000003,"y":8.26875,"count":1},{"x":2.9750000000000005,"y":3.54375,"count":1},{"x":2.9750000000000005,"y":4.331250000000001,"count":2},{"x":2.9750000000000005,"y":4.7250000000000005,"count":7},{"x":2.9750000000000005,"y":5.11875,"count":1},{"x":2.9750000000000005,"y":5.512500000000001,"count":2},{"x":2.9750000000000005,"y":5.906250000000001,"count":6},{"x":2.9750000000000005,"y":6.300000000000001,"count":1},{"x":2.9750000000000005,"y":6.6937500000000005,"count":2},{"x":2.9750000000000005,"y":7.0875,"count":5},{"x":2.9750000000000005,"y":7.481250000000001,"count":3},{"x":2.9750000000000005,"y":7.875000000000001,"count":2},{"x":2.9750000000000005,"y":8.26875,"count":2},{"x":2.9750000000000005,"y":9.450000000000001,"count":1},{"x":3.4000000000000004,"y":3.9375000000000004,"count":2},{"x":3.4000000000000004,"y":4.331250000000001,"count":4},{"x":3.4000000000000004,"y":4.7250000000000005,"count":2},{"x":3.4000000000000004,"y":5.11875,"count":3},{"x":3.4000000000000004,"y":5.512500000000001,"count":7},{"x":3.4000000000000004,"y":5.906250000000001,"count":5},{"x":3.4000000000000004,"y":6.300000000000001,"count":6},{"x":3.4000000000000004,"y":6.6937500000000005,"count":6},{"x":3.4000000000000004,"y":7.0875,"count":1},{"x":3.4000000000000004,"y":7.875000000000001,"count":4},{"x":3.4000000000000004,"y":8.26875,"count":2},{"x":3.4000000000000004,"y":8.662500000000001,"count":1},{"x":3.4000000000000004,"y":9.05625,"count":1},{"x":3.825,"y":4.331250000000001,"count":1},{"x":3.825,"y":5.11875,"count":3},{"x":3.825,"y":5.512500000000001,"count":2},{"x":3.825,"y":5.906250000000001,"count":5},{"x":3.825,"y":6.300000000000001,"count":2},{"x":3.825,"y":6.6937500000000005,"count":1},{"x":3.825,"y":7.0875,"count":1},{"x":3.825,"y":7.481250000000001,"count":1},{"x":3.825,"y":7.875000000000001,"count":1},{"x":3.825,"y":8.26875,"count":2},{"x":3.825,"y":8.662500000000001,"count":1},{"x":3.825,"y":9.05625,"count":1},{"x":3.825,"y":9.450000000000001,"count":1},{"x":4.25,"y":4.7250000000000005,"count":3},{"x":4.25,"y":5.512500000000001,"count":1},{"x":4.25,"y":5.906250000000001,"count":2},{"x":4.25,"y":6.300000000000001,"count":1},{"x":4.25,"y":6.6937500000000005,"count":2},{"x":4.25,"y":7.0875,"count":2},{"x":4.25,"y":7.481250000000001,"count":2},{"x":4.25,"y":8.662500000000001,"count":1},{"x":4.25,"y":9.450000000000001,"count":1},{"x":4.25,"y":10.2375,"count":1},{"x":4.25,"y":10.631250000000001,"count":1},{"x":4.675000000000001,"y":0,"count":1},{"x":4.675000000000001,"y":3.1500000000000004,"count":2},{"x":4.675000000000001,"y":3.9375000000000004,"count":1},{"x":4.675000000000001,"y":5.11875,"count":2},{"x":4.675000000000001,"y":5.512500000000001,"count":1},{"x":4.675000000000001,"y":5.906250000000001,"count":3},{"x":4.675000000000001,"y":6.300000000000001,"count":1},{"x":4.675000000000001,"y":6.6937500000000005,"count":1},{"x":4.675000000000001,"y":7.0875,"count":2},{"x":4.675000000000001,"y":7.481250000000001,"count":3},{"x":4.675000000000001,"y":9.05625,"count":1},{"x":4.675000000000001,"y":9.450000000000001,"count":2},{"x":4.675000000000001,"y":9.843750000000002,"count":1},{"x":5.1000000000000005,"y":4.331250000000001,"count":1},{"x":5.1000000000000005,"y":5.11875,"count":1},{"x":5.1000000000000005,"y":5.512500000000001,"count":2},{"x":5.1000000000000005,"y":5.906250000000001,"count":5},{"x":5.1000000000000005,"y":6.6937500000000005,"count":3},{"x":5.1000000000000005,"y":7.0875,"count":2},{"x":5.1000000000000005,"y":7.481250000000001,"count":2},{"x":5.1000000000000005,"y":7.875000000000001,"count":2},{"x":5.1000000000000005,"y":8.26875,"count":3},{"x":5.1000000000000005,"y":10.2375,"count":1},{"x":5.525,"y":5.11875,"count":2},{"x":5.525,"y":5.512500000000001,"count":1},{"x":5.525,"y":5.906250000000001,"count":1},{"x":5.525,"y":7.481250000000001,"count":1},{"x":5.525,"y":9.450000000000001,"count":1},{"x":5.525,"y":12.20625,"count":1},{"x":5.950000000000001,"y":5.906250000000001,"count":2},{"x":5.950000000000001,"y":6.300000000000001,"count":1},{"x":5.950000000000001,"y":6.6937500000000005,"count":2},{"x":5.950000000000001,"y":7.481250000000001,"count":1},{"x":5.950000000000001,"y":7.875000000000001,"count":3},{"x":5.950000000000001,"y":8.26875,"count":1},{"x":5.950000000000001,"y":8.662500000000001,"count":1},{"x":5.950000000000001,"y":9.843750000000002,"count":1},{"x":6.375000000000001,"y":4.7250000000000005,"count":1},{"x":6.375000000000001,"y":5.11875,"count":1},{"x":6.375000000000001,"y":5.512500000000001,"count":1},{"x":6.375000000000001,"y":5.906250000000001,"count":3},{"x":6.375000000000001,"y":6.300000000000001,"count":1},{"x":6.375000000000001,"y":6.6937500000000005,"count":1},{"x":6.375000000000001,"y":7.875000000000001,"count":1},{"x":6.800000000000001,"y":5.512500000000001,"count":2},{"x":6.800000000000001,"y":6.300000000000001,"count":1},{"x":6.800000000000001,"y":6.6937500000000005,"count":2},{"x":6.800000000000001,"y":7.481250000000001,"count":2},{"x":6.800000000000001,"y":7.875000000000001,"count":1},{"x":6.800000000000001,"y":8.26875,"count":2},{"x":6.800000000000001,"y":8.662500000000001,"count":3},{"x":6.800000000000001,"y":11.025000000000002,"count":1},{"x":7.2250000000000005,"y":6.300000000000001,"count":1},{"x":7.2250000000000005,"y":7.481250000000001,"count":2},{"x":7.2250000000000005,"y":8.662500000000001,"count":1},{"x":7.2250000000000005,"y":11.025000000000002,"count":1},{"x":7.65,"y":5.11875,"count":1},{"x":7.65,"y":5.906250000000001,"count":2},{"x":7.65,"y":7.0875,"count":1},{"x":7.65,"y":8.26875,"count":1},{"x":8.075000000000001,"y":7.875000000000001,"count":2},{"x":8.075000000000001,"y":8.662500000000001,"count":1},{"x":8.075000000000001,"y":9.05625,"count":1},{"x":8.5,"y":5.512500000000001,"count":2},{"x":8.5,"y":5.906250000000001,"count":1},{"x":8.5,"y":6.6937500000000005,"count":2},{"x":8.5,"y":7.481250000000001,"count":1},{"x":8.5,"y":9.05625,"count":2},{"x":8.925,"y":0,"count":1},{"x":8.925,"y":5.512500000000001,"count":1},{"x":8.925,"y":7.875000000000001,"count":2},{"x":8.925,"y":8.26875,"count":1},{"x":9.350000000000001,"y":5.906250000000001,"count":1},{"x":9.350000000000001,"y":7.0875,"count":1},{"x":9.350000000000001,"y":7.875000000000001,"count":1},{"x":9.350000000000001,"y":10.631250000000001,"count":3},{"x":9.775,"y":7.481250000000001,"count":1},{"x":9.775,"y":7.875000000000001,"count":1},{"x":9.775,"y":8.662500000000001,"count":1},{"x":9.775,"y":10.2375,"count":1},{"x":10.625000000000002,"y":8.26875,"count":1},{"x":10.625000000000002,"y":9.05625,"count":1},{"x":11.05,"y":9.450000000000001,"count":1},{"x":11.05,"y":10.2375,"count":1},{"x":11.475000000000001,"y":11.025000000000002,"count":1},{"x":11.900000000000002,"y":8.662500000000001,"count":1},{"x":12.325000000000001,"y":12.20625,"count":1},{"x":13.175,"y":5.11875,"count":1},{"x":13.175,"y":5.512500000000001,"count":1}]}},"points per game":{"turnover per pocession":{"y":{"name":"turnover per pocession","extent":[0,1],"delta":0.03125},"x":{"name":"points per game","extent":[0,32],"delta":1},"bins":[{"y":0,"x":0,"count":2},{"y":0,"x":1,"count":2},{"y":0,"x":3,"count":3},{"y":0.03125,"x":1,"count":1},{"y":0.03125,"x":2,"count":1},{"y":0.03125,"x":3,"count":2},{"y":0.03125,"x":4,"count":1},{"y":0.03125,"x":5,"count":1},{"y":0.03125,"x":9,"count":1},{"y":0.03125,"x":10,"count":1},{"y":0.03125,"x":19,"count":1},{"y":0.0625,"x":1,"count":3},{"y":0.0625,"x":2,"count":5},{"y":0.0625,"x":3,"count":3},{"y":0.0625,"x":4,"count":5},{"y":0.0625,"x":5,"count":2},{"y":0.0625,"x":6,"count":8},{"y":0.0625,"x":8,"count":6},{"y":0.0625,"x":9,"count":4},{"y":0.0625,"x":10,"count":1},{"y":0.0625,"x":11,"count":2},{"y":0.0625,"x":12,"count":2},{"y":0.0625,"x":13,"count":1},{"y":0.0625,"x":14,"count":2},{"y":0.0625,"x":15,"count":1},{"y":0.0625,"x":16,"count":1},{"y":0.0625,"x":18,"count":1},{"y":0.0625,"x":19,"count":1},{"y":0.0625,"x":20,"count":2},{"y":0.0625,"x":21,"count":2},{"y":0.0625,"x":23,"count":1},{"y":0.09375,"x":0,"count":1},{"y":0.09375,"x":1,"count":2},{"y":0.09375,"x":2,"count":7},{"y":0.09375,"x":3,"count":8},{"y":0.09375,"x":4,"count":9},{"y":0.09375,"x":5,"count":12},{"y":0.09375,"x":6,"count":10},{"y":0.09375,"x":7,"count":6},{"y":0.09375,"x":8,"count":12},{"y":0.09375,"x":9,"count":8},{"y":0.09375,"x":10,"count":10},{"y":0.09375,"x":11,"count":13},{"y":0.09375,"x":12,"count":5},{"y":0.09375,"x":13,"count":7},{"y":0.09375,"x":14,"count":6},{"y":0.09375,"x":15,"count":6},{"y":0.09375,"x":16,"count":3},{"y":0.09375,"x":17,"count":6},{"y":0.09375,"x":18,"count":4},{"y":0.09375,"x":19,"count":1},{"y":0.09375,"x":20,"count":2},{"y":0.09375,"x":22,"count":1},{"y":0.09375,"x":24,"count":1},{"y":0.09375,"x":26,"count":1},{"y":0.09375,"x":27,"count":1},{"y":0.09375,"x":31,"count":1},{"y":0.125,"x":0,"count":1},{"y":0.125,"x":2,"count":7},{"y":0.125,"x":3,"count":7},{"y":0.125,"x":4,"count":14},{"y":0.125,"x":5,"count":5},{"y":0.125,"x":6,"count":14},{"y":0.125,"x":7,"count":11},{"y":0.125,"x":8,"count":7},{"y":0.125,"x":9,"count":8},{"y":0.125,"x":10,"count":6},{"y":0.125,"x":11,"count":7},{"y":0.125,"x":12,"count":2},{"y":0.125,"x":13,"count":10},{"y":0.125,"x":14,"count":6},{"y":0.125,"x":15,"count":4},{"y":0.125,"x":16,"count":3},{"y":0.125,"x":17,"count":4},{"y":0.125,"x":19,"count":4},{"y":0.125,"x":20,"count":3},{"y":0.125,"x":21,"count":1},{"y":0.125,"x":22,"count":1},{"y":0.125,"x":25,"count":1},{"y":0.125,"x":27,"count":1},{"y":0.15625,"x":1,"count":5},{"y":0.15625,"x":2,"count":8},{"y":0.15625,"x":3,"count":14},{"y":0.15625,"x":4,"count":10},{"y":0.15625,"x":5,"count":4},{"y":0.15625,"x":6,"count":2},{"y":0.15625,"x":7,"count":5},{"y":0.15625,"x":8,"count":2},{"y":0.15625,"x":9,"count":5},{"y":0.15625,"x":10,"count":1},{"y":0.15625,"x":11,"count":1},{"y":0.15625,"x":12,"count":4},{"y":0.15625,"x":13,"count":3},{"y":0.15625,"x":14,"count":1},{"y":0.15625,"x":15,"count":1},{"y":0.15625,"x":16,"count":2},{"y":0.15625,"x":17,"count":2},{"y":0.15625,"x":18,"count":1},{"y":0.15625,"x":19,"count":1},{"y":0.15625,"x":21,"count":1},{"y":0.15625,"x":24,"count":1},{"y":0.1875,"x":0,"count":1},{"y":0.1875,"x":1,"count":7},{"y":0.1875,"x":2,"count":14},{"y":0.1875,"x":3,"count":6},{"y":0.1875,"x":4,"count":5},{"y":0.1875,"x":5,"count":4},{"y":0.1875,"x":6,"count":3},{"y":0.1875,"x":7,"count":1},{"y":0.1875,"x":9,"count":2},{"y":0.1875,"x":10,"count":1},{"y":0.1875,"x":11,"count":1},{"y":0.1875,"x":13,"count":1},{"y":0.21875,"x":0,"count":1},{"y":0.21875,"x":1,"count":2},{"y":0.21875,"x":2,"count":8},{"y":0.21875,"x":3,"count":7},{"y":0.21875,"x":4,"count":1},{"y":0.21875,"x":6,"count":1},{"y":0.21875,"x":9,"count":1},{"y":0.25,"x":1,"count":1},{"y":0.25,"x":2,"count":2},{"y":0.25,"x":3,"count":3},{"y":0.25,"x":5,"count":1},{"y":0.25,"x":8,"count":1},{"y":0.28125,"x":1,"count":3},{"y":0.28125,"x":3,"count":1},{"y":0.28125,"x":13,"count":1},{"y":0.34375,"x":0,"count":1},{"y":0.34375,"x":1,"count":2},{"y":0.375,"x":1,"count":1},{"y":0.375,"x":2,"count":1},{"y":0.5625,"x":0,"count":1},{"y":0.96875,"x":0,"count":1}],"maxCount":14},"rebounds pergame":{"x":{"name":"points per game","extent":[0,32],"delta":1},"y":{"name":"rebounds pergame","extent":[0,13.600000000000001],"delta":0.42500000000000004},"bins":[{"x":0,"y":0.42500000000000004,"count":5},{"x":0,"y":0.8500000000000001,"count":2},{"x":0,"y":1.2750000000000001,"count":1},{"x":0,"y":2.5500000000000003,"count":1},{"x":1,"y":0.42500000000000004,"count":7},{"x":1,"y":0.8500000000000001,"count":6},{"x":1,"y":1.2750000000000001,"count":7},{"x":1,"y":1.7000000000000002,"count":3},{"x":1,"y":2.125,"count":4},{"x":1,"y":2.9750000000000005,"count":2},{"x":2,"y":0,"count":2},{"x":2,"y":0.42500000000000004,"count":6},{"x":2,"y":0.8500000000000001,"count":13},{"x":2,"y":1.2750000000000001,"count":9},{"x":2,"y":1.7000000000000002,"count":6},{"x":2,"y":2.125,"count":4},{"x":2,"y":2.5500000000000003,"count":4},{"x":2,"y":2.9750000000000005,"count":1},{"x":2,"y":3.4000000000000004,"count":4},{"x":2,"y":3.825,"count":1},{"x":2,"y":4.675000000000001,"count":2},{"x":2,"y":8.925,"count":1},{"x":3,"y":0,"count":1},{"x":3,"y":0.42500000000000004,"count":5},{"x":3,"y":0.8500000000000001,"count":10},{"x":3,"y":1.2750000000000001,"count":6},{"x":3,"y":1.7000000000000002,"count":9},{"x":3,"y":2.125,"count":8},{"x":3,"y":2.5500000000000003,"count":5},{"x":3,"y":2.9750000000000005,"count":1},{"x":3,"y":3.4000000000000004,"count":4},{"x":3,"y":3.825,"count":2},{"x":3,"y":4.25,"count":1},{"x":3,"y":4.675000000000001,"count":2},{"x":4,"y":0.42500000000000004,"count":1},{"x":4,"y":0.8500000000000001,"count":5},{"x":4,"y":1.2750000000000001,"count":5},{"x":4,"y":1.7000000000000002,"count":10},{"x":4,"y":2.125,"count":5},{"x":4,"y":2.5500000000000003,"count":5},{"x":4,"y":2.9750000000000005,"count":4},{"x":4,"y":3.4000000000000004,"count":3},{"x":4,"y":3.825,"count":1},{"x":4,"y":4.25,"count":2},{"x":4,"y":4.675000000000001,"count":3},{"x":4,"y":5.525,"count":1},{"x":5,"y":0.8500000000000001,"count":2},{"x":5,"y":1.2750000000000001,"count":5},{"x":5,"y":1.7000000000000002,"count":5},{"x":5,"y":2.125,"count":2},{"x":5,"y":2.5500000000000003,"count":3},{"x":5,"y":2.9750000000000005,"count":2},{"x":5,"y":3.4000000000000004,"count":3},{"x":5,"y":3.825,"count":2},{"x":5,"y":4.675000000000001,"count":2},{"x":5,"y":5.1000000000000005,"count":1},{"x":5,"y":7.65,"count":2},{"x":6,"y":0.8500000000000001,"count":1},{"x":6,"y":1.2750000000000001,"count":1},{"x":6,"y":1.7000000000000002,"count":7},{"x":6,"y":2.125,"count":5},{"x":6,"y":2.5500000000000003,"count":2},{"x":6,"y":2.9750000000000005,"count":5},{"x":6,"y":3.4000000000000004,"count":4},{"x":6,"y":3.825,"count":2},{"x":6,"y":4.25,"count":1},{"x":6,"y":4.675000000000001,"count":3},{"x":6,"y":5.1000000000000005,"count":4},{"x":6,"y":5.525,"count":1},{"x":6,"y":6.375000000000001,"count":1},{"x":6,"y":6.800000000000001,"count":1},{"x":7,"y":1.2750000000000001,"count":2},{"x":7,"y":1.7000000000000002,"count":3},{"x":7,"y":2.125,"count":3},{"x":7,"y":2.9750000000000005,"count":4},{"x":7,"y":3.4000000000000004,"count":1},{"x":7,"y":3.825,"count":1},{"x":7,"y":4.25,"count":1},{"x":7,"y":4.675000000000001,"count":1},{"x":7,"y":5.1000000000000005,"count":2},{"x":7,"y":5.950000000000001,"count":2},{"x":7,"y":6.375000000000001,"count":1},{"x":7,"y":6.800000000000001,"count":1},{"x":7,"y":9.775,"count":1},{"x":8,"y":0.42500000000000004,"count":1},{"x":8,"y":1.2750000000000001,"count":1},{"x":8,"y":1.7000000000000002,"count":4},{"x":8,"y":2.125,"count":3},{"x":8,"y":2.5500000000000003,"count":4},{"x":8,"y":2.9750000000000005,"count":1},{"x":8,"y":3.4000000000000004,"count":4},{"x":8,"y":4.25,"count":1},{"x":8,"y":4.675000000000001,"count":1},{"x":8,"y":5.1000000000000005,"count":3},{"x":8,"y":5.525,"count":1},{"x":8,"y":5.950000000000001,"count":1},{"x":8,"y":7.65,"count":1},{"x":8,"y":9.350000000000001,"count":2},{"x":9,"y":1.7000000000000002,"count":3},{"x":9,"y":2.125,"count":1},{"x":9,"y":2.5500000000000003,"count":5},{"x":9,"y":2.9750000000000005,"count":2},{"x":9,"y":3.4000000000000004,"count":5},{"x":9,"y":3.825,"count":4},{"x":9,"y":4.25,"count":3},{"x":9,"y":5.1000000000000005,"count":2},{"x":9,"y":5.525,"count":1},{"x":9,"y":6.375000000000001,"count":2},{"x":9,"y":7.2250000000000005,"count":1},{"x":10,"y":1.2750000000000001,"count":1},{"x":10,"y":1.7000000000000002,"count":6},{"x":10,"y":2.125,"count":1},{"x":10,"y":2.5500000000000003,"count":2},{"x":10,"y":2.9750000000000005,"count":1},{"x":10,"y":3.4000000000000004,"count":3},{"x":10,"y":5.525,"count":1},{"x":10,"y":6.375000000000001,"count":3},{"x":10,"y":7.65,"count":1},{"x":10,"y":13.175,"count":1},{"x":11,"y":1.7000000000000002,"count":1},{"x":11,"y":2.125,"count":3},{"x":11,"y":2.5500000000000003,"count":3},{"x":11,"y":3.4000000000000004,"count":1},{"x":11,"y":3.825,"count":1},{"x":11,"y":4.25,"count":1},{"x":11,"y":4.675000000000001,"count":1},{"x":11,"y":5.1000000000000005,"count":4},{"x":11,"y":5.525,"count":1},{"x":11,"y":5.950000000000001,"count":1},{"x":11,"y":6.800000000000001,"count":2},{"x":11,"y":8.5,"count":2},{"x":11,"y":8.925,"count":2},{"x":11,"y":9.350000000000001,"count":1},{"x":12,"y":2.5500000000000003,"count":3},{"x":12,"y":2.9750000000000005,"count":2},{"x":12,"y":3.4000000000000004,"count":2},{"x":12,"y":3.825,"count":1},{"x":12,"y":5.950000000000001,"count":2},{"x":12,"y":6.800000000000001,"count":1},{"x":12,"y":7.2250000000000005,"count":1},{"x":12,"y":11.05,"count":1},{"x":13,"y":2.125,"count":1},{"x":13,"y":2.5500000000000003,"count":1},{"x":13,"y":2.9750000000000005,"count":2},{"x":13,"y":3.825,"count":2},{"x":13,"y":4.25,"count":2},{"x":13,"y":4.675000000000001,"count":2},{"x":13,"y":5.1000000000000005,"count":1},{"x":13,"y":5.950000000000001,"count":1},{"x":13,"y":6.800000000000001,"count":2},{"x":13,"y":7.2250000000000005,"count":1},{"x":13,"y":7.65,"count":1},{"x":13,"y":8.075000000000001,"count":2},{"x":13,"y":8.5,"count":3},{"x":13,"y":9.350000000000001,"count":1},{"x":13,"y":13.175,"count":1},{"x":14,"y":1.7000000000000002,"count":1},{"x":14,"y":2.5500000000000003,"count":1},{"x":14,"y":2.9750000000000005,"count":1},{"x":14,"y":3.4000000000000004,"count":1},{"x":14,"y":3.825,"count":3},{"x":14,"y":4.675000000000001,"count":1},{"x":14,"y":5.1000000000000005,"count":2},{"x":14,"y":5.950000000000001,"count":1},{"x":14,"y":6.800000000000001,"count":3},{"x":14,"y":10.625000000000002,"count":1},{"x":15,"y":1.7000000000000002,"count":1},{"x":15,"y":2.125,"count":1},{"x":15,"y":2.5500000000000003,"count":2},{"x":15,"y":2.9750000000000005,"count":4},{"x":15,"y":3.4000000000000004,"count":1},{"x":15,"y":8.5,"count":1},{"x":15,"y":8.925,"count":1},{"x":15,"y":9.775,"count":1},{"x":16,"y":2.125,"count":1},{"x":16,"y":2.5500000000000003,"count":1},{"x":16,"y":3.4000000000000004,"count":1},{"x":16,"y":4.25,"count":1},{"x":16,"y":5.1000000000000005,"count":2},{"x":16,"y":5.950000000000001,"count":1},{"x":16,"y":6.375000000000001,"count":1},{"x":16,"y":6.800000000000001,"count":1},{"x":17,"y":2.5500000000000003,"count":1},{"x":17,"y":3.4000000000000004,"count":3},{"x":17,"y":3.825,"count":1},{"x":17,"y":4.675000000000001,"count":2},{"x":17,"y":5.950000000000001,"count":1},{"x":17,"y":8.5,"count":2},{"x":17,"y":9.350000000000001,"count":1},{"x":17,"y":9.775,"count":1},{"x":18,"y":2.125,"count":1},{"x":18,"y":2.9750000000000005,"count":1},{"x":18,"y":3.4000000000000004,"count":1},{"x":18,"y":8.075000000000001,"count":1},{"x":18,"y":8.925,"count":1},{"x":18,"y":11.900000000000002,"count":1},{"x":19,"y":2.9750000000000005,"count":1},{"x":19,"y":3.4000000000000004,"count":1},{"x":19,"y":3.825,"count":1},{"x":19,"y":4.25,"count":2},{"x":19,"y":6.375000000000001,"count":1},{"x":19,"y":6.800000000000001,"count":1},{"x":19,"y":7.2250000000000005,"count":1},{"x":20,"y":2.5500000000000003,"count":1},{"x":20,"y":2.9750000000000005,"count":1},{"x":20,"y":3.4000000000000004,"count":2},{"x":20,"y":5.1000000000000005,"count":1},{"x":20,"y":5.950000000000001,"count":1},{"x":20,"y":9.775,"count":1},{"x":21,"y":5.525,"count":1},{"x":21,"y":5.950000000000001,"count":1},{"x":21,"y":6.800000000000001,"count":1},{"x":21,"y":10.625000000000002,"count":1},{"x":22,"y":4.25,"count":1},{"x":22,"y":11.475000000000001,"count":1},{"x":23,"y":11.05,"count":1},{"x":24,"y":4.25,"count":1},{"x":24,"y":9.350000000000001,"count":1},{"x":25,"y":4.675000000000001,"count":1},{"x":26,"y":12.325000000000001,"count":1},{"x":27,"y":6.800000000000001,"count":1},{"x":27,"y":8.075000000000001,"count":1},{"x":31,"y":7.2250000000000005,"count":1}]}},"turnover per pocession":{"free throw attempts":{"y":{"name":"free throw attempts","extent":[0,805],"delta":25.15625},"x":{"name":"turnover per pocession","extent":[0,1],"delta":0.03125},"bins":[{"y":0,"x":0,"count":7},{"y":0,"x":0.03125,"count":6},{"y":0,"x":0.0625,"count":19},{"y":0,"x":0.09375,"count":26},{"y":0,"x":0.125,"count":19},{"y":0,"x":0.15625,"count":25},{"y":0,"x":0.1875,"count":25},{"y":0,"x":0.21875,"count":8},{"y":0,"x":0.25,"count":6},{"y":0,"x":0.28125,"count":4},{"y":0,"x":0.34375,"count":3},{"y":0,"x":0.375,"count":2},{"y":0,"x":0.5625,"count":1},{"y":0,"x":0.96875,"count":1},{"y":25.15625,"x":0.0625,"count":6},{"y":25.15625,"x":0.09375,"count":15},{"y":25.15625,"x":0.125,"count":15},{"y":25.15625,"x":0.15625,"count":10},{"y":25.15625,"x":0.1875,"count":8},{"y":25.15625,"x":0.21875,"count":7},{"y":25.15625,"x":0.25,"count":1},{"y":50.3125,"x":0.03125,"count":2},{"y":50.3125,"x":0.0625,"count":10},{"y":50.3125,"x":0.09375,"count":16},{"y":50.3125,"x":0.125,"count":15},{"y":50.3125,"x":0.15625,"count":8},{"y":50.3125,"x":0.1875,"count":6},{"y":50.3125,"x":0.21875,"count":5},{"y":50.3125,"x":0.28125,"count":1},{"y":75.46875,"x":0.0625,"count":3},{"y":75.46875,"x":0.09375,"count":13},{"y":75.46875,"x":0.125,"count":10},{"y":75.46875,"x":0.15625,"count":6},{"y":75.46875,"x":0.1875,"count":1},{"y":100.625,"x":0.0625,"count":3},{"y":100.625,"x":0.09375,"count":9},{"y":100.625,"x":0.125,"count":8},{"y":100.625,"x":0.15625,"count":7},{"y":100.625,"x":0.1875,"count":1},{"y":100.625,"x":0.25,"count":1},{"y":125.78125,"x":0.03125,"count":1},{"y":125.78125,"x":0.0625,"count":2},{"y":125.78125,"x":0.09375,"count":11},{"y":125.78125,"x":0.125,"count":11},{"y":125.78125,"x":0.15625,"count":4},{"y":125.78125,"x":0.1875,"count":1},{"y":125.78125,"x":0.21875,"count":1},{"y":150.9375,"x":0.0625,"count":1},{"y":150.9375,"x":0.09375,"count":5},{"y":150.9375,"x":0.125,"count":4},{"y":150.9375,"x":0.1875,"count":1},{"y":176.09375,"x":0.0625,"count":2},{"y":176.09375,"x":0.09375,"count":10},{"y":176.09375,"x":0.125,"count":8},{"y":176.09375,"x":0.15625,"count":3},{"y":201.25,"x":0.09375,"count":3},{"y":201.25,"x":0.125,"count":6},{"y":201.25,"x":0.15625,"count":1},{"y":201.25,"x":0.1875,"count":1},{"y":226.40625,"x":0.0625,"count":1},{"y":226.40625,"x":0.09375,"count":10},{"y":226.40625,"x":0.125,"count":3},{"y":226.40625,"x":0.15625,"count":1},{"y":251.5625,"x":0.09375,"count":4},{"y":251.5625,"x":0.125,"count":5},{"y":251.5625,"x":0.15625,"count":1},{"y":276.71875,"x":0.0625,"count":2},{"y":276.71875,"x":0.09375,"count":2},{"y":276.71875,"x":0.125,"count":5},{"y":276.71875,"x":0.15625,"count":1},{"y":276.71875,"x":0.1875,"count":1},{"y":301.875,"x":0.09375,"count":3},{"y":301.875,"x":0.125,"count":6},{"y":301.875,"x":0.1875,"count":1},{"y":327.03125,"x":0.0625,"count":1},{"y":327.03125,"x":0.09375,"count":8},{"y":327.03125,"x":0.15625,"count":2},{"y":352.1875,"x":0.0625,"count":2},{"y":352.1875,"x":0.09375,"count":2},{"y":352.1875,"x":0.125,"count":2},{"y":352.1875,"x":0.15625,"count":2},{"y":377.34375,"x":0.125,"count":3},{"y":377.34375,"x":0.15625,"count":1},{"y":402.5,"x":0.09375,"count":1},{"y":402.5,"x":0.125,"count":2},{"y":402.5,"x":0.15625,"count":1},{"y":427.65625,"x":0.0625,"count":1},{"y":427.65625,"x":0.125,"count":1},{"y":452.8125,"x":0.125,"count":1},{"y":528.28125,"x":0.09375,"count":1},{"y":578.59375,"x":0.125,"count":2},{"y":628.90625,"x":0.09375,"count":2},{"y":628.90625,"x":0.15625,"count":1},{"y":654.0625,"x":0.09375,"count":1},{"y":654.0625,"x":0.125,"count":1},{"y":779.84375,"x":0.09375,"count":1}],"maxCount":26},"points per game":{"x":{"name":"turnover per pocession","extent":[0,1],"delta":0.03125},"y":{"name":"points per game","extent":[0,32],"delta":1},"bins":[{"x":0,"y":0,"count":2},{"x":0,"y":1,"count":2},{"x":0,"y":3,"count":3},{"x":0.03125,"y":1,"count":1},{"x":0.03125,"y":2,"count":1},{"x":0.03125,"y":3,"count":2},{"x":0.03125,"y":4,"count":1},{"x":0.03125,"y":5,"count":1},{"x":0.03125,"y":9,"count":1},{"x":0.03125,"y":10,"count":1},{"x":0.03125,"y":19,"count":1},{"x":0.0625,"y":1,"count":3},{"x":0.0625,"y":2,"count":5},{"x":0.0625,"y":3,"count":3},{"x":0.0625,"y":4,"count":5},{"x":0.0625,"y":5,"count":2},{"x":0.0625,"y":6,"count":8},{"x":0.0625,"y":8,"count":6},{"x":0.0625,"y":9,"count":4},{"x":0.0625,"y":10,"count":1},{"x":0.0625,"y":11,"count":2},{"x":0.0625,"y":12,"count":2},{"x":0.0625,"y":13,"count":1},{"x":0.0625,"y":14,"count":2},{"x":0.0625,"y":15,"count":1},{"x":0.0625,"y":16,"count":1},{"x":0.0625,"y":18,"count":1},{"x":0.0625,"y":19,"count":1},{"x":0.0625,"y":20,"count":2},{"x":0.0625,"y":21,"count":2},{"x":0.0625,"y":23,"count":1},{"x":0.09375,"y":0,"count":1},{"x":0.09375,"y":1,"count":2},{"x":0.09375,"y":2,"count":7},{"x":0.09375,"y":3,"count":8},{"x":0.09375,"y":4,"count":9},{"x":0.09375,"y":5,"count":12},{"x":0.09375,"y":6,"count":10},{"x":0.09375,"y":7,"count":6},{"x":0.09375,"y":8,"count":12},{"x":0.09375,"y":9,"count":8},{"x":0.09375,"y":10,"count":10},{"x":0.09375,"y":11,"count":13},{"x":0.09375,"y":12,"count":5},{"x":0.09375,"y":13,"count":7},{"x":0.09375,"y":14,"count":6},{"x":0.09375,"y":15,"count":6},{"x":0.09375,"y":16,"count":3},{"x":0.09375,"y":17,"count":6},{"x":0.09375,"y":18,"count":4},{"x":0.09375,"y":19,"count":1},{"x":0.09375,"y":20,"count":2},{"x":0.09375,"y":22,"count":1},{"x":0.09375,"y":24,"count":1},{"x":0.09375,"y":26,"count":1},{"x":0.09375,"y":27,"count":1},{"x":0.09375,"y":31,"count":1},{"x":0.125,"y":0,"count":1},{"x":0.125,"y":2,"count":7},{"x":0.125,"y":3,"count":7},{"x":0.125,"y":4,"count":14},{"x":0.125,"y":5,"count":5},{"x":0.125,"y":6,"count":14},{"x":0.125,"y":7,"count":11},{"x":0.125,"y":8,"count":7},{"x":0.125,"y":9,"count":8},{"x":0.125,"y":10,"count":6},{"x":0.125,"y":11,"count":7},{"x":0.125,"y":12,"count":2},{"x":0.125,"y":13,"count":10},{"x":0.125,"y":14,"count":6},{"x":0.125,"y":15,"count":4},{"x":0.125,"y":16,"count":3},{"x":0.125,"y":17,"count":4},{"x":0.125,"y":19,"count":4},{"x":0.125,"y":20,"count":3},{"x":0.125,"y":21,"count":1},{"x":0.125,"y":22,"count":1},{"x":0.125,"y":25,"count":1},{"x":0.125,"y":27,"count":1},{"x":0.15625,"y":1,"count":5},{"x":0.15625,"y":2,"count":8},{"x":0.15625,"y":3,"count":14},{"x":0.15625,"y":4,"count":10},{"x":0.15625,"y":5,"count":4},{"x":0.15625,"y":6,"count":2},{"x":0.15625,"y":7,"count":5},{"x":0.15625,"y":8,"count":2},{"x":0.15625,"y":9,"count":5},{"x":0.15625,"y":10,"count":1},{"x":0.15625,"y":11,"count":1},{"x":0.15625,"y":12,"count":4},{"x":0.15625,"y":13,"count":3},{"x":0.15625,"y":14,"count":1},{"x":0.15625,"y":15,"count":1},{"x":0.15625,"y":16,"count":2},{"x":0.15625,"y":17,"count":2},{"x":0.15625,"y":18,"count":1},{"x":0.15625,"y":19,"count":1},{"x":0.15625,"y":21,"count":1},{"x":0.15625,"y":24,"count":1},{"x":0.1875,"y":0,"count":1},{"x":0.1875,"y":1,"count":7},{"x":0.1875,"y":2,"count":14},{"x":0.1875,"y":3,"count":6},{"x":0.1875,"y":4,"count":5},{"x":0.1875,"y":5,"count":4},{"x":0.1875,"y":6,"count":3},{"x":0.1875,"y":7,"count":1},{"x":0.1875,"y":9,"count":2},{"x":0.1875,"y":10,"count":1},{"x":0.1875,"y":11,"count":1},{"x":0.1875,"y":13,"count":1},{"x":0.21875,"y":0,"count":1},{"x":0.21875,"y":1,"count":2},{"x":0.21875,"y":2,"count":8},{"x":0.21875,"y":3,"count":7},{"x":0.21875,"y":4,"count":1},{"x":0.21875,"y":6,"count":1},{"x":0.21875,"y":9,"count":1},{"x":0.25,"y":1,"count":1},{"x":0.25,"y":2,"count":2},{"x":0.25,"y":3,"count":3},{"x":0.25,"y":5,"count":1},{"x":0.25,"y":8,"count":1},{"x":0.28125,"y":1,"count":3},{"x":0.28125,"y":3,"count":1},{"x":0.28125,"y":13,"count":1},{"x":0.34375,"y":0,"count":1},{"x":0.34375,"y":1,"count":2},{"x":0.375,"y":1,"count":1},{"x":0.375,"y":2,"count":1},{"x":0.5625,"y":0,"count":1},{"x":0.96875,"y":0,"count":1}]}},"free throw attempts":{"2 point shots attempts":{"y":{"name":"2 point shots attempts","extent":[0,1408],"delta":44},"x":{"name":"free throw attempts","extent":[0,805],"delta":25.15625},"bins":[{"y":0,"x":0,"count":93},{"y":0,"x":25.15625,"count":1},{"y":44,"x":0,"count":45},{"y":44,"x":25.15625,"count":14},{"y":44,"x":50.3125,"count":4},{"y":88,"x":0,"count":11},{"y":88,"x":25.15625,"count":25},{"y":88,"x":50.3125,"count":10},{"y":88,"x":75.46875,"count":1},{"y":132,"x":0,"count":3},{"y":132,"x":25.15625,"count":12},{"y":132,"x":50.3125,"count":11},{"y":132,"x":75.46875,"count":2},{"y":132,"x":100.625,"count":3},{"y":176,"x":25.15625,"count":3},{"y":176,"x":50.3125,"count":15},{"y":176,"x":75.46875,"count":3},{"y":176,"x":100.625,"count":3},{"y":176,"x":125.78125,"count":3},{"y":176,"x":176.09375,"count":1},{"y":220,"x":25.15625,"count":5},{"y":220,"x":50.3125,"count":7},{"y":220,"x":75.46875,"count":7},{"y":220,"x":100.625,"count":6},{"y":220,"x":125.78125,"count":2},{"y":220,"x":150.9375,"count":2},{"y":220,"x":176.09375,"count":1},{"y":264,"x":25.15625,"count":1},{"y":264,"x":50.3125,"count":3},{"y":264,"x":75.46875,"count":7},{"y":264,"x":100.625,"count":4},{"y":264,"x":125.78125,"count":2},{"y":264,"x":176.09375,"count":2},{"y":264,"x":201.25,"count":1},{"y":308,"x":50.3125,"count":7},{"y":308,"x":75.46875,"count":6},{"y":308,"x":125.78125,"count":3},{"y":308,"x":150.9375,"count":3},{"y":308,"x":176.09375,"count":1},{"y":308,"x":226.40625,"count":1},{"y":352,"x":25.15625,"count":1},{"y":352,"x":50.3125,"count":3},{"y":352,"x":75.46875,"count":2},{"y":352,"x":100.625,"count":9},{"y":352,"x":125.78125,"count":4},{"y":352,"x":150.9375,"count":5},{"y":352,"x":176.09375,"count":3},{"y":352,"x":201.25,"count":1},{"y":396,"x":50.3125,"count":1},{"y":396,"x":75.46875,"count":3},{"y":396,"x":100.625,"count":1},{"y":396,"x":125.78125,"count":4},{"y":396,"x":176.09375,"count":2},{"y":396,"x":201.25,"count":1},{"y":396,"x":226.40625,"count":2},{"y":396,"x":251.5625,"count":1},{"y":396,"x":301.875,"count":1},{"y":440,"x":75.46875,"count":2},{"y":440,"x":125.78125,"count":6},{"y":440,"x":150.9375,"count":1},{"y":440,"x":176.09375,"count":2},{"y":440,"x":201.25,"count":1},{"y":440,"x":327.03125,"count":1},{"y":484,"x":50.3125,"count":1},{"y":484,"x":100.625,"count":1},{"y":484,"x":125.78125,"count":2},{"y":484,"x":176.09375,"count":2},{"y":484,"x":201.25,"count":1},{"y":484,"x":226.40625,"count":1},{"y":484,"x":251.5625,"count":2},{"y":484,"x":276.71875,"count":1},{"y":484,"x":352.1875,"count":1},{"y":528,"x":50.3125,"count":1},{"y":528,"x":100.625,"count":1},{"y":528,"x":125.78125,"count":4},{"y":528,"x":201.25,"count":2},{"y":528,"x":276.71875,"count":1},{"y":528,"x":301.875,"count":1},{"y":572,"x":176.09375,"count":2},{"y":572,"x":226.40625,"count":2},{"y":572,"x":251.5625,"count":1},{"y":572,"x":276.71875,"count":1},{"y":572,"x":377.34375,"count":1},{"y":572,"x":402.5,"count":1},{"y":616,"x":100.625,"count":1},{"y":616,"x":176.09375,"count":2},{"y":616,"x":201.25,"count":2},{"y":616,"x":226.40625,"count":1},{"y":616,"x":276.71875,"count":1},{"y":616,"x":327.03125,"count":1},{"y":660,"x":125.78125,"count":1},{"y":660,"x":176.09375,"count":1},{"y":660,"x":201.25,"count":1},{"y":660,"x":226.40625,"count":3},{"y":660,"x":251.5625,"count":1},{"y":660,"x":301.875,"count":1},{"y":660,"x":352.1875,"count":1},{"y":704,"x":176.09375,"count":1},{"y":704,"x":226.40625,"count":2},{"y":704,"x":251.5625,"count":3},{"y":704,"x":276.71875,"count":2},{"y":704,"x":301.875,"count":2},{"y":704,"x":327.03125,"count":2},{"y":704,"x":402.5,"count":1},{"y":704,"x":654.0625,"count":1},{"y":748,"x":251.5625,"count":1},{"y":748,"x":276.71875,"count":1},{"y":748,"x":301.875,"count":1},{"y":748,"x":327.03125,"count":3},{"y":748,"x":352.1875,"count":1},{"y":748,"x":377.34375,"count":1},{"y":748,"x":402.5,"count":1},{"y":792,"x":176.09375,"count":1},{"y":792,"x":301.875,"count":3},{"y":792,"x":327.03125,"count":2},{"y":792,"x":352.1875,"count":1},{"y":792,"x":377.34375,"count":1},{"y":792,"x":402.5,"count":1},{"y":792,"x":628.90625,"count":1},{"y":836,"x":201.25,"count":1},{"y":836,"x":226.40625,"count":2},{"y":836,"x":251.5625,"count":1},{"y":836,"x":352.1875,"count":1},{"y":836,"x":452.8125,"count":1},{"y":880,"x":176.09375,"count":1},{"y":880,"x":276.71875,"count":1},{"y":880,"x":301.875,"count":1},{"y":880,"x":327.03125,"count":1},{"y":880,"x":628.90625,"count":1},{"y":924,"x":226.40625,"count":1},{"y":924,"x":352.1875,"count":1},{"y":968,"x":176.09375,"count":1},{"y":968,"x":276.71875,"count":2},{"y":968,"x":427.65625,"count":1},{"y":1012,"x":352.1875,"count":1},{"y":1012,"x":377.34375,"count":1},{"y":1012,"x":578.59375,"count":1},{"y":1056,"x":427.65625,"count":1},{"y":1144,"x":327.03125,"count":1},{"y":1144,"x":578.59375,"count":1},{"y":1188,"x":528.28125,"count":1},{"y":1188,"x":628.90625,"count":1},{"y":1188,"x":779.84375,"count":1},{"y":1276,"x":654.0625,"count":1},{"y":1320,"x":276.71875,"count":1},{"y":1364,"x":352.1875,"count":1}],"maxCount":93},"turnover per pocession":{"x":{"name":"free throw attempts","extent":[0,805],"delta":25.15625},"y":{"name":"turnover per pocession","extent":[0,1],"delta":0.03125},"bins":[{"x":0,"y":0,"count":7},{"x":0,"y":0.03125,"count":6},{"x":0,"y":0.0625,"count":19},{"x":0,"y":0.09375,"count":26},{"x":0,"y":0.125,"count":19},{"x":0,"y":0.15625,"count":25},{"x":0,"y":0.1875,"count":25},{"x":0,"y":0.21875,"count":8},{"x":0,"y":0.25,"count":6},{"x":0,"y":0.28125,"count":4},{"x":0,"y":0.34375,"count":3},{"x":0,"y":0.375,"count":2},{"x":0,"y":0.5625,"count":1},{"x":0,"y":0.96875,"count":1},{"x":25.15625,"y":0.0625,"count":6},{"x":25.15625,"y":0.09375,"count":15},{"x":25.15625,"y":0.125,"count":15},{"x":25.15625,"y":0.15625,"count":10},{"x":25.15625,"y":0.1875,"count":8},{"x":25.15625,"y":0.21875,"count":7},{"x":25.15625,"y":0.25,"count":1},{"x":50.3125,"y":0.03125,"count":2},{"x":50.3125,"y":0.0625,"count":10},{"x":50.3125,"y":0.09375,"count":16},{"x":50.3125,"y":0.125,"count":15},{"x":50.3125,"y":0.15625,"count":8},{"x":50.3125,"y":0.1875,"count":6},{"x":50.3125,"y":0.21875,"count":5},{"x":50.3125,"y":0.28125,"count":1},{"x":75.46875,"y":0.0625,"count":3},{"x":75.46875,"y":0.09375,"count":13},{"x":75.46875,"y":0.125,"count":10},{"x":75.46875,"y":0.15625,"count":6},{"x":75.46875,"y":0.1875,"count":1},{"x":100.625,"y":0.0625,"count":3},{"x":100.625,"y":0.09375,"count":9},{"x":100.625,"y":0.125,"count":8},{"x":100.625,"y":0.15625,"count":7},{"x":100.625,"y":0.1875,"count":1},{"x":100.625,"y":0.25,"count":1},{"x":125.78125,"y":0.03125,"count":1},{"x":125.78125,"y":0.0625,"count":2},{"x":125.78125,"y":0.09375,"count":11},{"x":125.78125,"y":0.125,"count":11},{"x":125.78125,"y":0.15625,"count":4},{"x":125.78125,"y":0.1875,"count":1},{"x":125.78125,"y":0.21875,"count":1},{"x":150.9375,"y":0.0625,"count":1},{"x":150.9375,"y":0.09375,"count":5},{"x":150.9375,"y":0.125,"count":4},{"x":150.9375,"y":0.1875,"count":1},{"x":176.09375,"y":0.0625,"count":2},{"x":176.09375,"y":0.09375,"count":10},{"x":176.09375,"y":0.125,"count":8},{"x":176.09375,"y":0.15625,"count":3},{"x":201.25,"y":0.09375,"count":3},{"x":201.25,"y":0.125,"count":6},{"x":201.25,"y":0.15625,"count":1},{"x":201.25,"y":0.1875,"count":1},{"x":226.40625,"y":0.0625,"count":1},{"x":226.40625,"y":0.09375,"count":10},{"x":226.40625,"y":0.125,"count":3},{"x":226.40625,"y":0.15625,"count":1},{"x":251.5625,"y":0.09375,"count":4},{"x":251.5625,"y":0.125,"count":5},{"x":251.5625,"y":0.15625,"count":1},{"x":276.71875,"y":0.0625,"count":2},{"x":276.71875,"y":0.09375,"count":2},{"x":276.71875,"y":0.125,"count":5},{"x":276.71875,"y":0.15625,"count":1},{"x":276.71875,"y":0.1875,"count":1},{"x":301.875,"y":0.09375,"count":3},{"x":301.875,"y":0.125,"count":6},{"x":301.875,"y":0.1875,"count":1},{"x":327.03125,"y":0.0625,"count":1},{"x":327.03125,"y":0.09375,"count":8},{"x":327.03125,"y":0.15625,"count":2},{"x":352.1875,"y":0.0625,"count":2},{"x":352.1875,"y":0.09375,"count":2},{"x":352.1875,"y":0.125,"count":2},{"x":352.1875,"y":0.15625,"count":2},{"x":377.34375,"y":0.125,"count":3},{"x":377.34375,"y":0.15625,"count":1},{"x":402.5,"y":0.09375,"count":1},{"x":402.5,"y":0.125,"count":2},{"x":402.5,"y":0.15625,"count":1},{"x":427.65625,"y":0.0625,"count":1},{"x":427.65625,"y":0.125,"count":1},{"x":452.8125,"y":0.125,"count":1},{"x":528.28125,"y":0.09375,"count":1},{"x":578.59375,"y":0.125,"count":2},{"x":628.90625,"y":0.09375,"count":2},{"x":628.90625,"y":0.15625,"count":1},{"x":654.0625,"y":0.09375,"count":1},{"x":654.0625,"y":0.125,"count":1},{"x":779.84375,"y":0.09375,"count":1}]}},"2 point shots attempts":{"percentage of team minutes":{"y":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"x":{"name":"2 point shots attempts","extent":[0,1408],"delta":44},"bins":[{"y":7.2,"x":0,"count":4},{"y":9.459375,"x":0,"count":11},{"y":11.71875,"x":0,"count":17},{"y":11.71875,"x":44,"count":1},{"y":13.978124999999999,"x":0,"count":17},{"y":13.978124999999999,"x":44,"count":4},{"y":13.978124999999999,"x":88,"count":3},{"y":16.2375,"x":0,"count":9},{"y":16.2375,"x":44,"count":11},{"y":16.2375,"x":88,"count":1},{"y":18.496875,"x":0,"count":10},{"y":18.496875,"x":44,"count":8},{"y":18.496875,"x":88,"count":4},{"y":18.496875,"x":132,"count":1},{"y":20.756249999999998,"x":0,"count":5},{"y":20.756249999999998,"x":44,"count":7},{"y":20.756249999999998,"x":88,"count":3},{"y":20.756249999999998,"x":132,"count":1},{"y":20.756249999999998,"x":220,"count":1},{"y":23.015625,"x":0,"count":8},{"y":23.015625,"x":44,"count":4},{"y":23.015625,"x":88,"count":3},{"y":23.015625,"x":132,"count":1},{"y":25.275,"x":0,"count":4},{"y":25.275,"x":44,"count":6},{"y":25.275,"x":88,"count":3},{"y":25.275,"x":132,"count":3},{"y":25.275,"x":176,"count":1},{"y":25.275,"x":264,"count":1},{"y":25.275,"x":396,"count":1},{"y":27.534374999999997,"x":0,"count":1},{"y":27.534374999999997,"x":44,"count":5},{"y":27.534374999999997,"x":88,"count":5},{"y":27.534374999999997,"x":132,"count":3},{"y":27.534374999999997,"x":220,"count":3},{"y":29.79375,"x":0,"count":5},{"y":29.79375,"x":44,"count":2},{"y":29.79375,"x":88,"count":2},{"y":29.79375,"x":132,"count":4},{"y":29.79375,"x":176,"count":5},{"y":29.79375,"x":264,"count":2},{"y":29.79375,"x":308,"count":1},{"y":29.79375,"x":352,"count":1},{"y":32.053125,"x":0,"count":1},{"y":32.053125,"x":44,"count":3},{"y":32.053125,"x":88,"count":4},{"y":32.053125,"x":132,"count":3},{"y":32.053125,"x":176,"count":1},{"y":32.053125,"x":220,"count":2},{"y":34.3125,"x":44,"count":2},{"y":34.3125,"x":88,"count":3},{"y":34.3125,"x":132,"count":2},{"y":34.3125,"x":176,"count":2},{"y":34.3125,"x":220,"count":1},{"y":34.3125,"x":264,"count":1},{"y":34.3125,"x":308,"count":1},{"y":34.3125,"x":352,"count":1},{"y":34.3125,"x":440,"count":1},{"y":34.3125,"x":528,"count":1},{"y":36.571875,"x":88,"count":5},{"y":36.571875,"x":132,"count":3},{"y":36.571875,"x":176,"count":1},{"y":36.571875,"x":220,"count":3},{"y":36.571875,"x":264,"count":2},{"y":36.571875,"x":308,"count":3},{"y":36.571875,"x":352,"count":1},{"y":36.571875,"x":396,"count":2},{"y":38.83125,"x":44,"count":4},{"y":38.83125,"x":88,"count":3},{"y":38.83125,"x":132,"count":1},{"y":38.83125,"x":176,"count":4},{"y":38.83125,"x":220,"count":4},{"y":38.83125,"x":264,"count":2},{"y":38.83125,"x":308,"count":2},{"y":38.83125,"x":352,"count":2},{"y":38.83125,"x":440,"count":1},{"y":41.090625,"x":0,"count":1},{"y":41.090625,"x":44,"count":2},{"y":41.090625,"x":88,"count":2},{"y":41.090625,"x":132,"count":5},{"y":41.090625,"x":176,"count":2},{"y":41.090625,"x":308,"count":1},{"y":41.090625,"x":352,"count":3},{"y":41.090625,"x":484,"count":2},{"y":43.35,"x":0,"count":1},{"y":43.35,"x":264,"count":3},{"y":43.35,"x":308,"count":1},{"y":43.35,"x":352,"count":1},{"y":43.35,"x":396,"count":1},{"y":43.35,"x":484,"count":1},{"y":43.35,"x":616,"count":1},{"y":45.609375,"x":88,"count":3},{"y":45.609375,"x":176,"count":2},{"y":45.609375,"x":220,"count":3},{"y":45.609375,"x":308,"count":1},{"y":45.609375,"x":352,"count":2},{"y":45.609375,"x":396,"count":1},{"y":45.609375,"x":528,"count":1},{"y":47.86875,"x":44,"count":2},{"y":47.86875,"x":132,"count":1},{"y":47.86875,"x":176,"count":3},{"y":47.86875,"x":220,"count":2},{"y":47.86875,"x":308,"count":2},{"y":47.86875,"x":396,"count":1},{"y":47.86875,"x":440,"count":1},{"y":50.128125000000004,"x":88,"count":1},{"y":50.128125000000004,"x":132,"count":2},{"y":50.128125000000004,"x":220,"count":2},{"y":50.128125000000004,"x":264,"count":2},{"y":50.128125000000004,"x":308,"count":3},{"y":50.128125000000004,"x":396,"count":1},{"y":50.128125000000004,"x":440,"count":1},{"y":50.128125000000004,"x":484,"count":1},{"y":50.128125000000004,"x":528,"count":1},{"y":52.3875,"x":176,"count":1},{"y":52.3875,"x":220,"count":2},{"y":52.3875,"x":264,"count":1},{"y":52.3875,"x":308,"count":2},{"y":52.3875,"x":352,"count":1},{"y":52.3875,"x":396,"count":1},{"y":52.3875,"x":440,"count":2},{"y":52.3875,"x":484,"count":1},{"y":52.3875,"x":616,"count":1},{"y":54.646875,"x":44,"count":1},{"y":54.646875,"x":176,"count":1},{"y":54.646875,"x":220,"count":2},{"y":54.646875,"x":352,"count":2},{"y":54.646875,"x":440,"count":2},{"y":54.646875,"x":572,"count":1},{"y":54.646875,"x":616,"count":1},{"y":54.646875,"x":660,"count":1},{"y":54.646875,"x":704,"count":1},{"y":54.646875,"x":748,"count":1},{"y":54.646875,"x":792,"count":1},{"y":54.646875,"x":836,"count":1},{"y":56.90625,"x":88,"count":1},{"y":56.90625,"x":132,"count":1},{"y":56.90625,"x":176,"count":1},{"y":56.90625,"x":308,"count":1},{"y":56.90625,"x":352,"count":4},{"y":56.90625,"x":396,"count":1},{"y":56.90625,"x":484,"count":3},{"y":56.90625,"x":528,"count":1},{"y":56.90625,"x":660,"count":3},{"y":56.90625,"x":704,"count":1},{"y":56.90625,"x":792,"count":1},{"y":56.90625,"x":880,"count":1},{"y":56.90625,"x":968,"count":1},{"y":59.165625,"x":44,"count":1},{"y":59.165625,"x":176,"count":2},{"y":59.165625,"x":220,"count":1},{"y":59.165625,"x":264,"count":1},{"y":59.165625,"x":308,"count":1},{"y":59.165625,"x":352,"count":1},{"y":59.165625,"x":396,"count":1},{"y":59.165625,"x":440,"count":1},{"y":59.165625,"x":484,"count":1},{"y":59.165625,"x":528,"count":1},{"y":59.165625,"x":572,"count":1},{"y":59.165625,"x":704,"count":1},{"y":59.165625,"x":748,"count":1},{"y":59.165625,"x":836,"count":1},{"y":59.165625,"x":880,"count":1},{"y":61.425,"x":220,"count":1},{"y":61.425,"x":264,"count":2},{"y":61.425,"x":308,"count":2},{"y":61.425,"x":352,"count":2},{"y":61.425,"x":396,"count":2},{"y":61.425,"x":528,"count":1},{"y":61.425,"x":572,"count":2},{"y":61.425,"x":660,"count":1},{"y":61.425,"x":704,"count":2},{"y":63.684375,"x":220,"count":2},{"y":63.684375,"x":352,"count":5},{"y":63.684375,"x":440,"count":2},{"y":63.684375,"x":528,"count":2},{"y":63.684375,"x":616,"count":2},{"y":63.684375,"x":660,"count":1},{"y":63.684375,"x":704,"count":2},{"y":63.684375,"x":748,"count":1},{"y":63.684375,"x":792,"count":1},{"y":63.684375,"x":836,"count":1},{"y":63.684375,"x":924,"count":1},{"y":65.94375,"x":88,"count":1},{"y":65.94375,"x":264,"count":1},{"y":65.94375,"x":352,"count":1},{"y":65.94375,"x":396,"count":2},{"y":65.94375,"x":440,"count":1},{"y":65.94375,"x":528,"count":2},{"y":65.94375,"x":572,"count":2},{"y":65.94375,"x":704,"count":1},{"y":65.94375,"x":748,"count":2},{"y":65.94375,"x":792,"count":1},{"y":65.94375,"x":836,"count":1},{"y":65.94375,"x":880,"count":1},{"y":65.94375,"x":924,"count":1},{"y":65.94375,"x":968,"count":1},{"y":65.94375,"x":1012,"count":1},{"y":65.94375,"x":1144,"count":1},{"y":68.203125,"x":176,"count":1},{"y":68.203125,"x":220,"count":1},{"y":68.203125,"x":264,"count":1},{"y":68.203125,"x":352,"count":1},{"y":68.203125,"x":484,"count":2},{"y":68.203125,"x":660,"count":2},{"y":68.203125,"x":704,"count":2},{"y":68.203125,"x":792,"count":3},{"y":70.46249999999999,"x":176,"count":1},{"y":70.46249999999999,"x":396,"count":1},{"y":70.46249999999999,"x":484,"count":1},{"y":70.46249999999999,"x":616,"count":2},{"y":70.46249999999999,"x":660,"count":1},{"y":70.46249999999999,"x":704,"count":2},{"y":70.46249999999999,"x":748,"count":1},{"y":70.46249999999999,"x":792,"count":2},{"y":70.46249999999999,"x":836,"count":1},{"y":70.46249999999999,"x":880,"count":1},{"y":70.46249999999999,"x":968,"count":1},{"y":70.46249999999999,"x":1144,"count":1},{"y":70.46249999999999,"x":1320,"count":1},{"y":72.721875,"x":264,"count":1},{"y":72.721875,"x":396,"count":1},{"y":72.721875,"x":572,"count":2},{"y":72.721875,"x":704,"count":1},{"y":72.721875,"x":748,"count":1},{"y":72.721875,"x":792,"count":1},{"y":72.721875,"x":836,"count":1},{"y":72.721875,"x":880,"count":1},{"y":72.721875,"x":968,"count":1},{"y":72.721875,"x":1012,"count":1},{"y":72.721875,"x":1276,"count":1},{"y":72.721875,"x":1364,"count":1},{"y":74.98125,"x":616,"count":1},{"y":74.98125,"x":748,"count":2},{"y":74.98125,"x":1056,"count":1},{"y":77.240625,"x":440,"count":1},{"y":77.240625,"x":704,"count":1},{"y":77.240625,"x":1012,"count":1},{"y":77.240625,"x":1188,"count":3}],"maxCount":17},"free throw attempts":{"x":{"name":"2 point shots attempts","extent":[0,1408],"delta":44},"y":{"name":"free throw attempts","extent":[0,805],"delta":25.15625},"bins":[{"x":0,"y":0,"count":93},{"x":0,"y":25.15625,"count":1},{"x":44,"y":0,"count":45},{"x":44,"y":25.15625,"count":14},{"x":44,"y":50.3125,"count":4},{"x":88,"y":0,"count":11},{"x":88,"y":25.15625,"count":25},{"x":88,"y":50.3125,"count":10},{"x":88,"y":75.46875,"count":1},{"x":132,"y":0,"count":3},{"x":132,"y":25.15625,"count":12},{"x":132,"y":50.3125,"count":11},{"x":132,"y":75.46875,"count":2},{"x":132,"y":100.625,"count":3},{"x":176,"y":25.15625,"count":3},{"x":176,"y":50.3125,"count":15},{"x":176,"y":75.46875,"count":3},{"x":176,"y":100.625,"count":3},{"x":176,"y":125.78125,"count":3},{"x":176,"y":176.09375,"count":1},{"x":220,"y":25.15625,"count":5},{"x":220,"y":50.3125,"count":7},{"x":220,"y":75.46875,"count":7},{"x":220,"y":100.625,"count":6},{"x":220,"y":125.78125,"count":2},{"x":220,"y":150.9375,"count":2},{"x":220,"y":176.09375,"count":1},{"x":264,"y":25.15625,"count":1},{"x":264,"y":50.3125,"count":3},{"x":264,"y":75.46875,"count":7},{"x":264,"y":100.625,"count":4},{"x":264,"y":125.78125,"count":2},{"x":264,"y":176.09375,"count":2},{"x":264,"y":201.25,"count":1},{"x":308,"y":50.3125,"count":7},{"x":308,"y":75.46875,"count":6},{"x":308,"y":125.78125,"count":3},{"x":308,"y":150.9375,"count":3},{"x":308,"y":176.09375,"count":1},{"x":308,"y":226.40625,"count":1},{"x":352,"y":25.15625,"count":1},{"x":352,"y":50.3125,"count":3},{"x":352,"y":75.46875,"count":2},{"x":352,"y":100.625,"count":9},{"x":352,"y":125.78125,"count":4},{"x":352,"y":150.9375,"count":5},{"x":352,"y":176.09375,"count":3},{"x":352,"y":201.25,"count":1},{"x":396,"y":50.3125,"count":1},{"x":396,"y":75.46875,"count":3},{"x":396,"y":100.625,"count":1},{"x":396,"y":125.78125,"count":4},{"x":396,"y":176.09375,"count":2},{"x":396,"y":201.25,"count":1},{"x":396,"y":226.40625,"count":2},{"x":396,"y":251.5625,"count":1},{"x":396,"y":301.875,"count":1},{"x":440,"y":75.46875,"count":2},{"x":440,"y":125.78125,"count":6},{"x":440,"y":150.9375,"count":1},{"x":440,"y":176.09375,"count":2},{"x":440,"y":201.25,"count":1},{"x":440,"y":327.03125,"count":1},{"x":484,"y":50.3125,"count":1},{"x":484,"y":100.625,"count":1},{"x":484,"y":125.78125,"count":2},{"x":484,"y":176.09375,"count":2},{"x":484,"y":201.25,"count":1},{"x":484,"y":226.40625,"count":1},{"x":484,"y":251.5625,"count":2},{"x":484,"y":276.71875,"count":1},{"x":484,"y":352.1875,"count":1},{"x":528,"y":50.3125,"count":1},{"x":528,"y":100.625,"count":1},{"x":528,"y":125.78125,"count":4},{"x":528,"y":201.25,"count":2},{"x":528,"y":276.71875,"count":1},{"x":528,"y":301.875,"count":1},{"x":572,"y":176.09375,"count":2},{"x":572,"y":226.40625,"count":2},{"x":572,"y":251.5625,"count":1},{"x":572,"y":276.71875,"count":1},{"x":572,"y":377.34375,"count":1},{"x":572,"y":402.5,"count":1},{"x":616,"y":100.625,"count":1},{"x":616,"y":176.09375,"count":2},{"x":616,"y":201.25,"count":2},{"x":616,"y":226.40625,"count":1},{"x":616,"y":276.71875,"count":1},{"x":616,"y":327.03125,"count":1},{"x":660,"y":125.78125,"count":1},{"x":660,"y":176.09375,"count":1},{"x":660,"y":201.25,"count":1},{"x":660,"y":226.40625,"count":3},{"x":660,"y":251.5625,"count":1},{"x":660,"y":301.875,"count":1},{"x":660,"y":352.1875,"count":1},{"x":704,"y":176.09375,"count":1},{"x":704,"y":226.40625,"count":2},{"x":704,"y":251.5625,"count":3},{"x":704,"y":276.71875,"count":2},{"x":704,"y":301.875,"count":2},{"x":704,"y":327.03125,"count":2},{"x":704,"y":402.5,"count":1},{"x":704,"y":654.0625,"count":1},{"x":748,"y":251.5625,"count":1},{"x":748,"y":276.71875,"count":1},{"x":748,"y":301.875,"count":1},{"x":748,"y":327.03125,"count":3},{"x":748,"y":352.1875,"count":1},{"x":748,"y":377.34375,"count":1},{"x":748,"y":402.5,"count":1},{"x":792,"y":176.09375,"count":1},{"x":792,"y":301.875,"count":3},{"x":792,"y":327.03125,"count":2},{"x":792,"y":352.1875,"count":1},{"x":792,"y":377.34375,"count":1},{"x":792,"y":402.5,"count":1},{"x":792,"y":628.90625,"count":1},{"x":836,"y":201.25,"count":1},{"x":836,"y":226.40625,"count":2},{"x":836,"y":251.5625,"count":1},{"x":836,"y":352.1875,"count":1},{"x":836,"y":452.8125,"count":1},{"x":880,"y":176.09375,"count":1},{"x":880,"y":276.71875,"count":1},{"x":880,"y":301.875,"count":1},{"x":880,"y":327.03125,"count":1},{"x":880,"y":628.90625,"count":1},{"x":924,"y":226.40625,"count":1},{"x":924,"y":352.1875,"count":1},{"x":968,"y":176.09375,"count":1},{"x":968,"y":276.71875,"count":2},{"x":968,"y":427.65625,"count":1},{"x":1012,"y":352.1875,"count":1},{"x":1012,"y":377.34375,"count":1},{"x":1012,"y":578.59375,"count":1},{"x":1056,"y":427.65625,"count":1},{"x":1144,"y":327.03125,"count":1},{"x":1144,"y":578.59375,"count":1},{"x":1188,"y":528.28125,"count":1},{"x":1188,"y":628.90625,"count":1},{"x":1188,"y":779.84375,"count":1},{"x":1276,"y":654.0625,"count":1},{"x":1320,"y":276.71875,"count":1},{"x":1364,"y":352.1875,"count":1}]}},"percentage of team minutes":{"percentage of team assists":{"y":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"x":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"y":0,"x":7.2,"count":4},{"y":0,"x":9.459375,"count":1},{"y":0,"x":11.71875,"count":1},{"y":0,"x":13.978124999999999,"count":2},{"y":0,"x":16.2375,"count":4},{"y":0,"x":18.496875,"count":1},{"y":0,"x":20.756249999999998,"count":1},{"y":0,"x":23.015625,"count":1},{"y":0,"x":27.534374999999997,"count":3},{"y":1.5375,"x":13.978124999999999,"count":2},{"y":1.5375,"x":16.2375,"count":1},{"y":1.5375,"x":18.496875,"count":1},{"y":1.5375,"x":25.275,"count":2},{"y":1.5375,"x":27.534374999999997,"count":1},{"y":1.5375,"x":29.79375,"count":2},{"y":1.5375,"x":32.053125,"count":1},{"y":1.5375,"x":38.83125,"count":1},{"y":1.5375,"x":65.94375,"count":1},{"y":3.075,"x":11.71875,"count":1},{"y":3.075,"x":13.978124999999999,"count":6},{"y":3.075,"x":18.496875,"count":6},{"y":3.075,"x":20.756249999999998,"count":2},{"y":3.075,"x":25.275,"count":3},{"y":3.075,"x":27.534374999999997,"count":3},{"y":3.075,"x":29.79375,"count":5},{"y":3.075,"x":38.83125,"count":1},{"y":3.075,"x":41.090625,"count":2},{"y":3.075,"x":45.609375,"count":1},{"y":3.075,"x":50.128125000000004,"count":2},{"y":3.075,"x":56.90625,"count":1},{"y":3.075,"x":63.684375,"count":2},{"y":3.075,"x":70.46249999999999,"count":2},{"y":4.612500000000001,"x":9.459375,"count":1},{"y":4.612500000000001,"x":11.71875,"count":3},{"y":4.612500000000001,"x":13.978124999999999,"count":2},{"y":4.612500000000001,"x":16.2375,"count":3},{"y":4.612500000000001,"x":18.496875,"count":2},{"y":4.612500000000001,"x":20.756249999999998,"count":4},{"y":4.612500000000001,"x":23.015625,"count":4},{"y":4.612500000000001,"x":25.275,"count":4},{"y":4.612500000000001,"x":27.534374999999997,"count":2},{"y":4.612500000000001,"x":29.79375,"count":4},{"y":4.612500000000001,"x":34.3125,"count":1},{"y":4.612500000000001,"x":36.571875,"count":3},{"y":4.612500000000001,"x":38.83125,"count":3},{"y":4.612500000000001,"x":41.090625,"count":3},{"y":4.612500000000001,"x":43.35,"count":1},{"y":4.612500000000001,"x":45.609375,"count":1},{"y":4.612500000000001,"x":47.86875,"count":3},{"y":4.612500000000001,"x":50.128125000000004,"count":2},{"y":4.612500000000001,"x":52.3875,"count":2},{"y":4.612500000000001,"x":54.646875,"count":1},{"y":4.612500000000001,"x":56.90625,"count":1},{"y":4.612500000000001,"x":61.425,"count":3},{"y":4.612500000000001,"x":63.684375,"count":1},{"y":4.612500000000001,"x":65.94375,"count":1},{"y":6.15,"x":11.71875,"count":3},{"y":6.15,"x":13.978124999999999,"count":3},{"y":6.15,"x":16.2375,"count":3},{"y":6.15,"x":18.496875,"count":3},{"y":6.15,"x":20.756249999999998,"count":2},{"y":6.15,"x":23.015625,"count":1},{"y":6.15,"x":25.275,"count":2},{"y":6.15,"x":27.534374999999997,"count":2},{"y":6.15,"x":29.79375,"count":1},{"y":6.15,"x":32.053125,"count":2},{"y":6.15,"x":34.3125,"count":4},{"y":6.15,"x":36.571875,"count":2},{"y":6.15,"x":38.83125,"count":2},{"y":6.15,"x":43.35,"count":1},{"y":6.15,"x":45.609375,"count":2},{"y":6.15,"x":47.86875,"count":2},{"y":6.15,"x":54.646875,"count":5},{"y":6.15,"x":56.90625,"count":3},{"y":6.15,"x":59.165625,"count":2},{"y":6.15,"x":61.425,"count":1},{"y":6.15,"x":63.684375,"count":1},{"y":7.6875,"x":11.71875,"count":2},{"y":7.6875,"x":13.978124999999999,"count":2},{"y":7.6875,"x":16.2375,"count":2},{"y":7.6875,"x":18.496875,"count":2},{"y":7.6875,"x":20.756249999999998,"count":2},{"y":7.6875,"x":23.015625,"count":2},{"y":7.6875,"x":25.275,"count":2},{"y":7.6875,"x":27.534374999999997,"count":1},{"y":7.6875,"x":29.79375,"count":2},{"y":7.6875,"x":32.053125,"count":5},{"y":7.6875,"x":34.3125,"count":2},{"y":7.6875,"x":36.571875,"count":2},{"y":7.6875,"x":38.83125,"count":5},{"y":7.6875,"x":41.090625,"count":2},{"y":7.6875,"x":43.35,"count":2},{"y":7.6875,"x":45.609375,"count":2},{"y":7.6875,"x":47.86875,"count":2},{"y":7.6875,"x":50.128125000000004,"count":2},{"y":7.6875,"x":52.3875,"count":3},{"y":7.6875,"x":54.646875,"count":2},{"y":7.6875,"x":56.90625,"count":4},{"y":7.6875,"x":59.165625,"count":2},{"y":7.6875,"x":61.425,"count":2},{"y":7.6875,"x":63.684375,"count":2},{"y":7.6875,"x":65.94375,"count":2},{"y":7.6875,"x":68.203125,"count":1},{"y":7.6875,"x":70.46249999999999,"count":2},{"y":9.225000000000001,"x":13.978124999999999,"count":3},{"y":9.225000000000001,"x":16.2375,"count":2},{"y":9.225000000000001,"x":18.496875,"count":1},{"y":9.225000000000001,"x":20.756249999999998,"count":2},{"y":9.225000000000001,"x":23.015625,"count":2},{"y":9.225000000000001,"x":25.275,"count":1},{"y":9.225000000000001,"x":32.053125,"count":1},{"y":9.225000000000001,"x":34.3125,"count":3},{"y":9.225000000000001,"x":36.571875,"count":2},{"y":9.225000000000001,"x":38.83125,"count":2},{"y":9.225000000000001,"x":43.35,"count":1},{"y":9.225000000000001,"x":45.609375,"count":1},{"y":9.225000000000001,"x":52.3875,"count":2},{"y":9.225000000000001,"x":54.646875,"count":3},{"y":9.225000000000001,"x":56.90625,"count":1},{"y":9.225000000000001,"x":59.165625,"count":1},{"y":9.225000000000001,"x":63.684375,"count":3},{"y":9.225000000000001,"x":65.94375,"count":1},{"y":9.225000000000001,"x":68.203125,"count":1},{"y":9.225000000000001,"x":72.721875,"count":1},{"y":10.762500000000001,"x":9.459375,"count":2},{"y":10.762500000000001,"x":11.71875,"count":3},{"y":10.762500000000001,"x":18.496875,"count":2},{"y":10.762500000000001,"x":20.756249999999998,"count":1},{"y":10.762500000000001,"x":25.275,"count":1},{"y":10.762500000000001,"x":27.534374999999997,"count":1},{"y":10.762500000000001,"x":29.79375,"count":1},{"y":10.762500000000001,"x":32.053125,"count":1},{"y":10.762500000000001,"x":34.3125,"count":4},{"y":10.762500000000001,"x":36.571875,"count":2},{"y":10.762500000000001,"x":38.83125,"count":3},{"y":10.762500000000001,"x":41.090625,"count":3},{"y":10.762500000000001,"x":43.35,"count":1},{"y":10.762500000000001,"x":45.609375,"count":2},{"y":10.762500000000001,"x":47.86875,"count":1},{"y":10.762500000000001,"x":50.128125000000004,"count":1},{"y":10.762500000000001,"x":52.3875,"count":2},{"y":10.762500000000001,"x":54.646875,"count":2},{"y":10.762500000000001,"x":56.90625,"count":1},{"y":10.762500000000001,"x":59.165625,"count":1},{"y":10.762500000000001,"x":65.94375,"count":1},{"y":10.762500000000001,"x":68.203125,"count":3},{"y":10.762500000000001,"x":70.46249999999999,"count":1},{"y":10.762500000000001,"x":77.240625,"count":1},{"y":12.3,"x":9.459375,"count":3},{"y":12.3,"x":11.71875,"count":2},{"y":12.3,"x":13.978124999999999,"count":1},{"y":12.3,"x":18.496875,"count":1},{"y":12.3,"x":27.534374999999997,"count":1},{"y":12.3,"x":36.571875,"count":2},{"y":12.3,"x":38.83125,"count":1},{"y":12.3,"x":41.090625,"count":2},{"y":12.3,"x":43.35,"count":1},{"y":12.3,"x":45.609375,"count":1},{"y":12.3,"x":50.128125000000004,"count":1},{"y":12.3,"x":54.646875,"count":2},{"y":12.3,"x":56.90625,"count":1},{"y":12.3,"x":59.165625,"count":1},{"y":12.3,"x":63.684375,"count":2},{"y":12.3,"x":68.203125,"count":1},{"y":12.3,"x":70.46249999999999,"count":2},{"y":12.3,"x":72.721875,"count":1},{"y":13.8375,"x":9.459375,"count":2},{"y":13.8375,"x":13.978124999999999,"count":1},{"y":13.8375,"x":20.756249999999998,"count":2},{"y":13.8375,"x":23.015625,"count":1},{"y":13.8375,"x":25.275,"count":1},{"y":13.8375,"x":29.79375,"count":1},{"y":13.8375,"x":36.571875,"count":1},{"y":13.8375,"x":38.83125,"count":1},{"y":13.8375,"x":47.86875,"count":1},{"y":13.8375,"x":50.128125000000004,"count":1},{"y":13.8375,"x":52.3875,"count":1},{"y":13.8375,"x":56.90625,"count":1},{"y":13.8375,"x":63.684375,"count":1},{"y":13.8375,"x":65.94375,"count":4},{"y":13.8375,"x":72.721875,"count":1},{"y":15.375,"x":11.71875,"count":1},{"y":15.375,"x":16.2375,"count":1},{"y":15.375,"x":23.015625,"count":1},{"y":15.375,"x":25.275,"count":1},{"y":15.375,"x":32.053125,"count":1},{"y":15.375,"x":36.571875,"count":1},{"y":15.375,"x":41.090625,"count":1},{"y":15.375,"x":47.86875,"count":1},{"y":15.375,"x":50.128125000000004,"count":2},{"y":15.375,"x":59.165625,"count":2},{"y":15.375,"x":63.684375,"count":2},{"y":15.375,"x":68.203125,"count":3},{"y":15.375,"x":77.240625,"count":1},{"y":16.9125,"x":23.015625,"count":2},{"y":16.9125,"x":27.534374999999997,"count":1},{"y":16.9125,"x":29.79375,"count":2},{"y":16.9125,"x":32.053125,"count":1},{"y":16.9125,"x":36.571875,"count":1},{"y":16.9125,"x":50.128125000000004,"count":1},{"y":16.9125,"x":56.90625,"count":2},{"y":16.9125,"x":61.425,"count":2},{"y":16.9125,"x":63.684375,"count":2},{"y":16.9125,"x":65.94375,"count":2},{"y":16.9125,"x":68.203125,"count":1},{"y":16.9125,"x":70.46249999999999,"count":2},{"y":16.9125,"x":72.721875,"count":1},{"y":16.9125,"x":74.98125,"count":1},{"y":18.450000000000003,"x":9.459375,"count":2},{"y":18.450000000000003,"x":13.978124999999999,"count":1},{"y":18.450000000000003,"x":29.79375,"count":1},{"y":18.450000000000003,"x":32.053125,"count":1},{"y":18.450000000000003,"x":38.83125,"count":1},{"y":18.450000000000003,"x":41.090625,"count":1},{"y":18.450000000000003,"x":59.165625,"count":1},{"y":18.450000000000003,"x":63.684375,"count":1},{"y":18.450000000000003,"x":72.721875,"count":2},{"y":18.450000000000003,"x":77.240625,"count":1},{"y":19.9875,"x":16.2375,"count":1},{"y":19.9875,"x":18.496875,"count":2},{"y":19.9875,"x":38.83125,"count":2},{"y":19.9875,"x":50.128125000000004,"count":1},{"y":19.9875,"x":52.3875,"count":1},{"y":19.9875,"x":72.721875,"count":1},{"y":21.525000000000002,"x":11.71875,"count":1},{"y":21.525000000000002,"x":13.978124999999999,"count":1},{"y":21.525000000000002,"x":23.015625,"count":1},{"y":21.525000000000002,"x":25.275,"count":1},{"y":21.525000000000002,"x":29.79375,"count":1},{"y":21.525000000000002,"x":34.3125,"count":1},{"y":21.525000000000002,"x":43.35,"count":1},{"y":21.525000000000002,"x":45.609375,"count":1},{"y":21.525000000000002,"x":52.3875,"count":1},{"y":21.525000000000002,"x":56.90625,"count":2},{"y":21.525000000000002,"x":59.165625,"count":1},{"y":21.525000000000002,"x":61.425,"count":3},{"y":21.525000000000002,"x":70.46249999999999,"count":1},{"y":21.525000000000002,"x":72.721875,"count":1},{"y":23.0625,"x":18.496875,"count":1},{"y":23.0625,"x":20.756249999999998,"count":1},{"y":23.0625,"x":47.86875,"count":1},{"y":23.0625,"x":56.90625,"count":1},{"y":23.0625,"x":59.165625,"count":1},{"y":23.0625,"x":74.98125,"count":1},{"y":24.6,"x":23.015625,"count":1},{"y":24.6,"x":29.79375,"count":1},{"y":24.6,"x":36.571875,"count":1},{"y":24.6,"x":38.83125,"count":1},{"y":24.6,"x":41.090625,"count":1},{"y":24.6,"x":63.684375,"count":1},{"y":24.6,"x":65.94375,"count":1},{"y":24.6,"x":72.721875,"count":1},{"y":24.6,"x":74.98125,"count":1},{"y":26.137500000000003,"x":16.2375,"count":3},{"y":26.137500000000003,"x":27.534374999999997,"count":1},{"y":26.137500000000003,"x":32.053125,"count":1},{"y":26.137500000000003,"x":47.86875,"count":1},{"y":26.137500000000003,"x":56.90625,"count":1},{"y":26.137500000000003,"x":65.94375,"count":2},{"y":26.137500000000003,"x":70.46249999999999,"count":1},{"y":26.137500000000003,"x":77.240625,"count":2},{"y":27.675,"x":41.090625,"count":1},{"y":27.675,"x":45.609375,"count":1},{"y":27.675,"x":59.165625,"count":1},{"y":27.675,"x":61.425,"count":1},{"y":27.675,"x":70.46249999999999,"count":1},{"y":29.212500000000002,"x":25.275,"count":1},{"y":29.212500000000002,"x":36.571875,"count":1},{"y":29.212500000000002,"x":43.35,"count":1},{"y":29.212500000000002,"x":56.90625,"count":1},{"y":29.212500000000002,"x":61.425,"count":1},{"y":29.212500000000002,"x":65.94375,"count":1},{"y":29.212500000000002,"x":68.203125,"count":1},{"y":29.212500000000002,"x":70.46249999999999,"count":1},{"y":29.212500000000002,"x":72.721875,"count":1},{"y":30.75,"x":18.496875,"count":1},{"y":30.75,"x":29.79375,"count":1},{"y":30.75,"x":41.090625,"count":1},{"y":30.75,"x":59.165625,"count":1},{"y":30.75,"x":61.425,"count":1},{"y":30.75,"x":70.46249999999999,"count":1},{"y":30.75,"x":77.240625,"count":1},{"y":32.2875,"x":36.571875,"count":2},{"y":32.2875,"x":50.128125000000004,"count":1},{"y":32.2875,"x":63.684375,"count":1},{"y":32.2875,"x":65.94375,"count":1},{"y":32.2875,"x":70.46249999999999,"count":1},{"y":33.825,"x":11.71875,"count":1},{"y":33.825,"x":27.534374999999997,"count":1},{"y":33.825,"x":45.609375,"count":1},{"y":33.825,"x":59.165625,"count":1},{"y":33.825,"x":63.684375,"count":1},{"y":33.825,"x":65.94375,"count":1},{"y":33.825,"x":68.203125,"count":1},{"y":33.825,"x":72.721875,"count":1},{"y":36.900000000000006,"x":65.94375,"count":1},{"y":36.900000000000006,"x":72.721875,"count":1},{"y":38.4375,"x":65.94375,"count":1},{"y":39.975,"x":41.090625,"count":1},{"y":39.975,"x":61.425,"count":1},{"y":39.975,"x":72.721875,"count":1},{"y":39.975,"x":74.98125,"count":1},{"y":41.5125,"x":16.2375,"count":1},{"y":44.587500000000006,"x":59.165625,"count":1},{"y":47.6625,"x":68.203125,"count":1},{"y":47.6625,"x":70.46249999999999,"count":1}],"maxCount":6},"2 point shots attempts":{"x":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"y":{"name":"2 point shots attempts","extent":[0,1408],"delta":44},"bins":[{"x":7.2,"y":0,"count":4},{"x":9.459375,"y":0,"count":11},{"x":11.71875,"y":0,"count":17},{"x":11.71875,"y":44,"count":1},{"x":13.978124999999999,"y":0,"count":17},{"x":13.978124999999999,"y":44,"count":4},{"x":13.978124999999999,"y":88,"count":3},{"x":16.2375,"y":0,"count":9},{"x":16.2375,"y":44,"count":11},{"x":16.2375,"y":88,"count":1},{"x":18.496875,"y":0,"count":10},{"x":18.496875,"y":44,"count":8},{"x":18.496875,"y":88,"count":4},{"x":18.496875,"y":132,"count":1},{"x":20.756249999999998,"y":0,"count":5},{"x":20.756249999999998,"y":44,"count":7},{"x":20.756249999999998,"y":88,"count":3},{"x":20.756249999999998,"y":132,"count":1},{"x":20.756249999999998,"y":220,"count":1},{"x":23.015625,"y":0,"count":8},{"x":23.015625,"y":44,"count":4},{"x":23.015625,"y":88,"count":3},{"x":23.015625,"y":132,"count":1},{"x":25.275,"y":0,"count":4},{"x":25.275,"y":44,"count":6},{"x":25.275,"y":88,"count":3},{"x":25.275,"y":132,"count":3},{"x":25.275,"y":176,"count":1},{"x":25.275,"y":264,"count":1},{"x":25.275,"y":396,"count":1},{"x":27.534374999999997,"y":0,"count":1},{"x":27.534374999999997,"y":44,"count":5},{"x":27.534374999999997,"y":88,"count":5},{"x":27.534374999999997,"y":132,"count":3},{"x":27.534374999999997,"y":220,"count":3},{"x":29.79375,"y":0,"count":5},{"x":29.79375,"y":44,"count":2},{"x":29.79375,"y":88,"count":2},{"x":29.79375,"y":132,"count":4},{"x":29.79375,"y":176,"count":5},{"x":29.79375,"y":264,"count":2},{"x":29.79375,"y":308,"count":1},{"x":29.79375,"y":352,"count":1},{"x":32.053125,"y":0,"count":1},{"x":32.053125,"y":44,"count":3},{"x":32.053125,"y":88,"count":4},{"x":32.053125,"y":132,"count":3},{"x":32.053125,"y":176,"count":1},{"x":32.053125,"y":220,"count":2},{"x":34.3125,"y":44,"count":2},{"x":34.3125,"y":88,"count":3},{"x":34.3125,"y":132,"count":2},{"x":34.3125,"y":176,"count":2},{"x":34.3125,"y":220,"count":1},{"x":34.3125,"y":264,"count":1},{"x":34.3125,"y":308,"count":1},{"x":34.3125,"y":352,"count":1},{"x":34.3125,"y":440,"count":1},{"x":34.3125,"y":528,"count":1},{"x":36.571875,"y":88,"count":5},{"x":36.571875,"y":132,"count":3},{"x":36.571875,"y":176,"count":1},{"x":36.571875,"y":220,"count":3},{"x":36.571875,"y":264,"count":2},{"x":36.571875,"y":308,"count":3},{"x":36.571875,"y":352,"count":1},{"x":36.571875,"y":396,"count":2},{"x":38.83125,"y":44,"count":4},{"x":38.83125,"y":88,"count":3},{"x":38.83125,"y":132,"count":1},{"x":38.83125,"y":176,"count":4},{"x":38.83125,"y":220,"count":4},{"x":38.83125,"y":264,"count":2},{"x":38.83125,"y":308,"count":2},{"x":38.83125,"y":352,"count":2},{"x":38.83125,"y":440,"count":1},{"x":41.090625,"y":0,"count":1},{"x":41.090625,"y":44,"count":2},{"x":41.090625,"y":88,"count":2},{"x":41.090625,"y":132,"count":5},{"x":41.090625,"y":176,"count":2},{"x":41.090625,"y":308,"count":1},{"x":41.090625,"y":352,"count":3},{"x":41.090625,"y":484,"count":2},{"x":43.35,"y":0,"count":1},{"x":43.35,"y":264,"count":3},{"x":43.35,"y":308,"count":1},{"x":43.35,"y":352,"count":1},{"x":43.35,"y":396,"count":1},{"x":43.35,"y":484,"count":1},{"x":43.35,"y":616,"count":1},{"x":45.609375,"y":88,"count":3},{"x":45.609375,"y":176,"count":2},{"x":45.609375,"y":220,"count":3},{"x":45.609375,"y":308,"count":1},{"x":45.609375,"y":352,"count":2},{"x":45.609375,"y":396,"count":1},{"x":45.609375,"y":528,"count":1},{"x":47.86875,"y":44,"count":2},{"x":47.86875,"y":132,"count":1},{"x":47.86875,"y":176,"count":3},{"x":47.86875,"y":220,"count":2},{"x":47.86875,"y":308,"count":2},{"x":47.86875,"y":396,"count":1},{"x":47.86875,"y":440,"count":1},{"x":50.128125000000004,"y":88,"count":1},{"x":50.128125000000004,"y":132,"count":2},{"x":50.128125000000004,"y":220,"count":2},{"x":50.128125000000004,"y":264,"count":2},{"x":50.128125000000004,"y":308,"count":3},{"x":50.128125000000004,"y":396,"count":1},{"x":50.128125000000004,"y":440,"count":1},{"x":50.128125000000004,"y":484,"count":1},{"x":50.128125000000004,"y":528,"count":1},{"x":52.3875,"y":176,"count":1},{"x":52.3875,"y":220,"count":2},{"x":52.3875,"y":264,"count":1},{"x":52.3875,"y":308,"count":2},{"x":52.3875,"y":352,"count":1},{"x":52.3875,"y":396,"count":1},{"x":52.3875,"y":440,"count":2},{"x":52.3875,"y":484,"count":1},{"x":52.3875,"y":616,"count":1},{"x":54.646875,"y":44,"count":1},{"x":54.646875,"y":176,"count":1},{"x":54.646875,"y":220,"count":2},{"x":54.646875,"y":352,"count":2},{"x":54.646875,"y":440,"count":2},{"x":54.646875,"y":572,"count":1},{"x":54.646875,"y":616,"count":1},{"x":54.646875,"y":660,"count":1},{"x":54.646875,"y":704,"count":1},{"x":54.646875,"y":748,"count":1},{"x":54.646875,"y":792,"count":1},{"x":54.646875,"y":836,"count":1},{"x":56.90625,"y":88,"count":1},{"x":56.90625,"y":132,"count":1},{"x":56.90625,"y":176,"count":1},{"x":56.90625,"y":308,"count":1},{"x":56.90625,"y":352,"count":4},{"x":56.90625,"y":396,"count":1},{"x":56.90625,"y":484,"count":3},{"x":56.90625,"y":528,"count":1},{"x":56.90625,"y":660,"count":3},{"x":56.90625,"y":704,"count":1},{"x":56.90625,"y":792,"count":1},{"x":56.90625,"y":880,"count":1},{"x":56.90625,"y":968,"count":1},{"x":59.165625,"y":44,"count":1},{"x":59.165625,"y":176,"count":2},{"x":59.165625,"y":220,"count":1},{"x":59.165625,"y":264,"count":1},{"x":59.165625,"y":308,"count":1},{"x":59.165625,"y":352,"count":1},{"x":59.165625,"y":396,"count":1},{"x":59.165625,"y":440,"count":1},{"x":59.165625,"y":484,"count":1},{"x":59.165625,"y":528,"count":1},{"x":59.165625,"y":572,"count":1},{"x":59.165625,"y":704,"count":1},{"x":59.165625,"y":748,"count":1},{"x":59.165625,"y":836,"count":1},{"x":59.165625,"y":880,"count":1},{"x":61.425,"y":220,"count":1},{"x":61.425,"y":264,"count":2},{"x":61.425,"y":308,"count":2},{"x":61.425,"y":352,"count":2},{"x":61.425,"y":396,"count":2},{"x":61.425,"y":528,"count":1},{"x":61.425,"y":572,"count":2},{"x":61.425,"y":660,"count":1},{"x":61.425,"y":704,"count":2},{"x":63.684375,"y":220,"count":2},{"x":63.684375,"y":352,"count":5},{"x":63.684375,"y":440,"count":2},{"x":63.684375,"y":528,"count":2},{"x":63.684375,"y":616,"count":2},{"x":63.684375,"y":660,"count":1},{"x":63.684375,"y":704,"count":2},{"x":63.684375,"y":748,"count":1},{"x":63.684375,"y":792,"count":1},{"x":63.684375,"y":836,"count":1},{"x":63.684375,"y":924,"count":1},{"x":65.94375,"y":88,"count":1},{"x":65.94375,"y":264,"count":1},{"x":65.94375,"y":352,"count":1},{"x":65.94375,"y":396,"count":2},{"x":65.94375,"y":440,"count":1},{"x":65.94375,"y":528,"count":2},{"x":65.94375,"y":572,"count":2},{"x":65.94375,"y":704,"count":1},{"x":65.94375,"y":748,"count":2},{"x":65.94375,"y":792,"count":1},{"x":65.94375,"y":836,"count":1},{"x":65.94375,"y":880,"count":1},{"x":65.94375,"y":924,"count":1},{"x":65.94375,"y":968,"count":1},{"x":65.94375,"y":1012,"count":1},{"x":65.94375,"y":1144,"count":1},{"x":68.203125,"y":176,"count":1},{"x":68.203125,"y":220,"count":1},{"x":68.203125,"y":264,"count":1},{"x":68.203125,"y":352,"count":1},{"x":68.203125,"y":484,"count":2},{"x":68.203125,"y":660,"count":2},{"x":68.203125,"y":704,"count":2},{"x":68.203125,"y":792,"count":3},{"x":70.46249999999999,"y":176,"count":1},{"x":70.46249999999999,"y":396,"count":1},{"x":70.46249999999999,"y":484,"count":1},{"x":70.46249999999999,"y":616,"count":2},{"x":70.46249999999999,"y":660,"count":1},{"x":70.46249999999999,"y":704,"count":2},{"x":70.46249999999999,"y":748,"count":1},{"x":70.46249999999999,"y":792,"count":2},{"x":70.46249999999999,"y":836,"count":1},{"x":70.46249999999999,"y":880,"count":1},{"x":70.46249999999999,"y":968,"count":1},{"x":70.46249999999999,"y":1144,"count":1},{"x":70.46249999999999,"y":1320,"count":1},{"x":72.721875,"y":264,"count":1},{"x":72.721875,"y":396,"count":1},{"x":72.721875,"y":572,"count":2},{"x":72.721875,"y":704,"count":1},{"x":72.721875,"y":748,"count":1},{"x":72.721875,"y":792,"count":1},{"x":72.721875,"y":836,"count":1},{"x":72.721875,"y":880,"count":1},{"x":72.721875,"y":968,"count":1},{"x":72.721875,"y":1012,"count":1},{"x":72.721875,"y":1276,"count":1},{"x":72.721875,"y":1364,"count":1},{"x":74.98125,"y":616,"count":1},{"x":74.98125,"y":748,"count":2},{"x":74.98125,"y":1056,"count":1},{"x":77.240625,"y":440,"count":1},{"x":77.240625,"y":704,"count":1},{"x":77.240625,"y":1012,"count":1},{"x":77.240625,"y":1188,"count":3}]},"steals per game":{"y":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"x":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"y":0,"x":7.2,"count":1},{"y":0,"x":9.459375,"count":6},{"y":0,"x":11.71875,"count":7},{"y":0,"x":13.978124999999999,"count":3},{"y":0,"x":18.496875,"count":3},{"y":0,"x":20.756249999999998,"count":2},{"y":0,"x":23.015625,"count":1},{"y":0,"x":25.275,"count":2},{"y":0,"x":29.79375,"count":1},{"y":0.0775,"x":9.459375,"count":2},{"y":0.0775,"x":11.71875,"count":2},{"y":0.0775,"x":13.978124999999999,"count":8},{"y":0.0775,"x":16.2375,"count":3},{"y":0.0775,"x":18.496875,"count":4},{"y":0.0775,"x":20.756249999999998,"count":2},{"y":0.0775,"x":23.015625,"count":3},{"y":0.0775,"x":25.275,"count":1},{"y":0.0775,"x":27.534374999999997,"count":1},{"y":0.155,"x":9.459375,"count":1},{"y":0.155,"x":11.71875,"count":5},{"y":0.155,"x":13.978124999999999,"count":7},{"y":0.155,"x":16.2375,"count":8},{"y":0.155,"x":18.496875,"count":5},{"y":0.155,"x":23.015625,"count":1},{"y":0.155,"x":25.275,"count":3},{"y":0.155,"x":27.534374999999997,"count":1},{"y":0.155,"x":29.79375,"count":1},{"y":0.155,"x":38.83125,"count":1},{"y":0.23249999999999998,"x":9.459375,"count":1},{"y":0.23249999999999998,"x":11.71875,"count":3},{"y":0.23249999999999998,"x":16.2375,"count":3},{"y":0.23249999999999998,"x":18.496875,"count":3},{"y":0.23249999999999998,"x":20.756249999999998,"count":3},{"y":0.23249999999999998,"x":23.015625,"count":1},{"y":0.23249999999999998,"x":25.275,"count":1},{"y":0.23249999999999998,"x":27.534374999999997,"count":2},{"y":0.23249999999999998,"x":29.79375,"count":2},{"y":0.23249999999999998,"x":32.053125,"count":1},{"y":0.23249999999999998,"x":34.3125,"count":1},{"y":0.23249999999999998,"x":38.83125,"count":3},{"y":0.23249999999999998,"x":41.090625,"count":2},{"y":0.23249999999999998,"x":56.90625,"count":1},{"y":0.31,"x":11.71875,"count":1},{"y":0.31,"x":13.978124999999999,"count":4},{"y":0.31,"x":16.2375,"count":2},{"y":0.31,"x":18.496875,"count":3},{"y":0.31,"x":20.756249999999998,"count":4},{"y":0.31,"x":23.015625,"count":2},{"y":0.31,"x":25.275,"count":5},{"y":0.31,"x":27.534374999999997,"count":3},{"y":0.31,"x":29.79375,"count":4},{"y":0.31,"x":32.053125,"count":3},{"y":0.31,"x":34.3125,"count":4},{"y":0.31,"x":36.571875,"count":5},{"y":0.31,"x":38.83125,"count":1},{"y":0.31,"x":41.090625,"count":1},{"y":0.31,"x":43.35,"count":1},{"y":0.31,"x":45.609375,"count":2},{"y":0.31,"x":50.128125000000004,"count":1},{"y":0.31,"x":52.3875,"count":1},{"y":0.31,"x":54.646875,"count":1},{"y":0.31,"x":59.165625,"count":2},{"y":0.31,"x":63.684375,"count":1},{"y":0.3875,"x":18.496875,"count":1},{"y":0.3875,"x":20.756249999999998,"count":2},{"y":0.3875,"x":25.275,"count":2},{"y":0.3875,"x":27.534374999999997,"count":3},{"y":0.3875,"x":29.79375,"count":4},{"y":0.3875,"x":32.053125,"count":2},{"y":0.3875,"x":34.3125,"count":3},{"y":0.3875,"x":36.571875,"count":2},{"y":0.3875,"x":38.83125,"count":6},{"y":0.3875,"x":41.090625,"count":2},{"y":0.3875,"x":43.35,"count":1},{"y":0.3875,"x":50.128125000000004,"count":1},{"y":0.3875,"x":56.90625,"count":1},{"y":0.3875,"x":63.684375,"count":1},{"y":0.3875,"x":70.46249999999999,"count":1},{"y":0.46499999999999997,"x":7.2,"count":2},{"y":0.46499999999999997,"x":9.459375,"count":1},{"y":0.46499999999999997,"x":16.2375,"count":3},{"y":0.46499999999999997,"x":18.496875,"count":3},{"y":0.46499999999999997,"x":20.756249999999998,"count":2},{"y":0.46499999999999997,"x":23.015625,"count":1},{"y":0.46499999999999997,"x":25.275,"count":4},{"y":0.46499999999999997,"x":27.534374999999997,"count":3},{"y":0.46499999999999997,"x":29.79375,"count":3},{"y":0.46499999999999997,"x":32.053125,"count":2},{"y":0.46499999999999997,"x":34.3125,"count":2},{"y":0.46499999999999997,"x":36.571875,"count":2},{"y":0.46499999999999997,"x":38.83125,"count":2},{"y":0.46499999999999997,"x":41.090625,"count":3},{"y":0.46499999999999997,"x":43.35,"count":1},{"y":0.46499999999999997,"x":45.609375,"count":3},{"y":0.46499999999999997,"x":47.86875,"count":1},{"y":0.46499999999999997,"x":52.3875,"count":2},{"y":0.46499999999999997,"x":54.646875,"count":2},{"y":0.46499999999999997,"x":56.90625,"count":2},{"y":0.46499999999999997,"x":59.165625,"count":2},{"y":0.46499999999999997,"x":61.425,"count":1},{"y":0.46499999999999997,"x":63.684375,"count":1},{"y":0.46499999999999997,"x":65.94375,"count":2},{"y":0.46499999999999997,"x":70.46249999999999,"count":1},{"y":0.5425,"x":13.978124999999999,"count":1},{"y":0.5425,"x":16.2375,"count":2},{"y":0.5425,"x":18.496875,"count":1},{"y":0.5425,"x":23.015625,"count":4},{"y":0.5425,"x":29.79375,"count":2},{"y":0.5425,"x":32.053125,"count":1},{"y":0.5425,"x":34.3125,"count":2},{"y":0.5425,"x":38.83125,"count":1},{"y":0.5425,"x":41.090625,"count":2},{"y":0.5425,"x":43.35,"count":1},{"y":0.5425,"x":45.609375,"count":1},{"y":0.5425,"x":47.86875,"count":2},{"y":0.5425,"x":50.128125000000004,"count":2},{"y":0.5425,"x":52.3875,"count":1},{"y":0.5425,"x":54.646875,"count":1},{"y":0.5425,"x":59.165625,"count":1},{"y":0.5425,"x":61.425,"count":1},{"y":0.5425,"x":63.684375,"count":2},{"y":0.5425,"x":65.94375,"count":2},{"y":0.62,"x":13.978124999999999,"count":1},{"y":0.62,"x":20.756249999999998,"count":1},{"y":0.62,"x":23.015625,"count":1},{"y":0.62,"x":25.275,"count":1},{"y":0.62,"x":27.534374999999997,"count":1},{"y":0.62,"x":29.79375,"count":3},{"y":0.62,"x":32.053125,"count":1},{"y":0.62,"x":34.3125,"count":1},{"y":0.62,"x":36.571875,"count":3},{"y":0.62,"x":38.83125,"count":2},{"y":0.62,"x":41.090625,"count":3},{"y":0.62,"x":45.609375,"count":2},{"y":0.62,"x":47.86875,"count":4},{"y":0.62,"x":50.128125000000004,"count":3},{"y":0.62,"x":54.646875,"count":1},{"y":0.62,"x":56.90625,"count":1},{"y":0.62,"x":61.425,"count":2},{"y":0.62,"x":63.684375,"count":1},{"y":0.62,"x":70.46249999999999,"count":2},{"y":0.6975,"x":27.534374999999997,"count":1},{"y":0.6975,"x":29.79375,"count":1},{"y":0.6975,"x":32.053125,"count":1},{"y":0.6975,"x":36.571875,"count":4},{"y":0.6975,"x":38.83125,"count":2},{"y":0.6975,"x":41.090625,"count":2},{"y":0.6975,"x":43.35,"count":1},{"y":0.6975,"x":47.86875,"count":3},{"y":0.6975,"x":52.3875,"count":2},{"y":0.6975,"x":54.646875,"count":3},{"y":0.6975,"x":56.90625,"count":4},{"y":0.6975,"x":61.425,"count":1},{"y":0.6975,"x":63.684375,"count":3},{"y":0.6975,"x":65.94375,"count":1},{"y":0.6975,"x":70.46249999999999,"count":1},{"y":0.6975,"x":72.721875,"count":1},{"y":0.775,"x":20.756249999999998,"count":1},{"y":0.775,"x":23.015625,"count":1},{"y":0.775,"x":27.534374999999997,"count":1},{"y":0.775,"x":34.3125,"count":1},{"y":0.775,"x":36.571875,"count":2},{"y":0.775,"x":38.83125,"count":2},{"y":0.775,"x":41.090625,"count":1},{"y":0.775,"x":50.128125000000004,"count":4},{"y":0.775,"x":52.3875,"count":1},{"y":0.775,"x":54.646875,"count":2},{"y":0.775,"x":56.90625,"count":3},{"y":0.775,"x":61.425,"count":3},{"y":0.775,"x":63.684375,"count":1},{"y":0.775,"x":68.203125,"count":1},{"y":0.775,"x":72.721875,"count":1},{"y":0.8525,"x":23.015625,"count":1},{"y":0.8525,"x":29.79375,"count":1},{"y":0.8525,"x":32.053125,"count":2},{"y":0.8525,"x":34.3125,"count":1},{"y":0.8525,"x":36.571875,"count":1},{"y":0.8525,"x":38.83125,"count":1},{"y":0.8525,"x":43.35,"count":1},{"y":0.8525,"x":45.609375,"count":1},{"y":0.8525,"x":54.646875,"count":3},{"y":0.8525,"x":56.90625,"count":1},{"y":0.8525,"x":59.165625,"count":3},{"y":0.8525,"x":61.425,"count":2},{"y":0.8525,"x":65.94375,"count":2},{"y":0.8525,"x":70.46249999999999,"count":1},{"y":0.8525,"x":72.721875,"count":1},{"y":0.9299999999999999,"x":32.053125,"count":1},{"y":0.9299999999999999,"x":36.571875,"count":1},{"y":0.9299999999999999,"x":38.83125,"count":1},{"y":0.9299999999999999,"x":41.090625,"count":2},{"y":0.9299999999999999,"x":45.609375,"count":1},{"y":0.9299999999999999,"x":47.86875,"count":1},{"y":0.9299999999999999,"x":50.128125000000004,"count":2},{"y":0.9299999999999999,"x":56.90625,"count":1},{"y":0.9299999999999999,"x":59.165625,"count":2},{"y":0.9299999999999999,"x":63.684375,"count":2},{"y":0.9299999999999999,"x":65.94375,"count":2},{"y":0.9299999999999999,"x":68.203125,"count":5},{"y":0.9299999999999999,"x":70.46249999999999,"count":1},{"y":0.9299999999999999,"x":72.721875,"count":2},{"y":1.0075,"x":38.83125,"count":1},{"y":1.0075,"x":43.35,"count":2},{"y":1.0075,"x":45.609375,"count":2},{"y":1.0075,"x":52.3875,"count":1},{"y":1.0075,"x":54.646875,"count":1},{"y":1.0075,"x":56.90625,"count":1},{"y":1.0075,"x":59.165625,"count":2},{"y":1.0075,"x":61.425,"count":1},{"y":1.0075,"x":63.684375,"count":3},{"y":1.0075,"x":70.46249999999999,"count":1},{"y":1.0075,"x":72.721875,"count":1},{"y":1.085,"x":52.3875,"count":1},{"y":1.085,"x":54.646875,"count":1},{"y":1.085,"x":56.90625,"count":3},{"y":1.085,"x":65.94375,"count":2},{"y":1.085,"x":72.721875,"count":1},{"y":1.085,"x":77.240625,"count":1},{"y":1.1625,"x":43.35,"count":1},{"y":1.1625,"x":47.86875,"count":1},{"y":1.1625,"x":52.3875,"count":1},{"y":1.1625,"x":56.90625,"count":1},{"y":1.1625,"x":59.165625,"count":2},{"y":1.1625,"x":61.425,"count":1},{"y":1.1625,"x":63.684375,"count":2},{"y":1.1625,"x":65.94375,"count":1},{"y":1.1625,"x":68.203125,"count":1},{"y":1.1625,"x":72.721875,"count":1},{"y":1.1625,"x":74.98125,"count":1},{"y":1.24,"x":27.534374999999997,"count":1},{"y":1.24,"x":50.128125000000004,"count":1},{"y":1.24,"x":52.3875,"count":2},{"y":1.24,"x":65.94375,"count":1},{"y":1.24,"x":68.203125,"count":1},{"y":1.24,"x":70.46249999999999,"count":2},{"y":1.24,"x":77.240625,"count":2},{"y":1.3175,"x":56.90625,"count":1},{"y":1.3175,"x":61.425,"count":1},{"y":1.3175,"x":63.684375,"count":1},{"y":1.3175,"x":68.203125,"count":1},{"y":1.3175,"x":70.46249999999999,"count":2},{"y":1.3175,"x":72.721875,"count":1},{"y":1.395,"x":63.684375,"count":1},{"y":1.395,"x":65.94375,"count":1},{"y":1.395,"x":68.203125,"count":1},{"y":1.395,"x":74.98125,"count":1},{"y":1.4725,"x":63.684375,"count":1},{"y":1.4725,"x":65.94375,"count":2},{"y":1.4725,"x":68.203125,"count":1},{"y":1.4725,"x":70.46249999999999,"count":1},{"y":1.4725,"x":72.721875,"count":1},{"y":1.55,"x":61.425,"count":1},{"y":1.55,"x":65.94375,"count":1},{"y":1.55,"x":68.203125,"count":1},{"y":1.55,"x":72.721875,"count":1},{"y":1.55,"x":77.240625,"count":2},{"y":1.6275,"x":45.609375,"count":1},{"y":1.6275,"x":59.165625,"count":1},{"y":1.6275,"x":65.94375,"count":1},{"y":1.6275,"x":70.46249999999999,"count":1},{"y":1.6275,"x":74.98125,"count":1},{"y":1.705,"x":59.165625,"count":1},{"y":1.705,"x":68.203125,"count":1},{"y":1.705,"x":74.98125,"count":1},{"y":1.7825,"x":65.94375,"count":1},{"y":1.7825,"x":70.46249999999999,"count":1},{"y":1.7825,"x":72.721875,"count":1},{"y":1.8599999999999999,"x":61.425,"count":1},{"y":1.8599999999999999,"x":72.721875,"count":1},{"y":1.8599999999999999,"x":77.240625,"count":1},{"y":1.9375,"x":7.2,"count":1},{"y":2.2475,"x":65.94375,"count":1},{"y":2.4025,"x":70.46249999999999,"count":1}],"maxCount":8},"minutes":{"y":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"x":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"y":5.1000000000000005,"x":7.2,"count":3},{"y":5.1000000000000005,"x":9.459375,"count":9},{"y":5.1000000000000005,"x":11.71875,"count":2},{"y":6.143750000000001,"x":9.459375,"count":2},{"y":6.143750000000001,"x":11.71875,"count":14},{"y":6.143750000000001,"x":13.978124999999999,"count":6},{"y":7.1875,"x":11.71875,"count":1},{"y":7.1875,"x":13.978124999999999,"count":14},{"y":7.1875,"x":16.2375,"count":5},{"y":8.23125,"x":7.2,"count":1},{"y":8.23125,"x":11.71875,"count":1},{"y":8.23125,"x":13.978124999999999,"count":4},{"y":8.23125,"x":16.2375,"count":14},{"y":8.23125,"x":18.496875,"count":6},{"y":9.275,"x":16.2375,"count":2},{"y":9.275,"x":18.496875,"count":16},{"y":9.275,"x":20.756249999999998,"count":2},{"y":10.318750000000001,"x":20.756249999999998,"count":14},{"y":10.318750000000001,"x":23.015625,"count":1},{"y":11.3625,"x":23.015625,"count":11},{"y":11.3625,"x":25.275,"count":3},{"y":12.40625,"x":18.496875,"count":1},{"y":12.40625,"x":23.015625,"count":2},{"y":12.40625,"x":25.275,"count":11},{"y":12.40625,"x":27.534374999999997,"count":1},{"y":13.45,"x":20.756249999999998,"count":1},{"y":13.45,"x":23.015625,"count":1},{"y":13.45,"x":25.275,"count":4},{"y":13.45,"x":27.534374999999997,"count":13},{"y":14.493749999999999,"x":25.275,"count":1},{"y":14.493749999999999,"x":27.534374999999997,"count":3},{"y":14.493749999999999,"x":29.79375,"count":17},{"y":15.537500000000001,"x":29.79375,"count":4},{"y":15.537500000000001,"x":32.053125,"count":14},{"y":15.537500000000001,"x":34.3125,"count":1},{"y":16.58125,"x":34.3125,"count":12},{"y":17.625,"x":29.79375,"count":1},{"y":17.625,"x":34.3125,"count":2},{"y":17.625,"x":36.571875,"count":12},{"y":18.66875,"x":23.015625,"count":1},{"y":18.66875,"x":36.571875,"count":8},{"y":18.66875,"x":38.83125,"count":18},{"y":19.7125,"x":38.83125,"count":5},{"y":19.7125,"x":41.090625,"count":14},{"y":20.75625,"x":41.090625,"count":4},{"y":20.75625,"x":43.35,"count":7},{"y":21.8,"x":43.35,"count":2},{"y":21.8,"x":45.609375,"count":7},{"y":22.84375,"x":45.609375,"count":6},{"y":22.84375,"x":47.86875,"count":2},{"y":23.8875,"x":47.86875,"count":10},{"y":23.8875,"x":50.128125000000004,"count":8},{"y":24.931250000000002,"x":50.128125000000004,"count":6},{"y":24.931250000000002,"x":52.3875,"count":6},{"y":25.975,"x":52.3875,"count":6},{"y":25.975,"x":54.646875,"count":10},{"y":27.01875,"x":54.646875,"count":5},{"y":27.01875,"x":56.90625,"count":11},{"y":28.0625,"x":56.90625,"count":8},{"y":28.0625,"x":59.165625,"count":5},{"y":29.10625,"x":59.165625,"count":11},{"y":29.10625,"x":61.425,"count":4},{"y":30.15,"x":56.90625,"count":1},{"y":30.15,"x":61.425,"count":10},{"y":30.15,"x":63.684375,"count":4},{"y":31.19375,"x":61.425,"count":1},{"y":31.19375,"x":63.684375,"count":15},{"y":31.19375,"x":65.94375,"count":7},{"y":32.2375,"x":63.684375,"count":1},{"y":32.2375,"x":65.94375,"count":12},{"y":32.2375,"x":68.203125,"count":3},{"y":33.28125,"x":65.94375,"count":1},{"y":33.28125,"x":68.203125,"count":8},{"y":33.28125,"x":70.46249999999999,"count":3},{"y":34.324999999999996,"x":68.203125,"count":2},{"y":34.324999999999996,"x":70.46249999999999,"count":12},{"y":34.324999999999996,"x":72.721875,"count":2},{"y":35.36875,"x":70.46249999999999,"count":1},{"y":35.36875,"x":72.721875,"count":10},{"y":35.36875,"x":74.98125,"count":2},{"y":36.4125,"x":72.721875,"count":1},{"y":36.4125,"x":74.98125,"count":2},{"y":37.45625,"x":77.240625,"count":6}],"maxCount":18},"free throw percent":{"y":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"x":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"y":0,"x":7.2,"count":4},{"y":0,"x":9.459375,"count":4},{"y":0,"x":11.71875,"count":4},{"y":0,"x":18.496875,"count":2},{"y":0,"x":20.756249999999998,"count":1},{"y":0,"x":23.015625,"count":1},{"y":0,"x":25.275,"count":2},{"y":0.15625,"x":13.978124999999999,"count":1},{"y":0.1875,"x":16.2375,"count":1},{"y":0.25,"x":18.496875,"count":1},{"y":0.25,"x":27.534374999999997,"count":1},{"y":0.3125,"x":11.71875,"count":1},{"y":0.3125,"x":13.978124999999999,"count":1},{"y":0.3125,"x":23.015625,"count":1},{"y":0.34375,"x":52.3875,"count":1},{"y":0.375,"x":13.978124999999999,"count":1},{"y":0.375,"x":16.2375,"count":1},{"y":0.375,"x":32.053125,"count":1},{"y":0.40625,"x":27.534374999999997,"count":1},{"y":0.40625,"x":38.83125,"count":1},{"y":0.40625,"x":65.94375,"count":1},{"y":0.40625,"x":70.46249999999999,"count":1},{"y":0.4375,"x":11.71875,"count":1},{"y":0.4375,"x":50.128125000000004,"count":1},{"y":0.46875,"x":18.496875,"count":1},{"y":0.46875,"x":27.534374999999997,"count":1},{"y":0.46875,"x":50.128125000000004,"count":1},{"y":0.5,"x":9.459375,"count":1},{"y":0.5,"x":11.71875,"count":4},{"y":0.5,"x":13.978124999999999,"count":4},{"y":0.5,"x":18.496875,"count":1},{"y":0.5,"x":20.756249999999998,"count":1},{"y":0.5,"x":23.015625,"count":1},{"y":0.5,"x":25.275,"count":1},{"y":0.5,"x":27.534374999999997,"count":2},{"y":0.5,"x":29.79375,"count":1},{"y":0.5,"x":36.571875,"count":1},{"y":0.5,"x":38.83125,"count":1},{"y":0.5,"x":52.3875,"count":1},{"y":0.5,"x":54.646875,"count":1},{"y":0.5,"x":59.165625,"count":1},{"y":0.53125,"x":11.71875,"count":1},{"y":0.53125,"x":13.978124999999999,"count":1},{"y":0.53125,"x":18.496875,"count":2},{"y":0.53125,"x":25.275,"count":2},{"y":0.53125,"x":38.83125,"count":1},{"y":0.53125,"x":47.86875,"count":1},{"y":0.53125,"x":50.128125000000004,"count":1},{"y":0.53125,"x":68.203125,"count":1},{"y":0.53125,"x":72.721875,"count":1},{"y":0.5625,"x":13.978124999999999,"count":2},{"y":0.5625,"x":16.2375,"count":4},{"y":0.5625,"x":25.275,"count":2},{"y":0.5625,"x":27.534374999999997,"count":2},{"y":0.5625,"x":29.79375,"count":3},{"y":0.5625,"x":38.83125,"count":1},{"y":0.5625,"x":41.090625,"count":2},{"y":0.5625,"x":47.86875,"count":1},{"y":0.5625,"x":50.128125000000004,"count":1},{"y":0.5625,"x":52.3875,"count":1},{"y":0.5625,"x":59.165625,"count":1},{"y":0.59375,"x":13.978124999999999,"count":1},{"y":0.59375,"x":16.2375,"count":1},{"y":0.59375,"x":20.756249999999998,"count":1},{"y":0.59375,"x":23.015625,"count":1},{"y":0.59375,"x":29.79375,"count":1},{"y":0.59375,"x":32.053125,"count":2},{"y":0.59375,"x":36.571875,"count":1},{"y":0.59375,"x":41.090625,"count":1},{"y":0.59375,"x":43.35,"count":1},{"y":0.59375,"x":47.86875,"count":2},{"y":0.59375,"x":54.646875,"count":1},{"y":0.625,"x":13.978124999999999,"count":3},{"y":0.625,"x":16.2375,"count":1},{"y":0.625,"x":18.496875,"count":1},{"y":0.625,"x":20.756249999999998,"count":3},{"y":0.625,"x":23.015625,"count":1},{"y":0.625,"x":25.275,"count":2},{"y":0.625,"x":27.534374999999997,"count":2},{"y":0.625,"x":29.79375,"count":2},{"y":0.625,"x":34.3125,"count":1},{"y":0.625,"x":36.571875,"count":2},{"y":0.625,"x":38.83125,"count":3},{"y":0.625,"x":43.35,"count":2},{"y":0.625,"x":45.609375,"count":1},{"y":0.625,"x":47.86875,"count":1},{"y":0.625,"x":54.646875,"count":1},{"y":0.625,"x":56.90625,"count":2},{"y":0.625,"x":61.425,"count":1},{"y":0.625,"x":65.94375,"count":2},{"y":0.625,"x":68.203125,"count":1},{"y":0.65625,"x":9.459375,"count":1},{"y":0.65625,"x":13.978124999999999,"count":1},{"y":0.65625,"x":16.2375,"count":2},{"y":0.65625,"x":18.496875,"count":1},{"y":0.65625,"x":20.756249999999998,"count":1},{"y":0.65625,"x":23.015625,"count":1},{"y":0.65625,"x":25.275,"count":2},{"y":0.65625,"x":27.534374999999997,"count":1},{"y":0.65625,"x":29.79375,"count":2},{"y":0.65625,"x":32.053125,"count":1},{"y":0.65625,"x":34.3125,"count":2},{"y":0.65625,"x":36.571875,"count":3},{"y":0.65625,"x":41.090625,"count":2},{"y":0.65625,"x":43.35,"count":1},{"y":0.65625,"x":50.128125000000004,"count":2},{"y":0.65625,"x":52.3875,"count":1},{"y":0.65625,"x":54.646875,"count":1},{"y":0.65625,"x":59.165625,"count":2},{"y":0.65625,"x":61.425,"count":1},{"y":0.65625,"x":65.94375,"count":3},{"y":0.6875,"x":11.71875,"count":1},{"y":0.6875,"x":13.978124999999999,"count":1},{"y":0.6875,"x":16.2375,"count":3},{"y":0.6875,"x":18.496875,"count":2},{"y":0.6875,"x":20.756249999999998,"count":1},{"y":0.6875,"x":23.015625,"count":2},{"y":0.6875,"x":25.275,"count":2},{"y":0.6875,"x":27.534374999999997,"count":1},{"y":0.6875,"x":29.79375,"count":4},{"y":0.6875,"x":32.053125,"count":1},{"y":0.6875,"x":38.83125,"count":2},{"y":0.6875,"x":41.090625,"count":2},{"y":0.6875,"x":43.35,"count":1},{"y":0.6875,"x":45.609375,"count":1},{"y":0.6875,"x":50.128125000000004,"count":1},{"y":0.6875,"x":56.90625,"count":1},{"y":0.6875,"x":63.684375,"count":1},{"y":0.6875,"x":65.94375,"count":1},{"y":0.6875,"x":70.46249999999999,"count":3},{"y":0.6875,"x":72.721875,"count":1},{"y":0.71875,"x":16.2375,"count":1},{"y":0.71875,"x":18.496875,"count":2},{"y":0.71875,"x":20.756249999999998,"count":2},{"y":0.71875,"x":23.015625,"count":1},{"y":0.71875,"x":34.3125,"count":3},{"y":0.71875,"x":36.571875,"count":1},{"y":0.71875,"x":38.83125,"count":1},{"y":0.71875,"x":41.090625,"count":2},{"y":0.71875,"x":43.35,"count":1},{"y":0.71875,"x":45.609375,"count":3},{"y":0.71875,"x":50.128125000000004,"count":1},{"y":0.71875,"x":52.3875,"count":1},{"y":0.71875,"x":54.646875,"count":3},{"y":0.71875,"x":56.90625,"count":2},{"y":0.71875,"x":59.165625,"count":2},{"y":0.71875,"x":61.425,"count":3},{"y":0.71875,"x":63.684375,"count":2},{"y":0.71875,"x":65.94375,"count":2},{"y":0.71875,"x":68.203125,"count":1},{"y":0.71875,"x":70.46249999999999,"count":2},{"y":0.71875,"x":74.98125,"count":1},{"y":0.75,"x":9.459375,"count":1},{"y":0.75,"x":11.71875,"count":2},{"y":0.75,"x":13.978124999999999,"count":1},{"y":0.75,"x":16.2375,"count":2},{"y":0.75,"x":18.496875,"count":2},{"y":0.75,"x":20.756249999999998,"count":3},{"y":0.75,"x":23.015625,"count":2},{"y":0.75,"x":27.534374999999997,"count":2},{"y":0.75,"x":29.79375,"count":4},{"y":0.75,"x":32.053125,"count":2},{"y":0.75,"x":34.3125,"count":2},{"y":0.75,"x":36.571875,"count":3},{"y":0.75,"x":38.83125,"count":5},{"y":0.75,"x":43.35,"count":2},{"y":0.75,"x":45.609375,"count":1},{"y":0.75,"x":50.128125000000004,"count":2},{"y":0.75,"x":52.3875,"count":2},{"y":0.75,"x":54.646875,"count":2},{"y":0.75,"x":56.90625,"count":5},{"y":0.75,"x":59.165625,"count":1},{"y":0.75,"x":61.425,"count":2},{"y":0.75,"x":63.684375,"count":3},{"y":0.75,"x":65.94375,"count":2},{"y":0.75,"x":68.203125,"count":4},{"y":0.75,"x":70.46249999999999,"count":2},{"y":0.75,"x":77.240625,"count":2},{"y":0.78125,"x":13.978124999999999,"count":3},{"y":0.78125,"x":18.496875,"count":1},{"y":0.78125,"x":23.015625,"count":1},{"y":0.78125,"x":25.275,"count":3},{"y":0.78125,"x":27.534374999999997,"count":1},{"y":0.78125,"x":29.79375,"count":1},{"y":0.78125,"x":32.053125,"count":2},{"y":0.78125,"x":34.3125,"count":3},{"y":0.78125,"x":36.571875,"count":4},{"y":0.78125,"x":38.83125,"count":1},{"y":0.78125,"x":41.090625,"count":6},{"y":0.78125,"x":45.609375,"count":1},{"y":0.78125,"x":47.86875,"count":3},{"y":0.78125,"x":50.128125000000004,"count":1},{"y":0.78125,"x":54.646875,"count":2},{"y":0.78125,"x":56.90625,"count":1},{"y":0.78125,"x":59.165625,"count":3},{"y":0.78125,"x":61.425,"count":1},{"y":0.78125,"x":63.684375,"count":7},{"y":0.78125,"x":65.94375,"count":5},{"y":0.78125,"x":68.203125,"count":1},{"y":0.78125,"x":70.46249999999999,"count":2},{"y":0.78125,"x":72.721875,"count":4},{"y":0.78125,"x":74.98125,"count":1},{"y":0.8125,"x":9.459375,"count":1},{"y":0.8125,"x":18.496875,"count":2},{"y":0.8125,"x":23.015625,"count":2},{"y":0.8125,"x":25.275,"count":3},{"y":0.8125,"x":27.534374999999997,"count":2},{"y":0.8125,"x":29.79375,"count":3},{"y":0.8125,"x":32.053125,"count":3},{"y":0.8125,"x":34.3125,"count":2},{"y":0.8125,"x":36.571875,"count":3},{"y":0.8125,"x":38.83125,"count":4},{"y":0.8125,"x":41.090625,"count":1},{"y":0.8125,"x":45.609375,"count":2},{"y":0.8125,"x":47.86875,"count":2},{"y":0.8125,"x":52.3875,"count":2},{"y":0.8125,"x":54.646875,"count":4},{"y":0.8125,"x":56.90625,"count":4},{"y":0.8125,"x":59.165625,"count":2},{"y":0.8125,"x":61.425,"count":3},{"y":0.8125,"x":63.684375,"count":4},{"y":0.8125,"x":65.94375,"count":1},{"y":0.8125,"x":68.203125,"count":3},{"y":0.8125,"x":70.46249999999999,"count":2},{"y":0.8125,"x":72.721875,"count":5},{"y":0.8125,"x":74.98125,"count":1},{"y":0.8125,"x":77.240625,"count":1},{"y":0.84375,"x":13.978124999999999,"count":2},{"y":0.84375,"x":20.756249999999998,"count":1},{"y":0.84375,"x":32.053125,"count":2},{"y":0.84375,"x":34.3125,"count":1},{"y":0.84375,"x":36.571875,"count":1},{"y":0.84375,"x":38.83125,"count":2},{"y":0.84375,"x":41.090625,"count":1},{"y":0.84375,"x":43.35,"count":1},{"y":0.84375,"x":45.609375,"count":1},{"y":0.84375,"x":47.86875,"count":1},{"y":0.84375,"x":50.128125000000004,"count":2},{"y":0.84375,"x":52.3875,"count":2},{"y":0.84375,"x":56.90625,"count":3},{"y":0.84375,"x":59.165625,"count":2},{"y":0.84375,"x":61.425,"count":3},{"y":0.84375,"x":63.684375,"count":2},{"y":0.84375,"x":65.94375,"count":1},{"y":0.84375,"x":68.203125,"count":1},{"y":0.84375,"x":70.46249999999999,"count":3},{"y":0.84375,"x":72.721875,"count":2},{"y":0.84375,"x":77.240625,"count":3},{"y":0.875,"x":9.459375,"count":1},{"y":0.875,"x":11.71875,"count":1},{"y":0.875,"x":18.496875,"count":2},{"y":0.875,"x":20.756249999999998,"count":1},{"y":0.875,"x":27.534374999999997,"count":1},{"y":0.875,"x":34.3125,"count":1},{"y":0.875,"x":36.571875,"count":1},{"y":0.875,"x":52.3875,"count":1},{"y":0.875,"x":56.90625,"count":1},{"y":0.875,"x":59.165625,"count":2},{"y":0.875,"x":61.425,"count":1},{"y":0.875,"x":63.684375,"count":1},{"y":0.875,"x":65.94375,"count":2},{"y":0.875,"x":74.98125,"count":1},{"y":0.90625,"x":11.71875,"count":1},{"y":0.90625,"x":16.2375,"count":2},{"y":0.90625,"x":38.83125,"count":1},{"y":0.90625,"x":41.090625,"count":1},{"y":0.90625,"x":56.90625,"count":1},{"y":0.90625,"x":68.203125,"count":1},{"y":0.9375,"x":20.756249999999998,"count":1},{"y":0.9375,"x":23.015625,"count":1},{"y":0.9375,"x":45.609375,"count":3},{"y":0.9375,"x":50.128125000000004,"count":1},{"y":0.9375,"x":70.46249999999999,"count":1},{"y":0.96875,"x":9.459375,"count":2},{"y":0.96875,"x":11.71875,"count":2},{"y":0.96875,"x":13.978124999999999,"count":2},{"y":0.96875,"x":16.2375,"count":3},{"y":0.96875,"x":18.496875,"count":3},{"y":0.96875,"x":20.756249999999998,"count":1},{"y":0.96875,"x":23.015625,"count":1},{"y":0.96875,"x":29.79375,"count":1},{"y":0.96875,"x":47.86875,"count":1}],"maxCount":7}},"percentage of team assists":{"steals per game":{"y":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"x":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"bins":[{"y":0,"x":0,"count":6},{"y":0,"x":1.5375,"count":1},{"y":0,"x":3.075,"count":2},{"y":0,"x":4.612500000000001,"count":3},{"y":0,"x":6.15,"count":2},{"y":0,"x":9.225000000000001,"count":2},{"y":0,"x":10.762500000000001,"count":4},{"y":0,"x":12.3,"count":3},{"y":0,"x":13.8375,"count":1},{"y":0,"x":15.375,"count":1},{"y":0,"x":18.450000000000003,"count":1},{"y":0.0775,"x":0,"count":2},{"y":0.0775,"x":1.5375,"count":3},{"y":0.0775,"x":3.075,"count":2},{"y":0.0775,"x":4.612500000000001,"count":4},{"y":0.0775,"x":6.15,"count":2},{"y":0.0775,"x":7.6875,"count":4},{"y":0.0775,"x":9.225000000000001,"count":3},{"y":0.0775,"x":12.3,"count":1},{"y":0.0775,"x":13.8375,"count":1},{"y":0.0775,"x":16.9125,"count":1},{"y":0.0775,"x":18.450000000000003,"count":2},{"y":0.0775,"x":30.75,"count":1},{"y":0.155,"x":0,"count":2},{"y":0.155,"x":1.5375,"count":1},{"y":0.155,"x":3.075,"count":6},{"y":0.155,"x":4.612500000000001,"count":6},{"y":0.155,"x":6.15,"count":7},{"y":0.155,"x":7.6875,"count":3},{"y":0.155,"x":9.225000000000001,"count":1},{"y":0.155,"x":12.3,"count":3},{"y":0.155,"x":19.9875,"count":1},{"y":0.155,"x":21.525000000000002,"count":1},{"y":0.155,"x":26.137500000000003,"count":1},{"y":0.155,"x":33.825,"count":1},{"y":0.23249999999999998,"x":0,"count":1},{"y":0.23249999999999998,"x":1.5375,"count":1},{"y":0.23249999999999998,"x":3.075,"count":6},{"y":0.23249999999999998,"x":4.612500000000001,"count":4},{"y":0.23249999999999998,"x":6.15,"count":3},{"y":0.23249999999999998,"x":7.6875,"count":4},{"y":0.23249999999999998,"x":9.225000000000001,"count":3},{"y":0.23249999999999998,"x":10.762500000000001,"count":3},{"y":0.23249999999999998,"x":13.8375,"count":1},{"y":0.23249999999999998,"x":29.212500000000002,"count":1},{"y":0.31,"x":0,"count":2},{"y":0.31,"x":3.075,"count":7},{"y":0.31,"x":4.612500000000001,"count":8},{"y":0.31,"x":6.15,"count":7},{"y":0.31,"x":7.6875,"count":5},{"y":0.31,"x":9.225000000000001,"count":3},{"y":0.31,"x":10.762500000000001,"count":4},{"y":0.31,"x":12.3,"count":2},{"y":0.31,"x":13.8375,"count":3},{"y":0.31,"x":15.375,"count":1},{"y":0.31,"x":19.9875,"count":1},{"y":0.31,"x":21.525000000000002,"count":3},{"y":0.31,"x":23.0625,"count":2},{"y":0.31,"x":26.137500000000003,"count":1},{"y":0.31,"x":32.2875,"count":2},{"y":0.3875,"x":0,"count":1},{"y":0.3875,"x":1.5375,"count":3},{"y":0.3875,"x":3.075,"count":6},{"y":0.3875,"x":4.612500000000001,"count":4},{"y":0.3875,"x":6.15,"count":5},{"y":0.3875,"x":7.6875,"count":5},{"y":0.3875,"x":9.225000000000001,"count":2},{"y":0.3875,"x":10.762500000000001,"count":1},{"y":0.3875,"x":13.8375,"count":1},{"y":0.3875,"x":18.450000000000003,"count":3},{"y":0.3875,"x":29.212500000000002,"count":1},{"y":0.46499999999999997,"x":0,"count":2},{"y":0.46499999999999997,"x":1.5375,"count":1},{"y":0.46499999999999997,"x":3.075,"count":3},{"y":0.46499999999999997,"x":4.612500000000001,"count":9},{"y":0.46499999999999997,"x":6.15,"count":6},{"y":0.46499999999999997,"x":7.6875,"count":4},{"y":0.46499999999999997,"x":9.225000000000001,"count":3},{"y":0.46499999999999997,"x":10.762500000000001,"count":3},{"y":0.46499999999999997,"x":12.3,"count":4},{"y":0.46499999999999997,"x":13.8375,"count":1},{"y":0.46499999999999997,"x":15.375,"count":2},{"y":0.46499999999999997,"x":16.9125,"count":3},{"y":0.46499999999999997,"x":19.9875,"count":2},{"y":0.46499999999999997,"x":21.525000000000002,"count":2},{"y":0.46499999999999997,"x":24.6,"count":1},{"y":0.46499999999999997,"x":26.137500000000003,"count":2},{"y":0.46499999999999997,"x":30.75,"count":1},{"y":0.46499999999999997,"x":39.975,"count":1},{"y":0.46499999999999997,"x":41.5125,"count":1},{"y":0.5425,"x":0,"count":1},{"y":0.5425,"x":4.612500000000001,"count":2},{"y":0.5425,"x":6.15,"count":2},{"y":0.5425,"x":7.6875,"count":6},{"y":0.5425,"x":9.225000000000001,"count":3},{"y":0.5425,"x":10.762500000000001,"count":4},{"y":0.5425,"x":13.8375,"count":1},{"y":0.5425,"x":15.375,"count":3},{"y":0.5425,"x":16.9125,"count":4},{"y":0.5425,"x":21.525000000000002,"count":1},{"y":0.5425,"x":24.6,"count":1},{"y":0.5425,"x":26.137500000000003,"count":1},{"y":0.5425,"x":29.212500000000002,"count":1},{"y":0.62,"x":1.5375,"count":1},{"y":0.62,"x":3.075,"count":2},{"y":0.62,"x":4.612500000000001,"count":7},{"y":0.62,"x":6.15,"count":4},{"y":0.62,"x":7.6875,"count":3},{"y":0.62,"x":10.762500000000001,"count":3},{"y":0.62,"x":12.3,"count":2},{"y":0.62,"x":13.8375,"count":3},{"y":0.62,"x":15.375,"count":1},{"y":0.62,"x":18.450000000000003,"count":2},{"y":0.62,"x":21.525000000000002,"count":2},{"y":0.62,"x":24.6,"count":2},{"y":0.62,"x":27.675,"count":1},{"y":0.62,"x":33.825,"count":1},{"y":0.6975,"x":4.612500000000001,"count":2},{"y":0.6975,"x":6.15,"count":4},{"y":0.6975,"x":7.6875,"count":5},{"y":0.6975,"x":9.225000000000001,"count":3},{"y":0.6975,"x":10.762500000000001,"count":5},{"y":0.6975,"x":12.3,"count":1},{"y":0.6975,"x":15.375,"count":2},{"y":0.6975,"x":21.525000000000002,"count":3},{"y":0.6975,"x":23.0625,"count":1},{"y":0.6975,"x":26.137500000000003,"count":1},{"y":0.6975,"x":29.212500000000002,"count":1},{"y":0.6975,"x":30.75,"count":1},{"y":0.6975,"x":32.2875,"count":1},{"y":0.6975,"x":33.825,"count":1},{"y":0.775,"x":3.075,"count":2},{"y":0.775,"x":4.612500000000001,"count":2},{"y":0.775,"x":7.6875,"count":5},{"y":0.775,"x":9.225000000000001,"count":1},{"y":0.775,"x":10.762500000000001,"count":3},{"y":0.775,"x":12.3,"count":3},{"y":0.775,"x":15.375,"count":2},{"y":0.775,"x":16.9125,"count":2},{"y":0.775,"x":19.9875,"count":1},{"y":0.775,"x":21.525000000000002,"count":1},{"y":0.775,"x":24.6,"count":2},{"y":0.775,"x":29.212500000000002,"count":1},{"y":0.8525,"x":6.15,"count":1},{"y":0.8525,"x":7.6875,"count":4},{"y":0.8525,"x":9.225000000000001,"count":2},{"y":0.8525,"x":10.762500000000001,"count":2},{"y":0.8525,"x":12.3,"count":2},{"y":0.8525,"x":13.8375,"count":3},{"y":0.8525,"x":16.9125,"count":2},{"y":0.8525,"x":18.450000000000003,"count":1},{"y":0.8525,"x":19.9875,"count":1},{"y":0.8525,"x":26.137500000000003,"count":1},{"y":0.8525,"x":30.75,"count":2},{"y":0.8525,"x":44.587500000000006,"count":1},{"y":0.9299999999999999,"x":3.075,"count":1},{"y":0.9299999999999999,"x":4.612500000000001,"count":2},{"y":0.9299999999999999,"x":7.6875,"count":1},{"y":0.9299999999999999,"x":9.225000000000001,"count":4},{"y":0.9299999999999999,"x":10.762500000000001,"count":3},{"y":0.9299999999999999,"x":12.3,"count":2},{"y":0.9299999999999999,"x":13.8375,"count":2},{"y":0.9299999999999999,"x":15.375,"count":1},{"y":0.9299999999999999,"x":16.9125,"count":3},{"y":0.9299999999999999,"x":19.9875,"count":1},{"y":0.9299999999999999,"x":21.525000000000002,"count":1},{"y":0.9299999999999999,"x":26.137500000000003,"count":1},{"y":0.9299999999999999,"x":27.675,"count":1},{"y":0.9299999999999999,"x":33.825,"count":1},{"y":1.0075,"x":4.612500000000001,"count":1},{"y":1.0075,"x":6.15,"count":1},{"y":1.0075,"x":7.6875,"count":5},{"y":1.0075,"x":9.225000000000001,"count":1},{"y":1.0075,"x":10.762500000000001,"count":1},{"y":1.0075,"x":12.3,"count":2},{"y":1.0075,"x":16.9125,"count":1},{"y":1.0075,"x":18.450000000000003,"count":1},{"y":1.0075,"x":23.0625,"count":1},{"y":1.0075,"x":24.6,"count":1},{"y":1.0075,"x":27.675,"count":1},{"y":1.085,"x":6.15,"count":1},{"y":1.085,"x":7.6875,"count":1},{"y":1.085,"x":9.225000000000001,"count":1},{"y":1.085,"x":13.8375,"count":1},{"y":1.085,"x":18.450000000000003,"count":2},{"y":1.085,"x":21.525000000000002,"count":2},{"y":1.085,"x":33.825,"count":1},{"y":1.1625,"x":6.15,"count":2},{"y":1.1625,"x":10.762500000000001,"count":1},{"y":1.1625,"x":15.375,"count":3},{"y":1.1625,"x":16.9125,"count":1},{"y":1.1625,"x":19.9875,"count":1},{"y":1.1625,"x":27.675,"count":1},{"y":1.1625,"x":29.212500000000002,"count":2},{"y":1.1625,"x":32.2875,"count":1},{"y":1.1625,"x":33.825,"count":1},{"y":1.24,"x":1.5375,"count":1},{"y":1.24,"x":4.612500000000001,"count":1},{"y":1.24,"x":7.6875,"count":1},{"y":1.24,"x":9.225000000000001,"count":1},{"y":1.24,"x":13.8375,"count":1},{"y":1.24,"x":15.375,"count":1},{"y":1.24,"x":26.137500000000003,"count":2},{"y":1.24,"x":32.2875,"count":1},{"y":1.24,"x":33.825,"count":1},{"y":1.3175,"x":7.6875,"count":2},{"y":1.3175,"x":12.3,"count":1},{"y":1.3175,"x":13.8375,"count":1},{"y":1.3175,"x":16.9125,"count":1},{"y":1.3175,"x":27.675,"count":1},{"y":1.3175,"x":47.6625,"count":1},{"y":1.395,"x":7.6875,"count":1},{"y":1.395,"x":23.0625,"count":1},{"y":1.395,"x":24.6,"count":1},{"y":1.395,"x":32.2875,"count":1},{"y":1.4725,"x":7.6875,"count":1},{"y":1.4725,"x":16.9125,"count":2},{"y":1.4725,"x":29.212500000000002,"count":1},{"y":1.4725,"x":30.75,"count":1},{"y":1.4725,"x":33.825,"count":1},{"y":1.55,"x":10.762500000000001,"count":1},{"y":1.55,"x":21.525000000000002,"count":1},{"y":1.55,"x":26.137500000000003,"count":2},{"y":1.55,"x":30.75,"count":1},{"y":1.55,"x":36.900000000000006,"count":1},{"y":1.6275,"x":10.762500000000001,"count":2},{"y":1.6275,"x":23.0625,"count":1},{"y":1.6275,"x":38.4375,"count":1},{"y":1.6275,"x":39.975,"count":1},{"y":1.705,"x":9.225000000000001,"count":1},{"y":1.705,"x":15.375,"count":1},{"y":1.705,"x":24.6,"count":1},{"y":1.7825,"x":7.6875,"count":1},{"y":1.7825,"x":29.212500000000002,"count":1},{"y":1.7825,"x":39.975,"count":1},{"y":1.8599999999999999,"x":10.762500000000001,"count":1},{"y":1.8599999999999999,"x":16.9125,"count":1},{"y":1.8599999999999999,"x":39.975,"count":1},{"y":1.9375,"x":0,"count":1},{"y":2.2475,"x":36.900000000000006,"count":1},{"y":2.4025,"x":47.6625,"count":1}],"maxCount":9},"percentage of team minutes":{"x":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"y":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"x":0,"y":7.2,"count":4},{"x":0,"y":9.459375,"count":1},{"x":0,"y":11.71875,"count":1},{"x":0,"y":13.978124999999999,"count":2},{"x":0,"y":16.2375,"count":4},{"x":0,"y":18.496875,"count":1},{"x":0,"y":20.756249999999998,"count":1},{"x":0,"y":23.015625,"count":1},{"x":0,"y":27.534374999999997,"count":3},{"x":1.5375,"y":13.978124999999999,"count":2},{"x":1.5375,"y":16.2375,"count":1},{"x":1.5375,"y":18.496875,"count":1},{"x":1.5375,"y":25.275,"count":2},{"x":1.5375,"y":27.534374999999997,"count":1},{"x":1.5375,"y":29.79375,"count":2},{"x":1.5375,"y":32.053125,"count":1},{"x":1.5375,"y":38.83125,"count":1},{"x":1.5375,"y":65.94375,"count":1},{"x":3.075,"y":11.71875,"count":1},{"x":3.075,"y":13.978124999999999,"count":6},{"x":3.075,"y":18.496875,"count":6},{"x":3.075,"y":20.756249999999998,"count":2},{"x":3.075,"y":25.275,"count":3},{"x":3.075,"y":27.534374999999997,"count":3},{"x":3.075,"y":29.79375,"count":5},{"x":3.075,"y":38.83125,"count":1},{"x":3.075,"y":41.090625,"count":2},{"x":3.075,"y":45.609375,"count":1},{"x":3.075,"y":50.128125000000004,"count":2},{"x":3.075,"y":56.90625,"count":1},{"x":3.075,"y":63.684375,"count":2},{"x":3.075,"y":70.46249999999999,"count":2},{"x":4.612500000000001,"y":9.459375,"count":1},{"x":4.612500000000001,"y":11.71875,"count":3},{"x":4.612500000000001,"y":13.978124999999999,"count":2},{"x":4.612500000000001,"y":16.2375,"count":3},{"x":4.612500000000001,"y":18.496875,"count":2},{"x":4.612500000000001,"y":20.756249999999998,"count":4},{"x":4.612500000000001,"y":23.015625,"count":4},{"x":4.612500000000001,"y":25.275,"count":4},{"x":4.612500000000001,"y":27.534374999999997,"count":2},{"x":4.612500000000001,"y":29.79375,"count":4},{"x":4.612500000000001,"y":34.3125,"count":1},{"x":4.612500000000001,"y":36.571875,"count":3},{"x":4.612500000000001,"y":38.83125,"count":3},{"x":4.612500000000001,"y":41.090625,"count":3},{"x":4.612500000000001,"y":43.35,"count":1},{"x":4.612500000000001,"y":45.609375,"count":1},{"x":4.612500000000001,"y":47.86875,"count":3},{"x":4.612500000000001,"y":50.128125000000004,"count":2},{"x":4.612500000000001,"y":52.3875,"count":2},{"x":4.612500000000001,"y":54.646875,"count":1},{"x":4.612500000000001,"y":56.90625,"count":1},{"x":4.612500000000001,"y":61.425,"count":3},{"x":4.612500000000001,"y":63.684375,"count":1},{"x":4.612500000000001,"y":65.94375,"count":1},{"x":6.15,"y":11.71875,"count":3},{"x":6.15,"y":13.978124999999999,"count":3},{"x":6.15,"y":16.2375,"count":3},{"x":6.15,"y":18.496875,"count":3},{"x":6.15,"y":20.756249999999998,"count":2},{"x":6.15,"y":23.015625,"count":1},{"x":6.15,"y":25.275,"count":2},{"x":6.15,"y":27.534374999999997,"count":2},{"x":6.15,"y":29.79375,"count":1},{"x":6.15,"y":32.053125,"count":2},{"x":6.15,"y":34.3125,"count":4},{"x":6.15,"y":36.571875,"count":2},{"x":6.15,"y":38.83125,"count":2},{"x":6.15,"y":43.35,"count":1},{"x":6.15,"y":45.609375,"count":2},{"x":6.15,"y":47.86875,"count":2},{"x":6.15,"y":54.646875,"count":5},{"x":6.15,"y":56.90625,"count":3},{"x":6.15,"y":59.165625,"count":2},{"x":6.15,"y":61.425,"count":1},{"x":6.15,"y":63.684375,"count":1},{"x":7.6875,"y":11.71875,"count":2},{"x":7.6875,"y":13.978124999999999,"count":2},{"x":7.6875,"y":16.2375,"count":2},{"x":7.6875,"y":18.496875,"count":2},{"x":7.6875,"y":20.756249999999998,"count":2},{"x":7.6875,"y":23.015625,"count":2},{"x":7.6875,"y":25.275,"count":2},{"x":7.6875,"y":27.534374999999997,"count":1},{"x":7.6875,"y":29.79375,"count":2},{"x":7.6875,"y":32.053125,"count":5},{"x":7.6875,"y":34.3125,"count":2},{"x":7.6875,"y":36.571875,"count":2},{"x":7.6875,"y":38.83125,"count":5},{"x":7.6875,"y":41.090625,"count":2},{"x":7.6875,"y":43.35,"count":2},{"x":7.6875,"y":45.609375,"count":2},{"x":7.6875,"y":47.86875,"count":2},{"x":7.6875,"y":50.128125000000004,"count":2},{"x":7.6875,"y":52.3875,"count":3},{"x":7.6875,"y":54.646875,"count":2},{"x":7.6875,"y":56.90625,"count":4},{"x":7.6875,"y":59.165625,"count":2},{"x":7.6875,"y":61.425,"count":2},{"x":7.6875,"y":63.684375,"count":2},{"x":7.6875,"y":65.94375,"count":2},{"x":7.6875,"y":68.203125,"count":1},{"x":7.6875,"y":70.46249999999999,"count":2},{"x":9.225000000000001,"y":13.978124999999999,"count":3},{"x":9.225000000000001,"y":16.2375,"count":2},{"x":9.225000000000001,"y":18.496875,"count":1},{"x":9.225000000000001,"y":20.756249999999998,"count":2},{"x":9.225000000000001,"y":23.015625,"count":2},{"x":9.225000000000001,"y":25.275,"count":1},{"x":9.225000000000001,"y":32.053125,"count":1},{"x":9.225000000000001,"y":34.3125,"count":3},{"x":9.225000000000001,"y":36.571875,"count":2},{"x":9.225000000000001,"y":38.83125,"count":2},{"x":9.225000000000001,"y":43.35,"count":1},{"x":9.225000000000001,"y":45.609375,"count":1},{"x":9.225000000000001,"y":52.3875,"count":2},{"x":9.225000000000001,"y":54.646875,"count":3},{"x":9.225000000000001,"y":56.90625,"count":1},{"x":9.225000000000001,"y":59.165625,"count":1},{"x":9.225000000000001,"y":63.684375,"count":3},{"x":9.225000000000001,"y":65.94375,"count":1},{"x":9.225000000000001,"y":68.203125,"count":1},{"x":9.225000000000001,"y":72.721875,"count":1},{"x":10.762500000000001,"y":9.459375,"count":2},{"x":10.762500000000001,"y":11.71875,"count":3},{"x":10.762500000000001,"y":18.496875,"count":2},{"x":10.762500000000001,"y":20.756249999999998,"count":1},{"x":10.762500000000001,"y":25.275,"count":1},{"x":10.762500000000001,"y":27.534374999999997,"count":1},{"x":10.762500000000001,"y":29.79375,"count":1},{"x":10.762500000000001,"y":32.053125,"count":1},{"x":10.762500000000001,"y":34.3125,"count":4},{"x":10.762500000000001,"y":36.571875,"count":2},{"x":10.762500000000001,"y":38.83125,"count":3},{"x":10.762500000000001,"y":41.090625,"count":3},{"x":10.762500000000001,"y":43.35,"count":1},{"x":10.762500000000001,"y":45.609375,"count":2},{"x":10.762500000000001,"y":47.86875,"count":1},{"x":10.762500000000001,"y":50.128125000000004,"count":1},{"x":10.762500000000001,"y":52.3875,"count":2},{"x":10.762500000000001,"y":54.646875,"count":2},{"x":10.762500000000001,"y":56.90625,"count":1},{"x":10.762500000000001,"y":59.165625,"count":1},{"x":10.762500000000001,"y":65.94375,"count":1},{"x":10.762500000000001,"y":68.203125,"count":3},{"x":10.762500000000001,"y":70.46249999999999,"count":1},{"x":10.762500000000001,"y":77.240625,"count":1},{"x":12.3,"y":9.459375,"count":3},{"x":12.3,"y":11.71875,"count":2},{"x":12.3,"y":13.978124999999999,"count":1},{"x":12.3,"y":18.496875,"count":1},{"x":12.3,"y":27.534374999999997,"count":1},{"x":12.3,"y":36.571875,"count":2},{"x":12.3,"y":38.83125,"count":1},{"x":12.3,"y":41.090625,"count":2},{"x":12.3,"y":43.35,"count":1},{"x":12.3,"y":45.609375,"count":1},{"x":12.3,"y":50.128125000000004,"count":1},{"x":12.3,"y":54.646875,"count":2},{"x":12.3,"y":56.90625,"count":1},{"x":12.3,"y":59.165625,"count":1},{"x":12.3,"y":63.684375,"count":2},{"x":12.3,"y":68.203125,"count":1},{"x":12.3,"y":70.46249999999999,"count":2},{"x":12.3,"y":72.721875,"count":1},{"x":13.8375,"y":9.459375,"count":2},{"x":13.8375,"y":13.978124999999999,"count":1},{"x":13.8375,"y":20.756249999999998,"count":2},{"x":13.8375,"y":23.015625,"count":1},{"x":13.8375,"y":25.275,"count":1},{"x":13.8375,"y":29.79375,"count":1},{"x":13.8375,"y":36.571875,"count":1},{"x":13.8375,"y":38.83125,"count":1},{"x":13.8375,"y":47.86875,"count":1},{"x":13.8375,"y":50.128125000000004,"count":1},{"x":13.8375,"y":52.3875,"count":1},{"x":13.8375,"y":56.90625,"count":1},{"x":13.8375,"y":63.684375,"count":1},{"x":13.8375,"y":65.94375,"count":4},{"x":13.8375,"y":72.721875,"count":1},{"x":15.375,"y":11.71875,"count":1},{"x":15.375,"y":16.2375,"count":1},{"x":15.375,"y":23.015625,"count":1},{"x":15.375,"y":25.275,"count":1},{"x":15.375,"y":32.053125,"count":1},{"x":15.375,"y":36.571875,"count":1},{"x":15.375,"y":41.090625,"count":1},{"x":15.375,"y":47.86875,"count":1},{"x":15.375,"y":50.128125000000004,"count":2},{"x":15.375,"y":59.165625,"count":2},{"x":15.375,"y":63.684375,"count":2},{"x":15.375,"y":68.203125,"count":3},{"x":15.375,"y":77.240625,"count":1},{"x":16.9125,"y":23.015625,"count":2},{"x":16.9125,"y":27.534374999999997,"count":1},{"x":16.9125,"y":29.79375,"count":2},{"x":16.9125,"y":32.053125,"count":1},{"x":16.9125,"y":36.571875,"count":1},{"x":16.9125,"y":50.128125000000004,"count":1},{"x":16.9125,"y":56.90625,"count":2},{"x":16.9125,"y":61.425,"count":2},{"x":16.9125,"y":63.684375,"count":2},{"x":16.9125,"y":65.94375,"count":2},{"x":16.9125,"y":68.203125,"count":1},{"x":16.9125,"y":70.46249999999999,"count":2},{"x":16.9125,"y":72.721875,"count":1},{"x":16.9125,"y":74.98125,"count":1},{"x":18.450000000000003,"y":9.459375,"count":2},{"x":18.450000000000003,"y":13.978124999999999,"count":1},{"x":18.450000000000003,"y":29.79375,"count":1},{"x":18.450000000000003,"y":32.053125,"count":1},{"x":18.450000000000003,"y":38.83125,"count":1},{"x":18.450000000000003,"y":41.090625,"count":1},{"x":18.450000000000003,"y":59.165625,"count":1},{"x":18.450000000000003,"y":63.684375,"count":1},{"x":18.450000000000003,"y":72.721875,"count":2},{"x":18.450000000000003,"y":77.240625,"count":1},{"x":19.9875,"y":16.2375,"count":1},{"x":19.9875,"y":18.496875,"count":2},{"x":19.9875,"y":38.83125,"count":2},{"x":19.9875,"y":50.128125000000004,"count":1},{"x":19.9875,"y":52.3875,"count":1},{"x":19.9875,"y":72.721875,"count":1},{"x":21.525000000000002,"y":11.71875,"count":1},{"x":21.525000000000002,"y":13.978124999999999,"count":1},{"x":21.525000000000002,"y":23.015625,"count":1},{"x":21.525000000000002,"y":25.275,"count":1},{"x":21.525000000000002,"y":29.79375,"count":1},{"x":21.525000000000002,"y":34.3125,"count":1},{"x":21.525000000000002,"y":43.35,"count":1},{"x":21.525000000000002,"y":45.609375,"count":1},{"x":21.525000000000002,"y":52.3875,"count":1},{"x":21.525000000000002,"y":56.90625,"count":2},{"x":21.525000000000002,"y":59.165625,"count":1},{"x":21.525000000000002,"y":61.425,"count":3},{"x":21.525000000000002,"y":70.46249999999999,"count":1},{"x":21.525000000000002,"y":72.721875,"count":1},{"x":23.0625,"y":18.496875,"count":1},{"x":23.0625,"y":20.756249999999998,"count":1},{"x":23.0625,"y":47.86875,"count":1},{"x":23.0625,"y":56.90625,"count":1},{"x":23.0625,"y":59.165625,"count":1},{"x":23.0625,"y":74.98125,"count":1},{"x":24.6,"y":23.015625,"count":1},{"x":24.6,"y":29.79375,"count":1},{"x":24.6,"y":36.571875,"count":1},{"x":24.6,"y":38.83125,"count":1},{"x":24.6,"y":41.090625,"count":1},{"x":24.6,"y":63.684375,"count":1},{"x":24.6,"y":65.94375,"count":1},{"x":24.6,"y":72.721875,"count":1},{"x":24.6,"y":74.98125,"count":1},{"x":26.137500000000003,"y":16.2375,"count":3},{"x":26.137500000000003,"y":27.534374999999997,"count":1},{"x":26.137500000000003,"y":32.053125,"count":1},{"x":26.137500000000003,"y":47.86875,"count":1},{"x":26.137500000000003,"y":56.90625,"count":1},{"x":26.137500000000003,"y":65.94375,"count":2},{"x":26.137500000000003,"y":70.46249999999999,"count":1},{"x":26.137500000000003,"y":77.240625,"count":2},{"x":27.675,"y":41.090625,"count":1},{"x":27.675,"y":45.609375,"count":1},{"x":27.675,"y":59.165625,"count":1},{"x":27.675,"y":61.425,"count":1},{"x":27.675,"y":70.46249999999999,"count":1},{"x":29.212500000000002,"y":25.275,"count":1},{"x":29.212500000000002,"y":36.571875,"count":1},{"x":29.212500000000002,"y":43.35,"count":1},{"x":29.212500000000002,"y":56.90625,"count":1},{"x":29.212500000000002,"y":61.425,"count":1},{"x":29.212500000000002,"y":65.94375,"count":1},{"x":29.212500000000002,"y":68.203125,"count":1},{"x":29.212500000000002,"y":70.46249999999999,"count":1},{"x":29.212500000000002,"y":72.721875,"count":1},{"x":30.75,"y":18.496875,"count":1},{"x":30.75,"y":29.79375,"count":1},{"x":30.75,"y":41.090625,"count":1},{"x":30.75,"y":59.165625,"count":1},{"x":30.75,"y":61.425,"count":1},{"x":30.75,"y":70.46249999999999,"count":1},{"x":30.75,"y":77.240625,"count":1},{"x":32.2875,"y":36.571875,"count":2},{"x":32.2875,"y":50.128125000000004,"count":1},{"x":32.2875,"y":63.684375,"count":1},{"x":32.2875,"y":65.94375,"count":1},{"x":32.2875,"y":70.46249999999999,"count":1},{"x":33.825,"y":11.71875,"count":1},{"x":33.825,"y":27.534374999999997,"count":1},{"x":33.825,"y":45.609375,"count":1},{"x":33.825,"y":59.165625,"count":1},{"x":33.825,"y":63.684375,"count":1},{"x":33.825,"y":65.94375,"count":1},{"x":33.825,"y":68.203125,"count":1},{"x":33.825,"y":72.721875,"count":1},{"x":36.900000000000006,"y":65.94375,"count":1},{"x":36.900000000000006,"y":72.721875,"count":1},{"x":38.4375,"y":65.94375,"count":1},{"x":39.975,"y":41.090625,"count":1},{"x":39.975,"y":61.425,"count":1},{"x":39.975,"y":72.721875,"count":1},{"x":39.975,"y":74.98125,"count":1},{"x":41.5125,"y":16.2375,"count":1},{"x":44.587500000000006,"y":59.165625,"count":1},{"x":47.6625,"y":68.203125,"count":1},{"x":47.6625,"y":70.46249999999999,"count":1}],"maxCount":6},"free throw percent":{"y":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"x":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"bins":[{"y":0,"x":0,"count":7},{"y":0,"x":3.075,"count":2},{"y":0,"x":4.612500000000001,"count":1},{"y":0,"x":6.15,"count":1},{"y":0,"x":7.6875,"count":1},{"y":0,"x":10.762500000000001,"count":3},{"y":0,"x":13.8375,"count":1},{"y":0,"x":29.212500000000002,"count":1},{"y":0,"x":33.825,"count":1},{"y":0.15625,"x":0,"count":1},{"y":0.1875,"x":0,"count":1},{"y":0.25,"x":3.075,"count":1},{"y":0.25,"x":4.612500000000001,"count":1},{"y":0.3125,"x":1.5375,"count":1},{"y":0.3125,"x":4.612500000000001,"count":1},{"y":0.3125,"x":16.9125,"count":1},{"y":0.34375,"x":9.225000000000001,"count":1},{"y":0.375,"x":0,"count":1},{"y":0.375,"x":9.225000000000001,"count":1},{"y":0.375,"x":12.3,"count":1},{"y":0.40625,"x":1.5375,"count":1},{"y":0.40625,"x":3.075,"count":1},{"y":0.40625,"x":4.612500000000001,"count":2},{"y":0.4375,"x":6.15,"count":1},{"y":0.4375,"x":13.8375,"count":1},{"y":0.46875,"x":1.5375,"count":2},{"y":0.46875,"x":4.612500000000001,"count":1},{"y":0.5,"x":0,"count":2},{"y":0.5,"x":3.075,"count":4},{"y":0.5,"x":4.612500000000001,"count":1},{"y":0.5,"x":6.15,"count":2},{"y":0.5,"x":7.6875,"count":2},{"y":0.5,"x":9.225000000000001,"count":1},{"y":0.5,"x":10.762500000000001,"count":4},{"y":0.5,"x":12.3,"count":2},{"y":0.5,"x":15.375,"count":2},{"y":0.5,"x":44.587500000000006,"count":1},{"y":0.53125,"x":0,"count":1},{"y":0.53125,"x":1.5375,"count":2},{"y":0.53125,"x":3.075,"count":2},{"y":0.53125,"x":4.612500000000001,"count":2},{"y":0.53125,"x":7.6875,"count":2},{"y":0.53125,"x":9.225000000000001,"count":1},{"y":0.53125,"x":13.8375,"count":1},{"y":0.5625,"x":0,"count":1},{"y":0.5625,"x":3.075,"count":3},{"y":0.5625,"x":4.612500000000001,"count":6},{"y":0.5625,"x":6.15,"count":2},{"y":0.5625,"x":7.6875,"count":3},{"y":0.5625,"x":10.762500000000001,"count":1},{"y":0.5625,"x":15.375,"count":1},{"y":0.5625,"x":21.525000000000002,"count":2},{"y":0.5625,"x":26.137500000000003,"count":1},{"y":0.59375,"x":1.5375,"count":1},{"y":0.59375,"x":3.075,"count":1},{"y":0.59375,"x":4.612500000000001,"count":3},{"y":0.59375,"x":6.15,"count":3},{"y":0.59375,"x":7.6875,"count":2},{"y":0.59375,"x":9.225000000000001,"count":1},{"y":0.59375,"x":19.9875,"count":1},{"y":0.59375,"x":26.137500000000003,"count":1},{"y":0.625,"x":1.5375,"count":2},{"y":0.625,"x":3.075,"count":2},{"y":0.625,"x":4.612500000000001,"count":6},{"y":0.625,"x":6.15,"count":3},{"y":0.625,"x":7.6875,"count":6},{"y":0.625,"x":9.225000000000001,"count":3},{"y":0.625,"x":10.762500000000001,"count":2},{"y":0.625,"x":13.8375,"count":1},{"y":0.625,"x":16.9125,"count":2},{"y":0.625,"x":18.450000000000003,"count":1},{"y":0.625,"x":19.9875,"count":1},{"y":0.625,"x":21.525000000000002,"count":1},{"y":0.625,"x":30.75,"count":1},{"y":0.625,"x":47.6625,"count":1},{"y":0.65625,"x":1.5375,"count":1},{"y":0.65625,"x":3.075,"count":3},{"y":0.65625,"x":4.612500000000001,"count":5},{"y":0.65625,"x":6.15,"count":2},{"y":0.65625,"x":7.6875,"count":5},{"y":0.65625,"x":9.225000000000001,"count":2},{"y":0.65625,"x":10.762500000000001,"count":4},{"y":0.65625,"x":12.3,"count":1},{"y":0.65625,"x":13.8375,"count":2},{"y":0.65625,"x":15.375,"count":1},{"y":0.65625,"x":18.450000000000003,"count":1},{"y":0.65625,"x":21.525000000000002,"count":1},{"y":0.65625,"x":24.6,"count":1},{"y":0.65625,"x":26.137500000000003,"count":1},{"y":0.65625,"x":30.75,"count":1},{"y":0.6875,"x":1.5375,"count":1},{"y":0.6875,"x":3.075,"count":1},{"y":0.6875,"x":4.612500000000001,"count":4},{"y":0.6875,"x":6.15,"count":5},{"y":0.6875,"x":7.6875,"count":3},{"y":0.6875,"x":9.225000000000001,"count":2},{"y":0.6875,"x":10.762500000000001,"count":3},{"y":0.6875,"x":12.3,"count":2},{"y":0.6875,"x":13.8375,"count":2},{"y":0.6875,"x":15.375,"count":1},{"y":0.6875,"x":16.9125,"count":1},{"y":0.6875,"x":18.450000000000003,"count":2},{"y":0.6875,"x":21.525000000000002,"count":1},{"y":0.6875,"x":24.6,"count":2},{"y":0.6875,"x":26.137500000000003,"count":1},{"y":0.6875,"x":29.212500000000002,"count":1},{"y":0.71875,"x":3.075,"count":4},{"y":0.71875,"x":4.612500000000001,"count":1},{"y":0.71875,"x":6.15,"count":1},{"y":0.71875,"x":7.6875,"count":2},{"y":0.71875,"x":9.225000000000001,"count":8},{"y":0.71875,"x":10.762500000000001,"count":1},{"y":0.71875,"x":12.3,"count":2},{"y":0.71875,"x":13.8375,"count":1},{"y":0.71875,"x":15.375,"count":3},{"y":0.71875,"x":16.9125,"count":3},{"y":0.71875,"x":18.450000000000003,"count":1},{"y":0.71875,"x":19.9875,"count":2},{"y":0.71875,"x":21.525000000000002,"count":1},{"y":0.71875,"x":23.0625,"count":1},{"y":0.71875,"x":24.6,"count":2},{"y":0.71875,"x":26.137500000000003,"count":1},{"y":0.71875,"x":27.675,"count":1},{"y":0.71875,"x":33.825,"count":1},{"y":0.71875,"x":41.5125,"count":1},{"y":0.75,"x":0,"count":1},{"y":0.75,"x":3.075,"count":4},{"y":0.75,"x":4.612500000000001,"count":6},{"y":0.75,"x":6.15,"count":8},{"y":0.75,"x":7.6875,"count":11},{"y":0.75,"x":9.225000000000001,"count":6},{"y":0.75,"x":10.762500000000001,"count":10},{"y":0.75,"x":13.8375,"count":3},{"y":0.75,"x":16.9125,"count":3},{"y":0.75,"x":18.450000000000003,"count":2},{"y":0.75,"x":21.525000000000002,"count":2},{"y":0.75,"x":26.137500000000003,"count":1},{"y":0.75,"x":27.675,"count":1},{"y":0.75,"x":29.212500000000002,"count":1},{"y":0.75,"x":30.75,"count":1},{"y":0.75,"x":33.825,"count":1},{"y":0.78125,"x":1.5375,"count":1},{"y":0.78125,"x":3.075,"count":2},{"y":0.78125,"x":4.612500000000001,"count":4},{"y":0.78125,"x":6.15,"count":4},{"y":0.78125,"x":7.6875,"count":11},{"y":0.78125,"x":9.225000000000001,"count":3},{"y":0.78125,"x":10.762500000000001,"count":3},{"y":0.78125,"x":12.3,"count":5},{"y":0.78125,"x":13.8375,"count":1},{"y":0.78125,"x":15.375,"count":4},{"y":0.78125,"x":16.9125,"count":2},{"y":0.78125,"x":19.9875,"count":2},{"y":0.78125,"x":21.525000000000002,"count":2},{"y":0.78125,"x":23.0625,"count":1},{"y":0.78125,"x":24.6,"count":1},{"y":0.78125,"x":26.137500000000003,"count":2},{"y":0.78125,"x":30.75,"count":2},{"y":0.78125,"x":32.2875,"count":4},{"y":0.78125,"x":36.900000000000006,"count":2},{"y":0.78125,"x":38.4375,"count":1},{"y":0.78125,"x":39.975,"count":1},{"y":0.8125,"x":3.075,"count":3},{"y":0.8125,"x":4.612500000000001,"count":6},{"y":0.8125,"x":6.15,"count":8},{"y":0.8125,"x":7.6875,"count":4},{"y":0.8125,"x":9.225000000000001,"count":1},{"y":0.8125,"x":10.762500000000001,"count":5},{"y":0.8125,"x":12.3,"count":5},{"y":0.8125,"x":13.8375,"count":4},{"y":0.8125,"x":15.375,"count":3},{"y":0.8125,"x":16.9125,"count":5},{"y":0.8125,"x":18.450000000000003,"count":4},{"y":0.8125,"x":19.9875,"count":2},{"y":0.8125,"x":21.525000000000002,"count":4},{"y":0.8125,"x":23.0625,"count":1},{"y":0.8125,"x":24.6,"count":1},{"y":0.8125,"x":29.212500000000002,"count":3},{"y":0.8125,"x":33.825,"count":2},{"y":0.8125,"x":39.975,"count":1},{"y":0.84375,"x":4.612500000000001,"count":1},{"y":0.84375,"x":6.15,"count":4},{"y":0.84375,"x":7.6875,"count":6},{"y":0.84375,"x":10.762500000000001,"count":1},{"y":0.84375,"x":12.3,"count":2},{"y":0.84375,"x":13.8375,"count":1},{"y":0.84375,"x":15.375,"count":2},{"y":0.84375,"x":16.9125,"count":4},{"y":0.84375,"x":21.525000000000002,"count":1},{"y":0.84375,"x":23.0625,"count":1},{"y":0.84375,"x":24.6,"count":1},{"y":0.84375,"x":26.137500000000003,"count":3},{"y":0.84375,"x":27.675,"count":2},{"y":0.84375,"x":29.212500000000002,"count":1},{"y":0.84375,"x":30.75,"count":2},{"y":0.84375,"x":32.2875,"count":1},{"y":0.84375,"x":33.825,"count":3},{"y":0.84375,"x":47.6625,"count":1},{"y":0.875,"x":0,"count":1},{"y":0.875,"x":4.612500000000001,"count":1},{"y":0.875,"x":6.15,"count":1},{"y":0.875,"x":7.6875,"count":1},{"y":0.875,"x":9.225000000000001,"count":2},{"y":0.875,"x":10.762500000000001,"count":2},{"y":0.875,"x":12.3,"count":1},{"y":0.875,"x":13.8375,"count":1},{"y":0.875,"x":15.375,"count":1},{"y":0.875,"x":23.0625,"count":2},{"y":0.875,"x":27.675,"count":1},{"y":0.875,"x":29.212500000000002,"count":2},{"y":0.875,"x":39.975,"count":1},{"y":0.90625,"x":6.15,"count":1},{"y":0.90625,"x":9.225000000000001,"count":1},{"y":0.90625,"x":12.3,"count":3},{"y":0.90625,"x":24.6,"count":1},{"y":0.90625,"x":39.975,"count":1},{"y":0.9375,"x":3.075,"count":2},{"y":0.9375,"x":4.612500000000001,"count":1},{"y":0.9375,"x":7.6875,"count":1},{"y":0.9375,"x":12.3,"count":1},{"y":0.9375,"x":21.525000000000002,"count":1},{"y":0.9375,"x":32.2875,"count":1},{"y":0.96875,"x":0,"count":2},{"y":0.96875,"x":3.075,"count":2},{"y":0.96875,"x":4.612500000000001,"count":2},{"y":0.96875,"x":6.15,"count":1},{"y":0.96875,"x":7.6875,"count":1},{"y":0.96875,"x":9.225000000000001,"count":1},{"y":0.96875,"x":10.762500000000001,"count":2},{"y":0.96875,"x":12.3,"count":1},{"y":0.96875,"x":13.8375,"count":1},{"y":0.96875,"x":18.450000000000003,"count":1},{"y":0.96875,"x":21.525000000000002,"count":1},{"y":0.96875,"x":26.137500000000003,"count":1}],"maxCount":11},"minutes":{"y":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"x":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"bins":[{"y":5.1000000000000005,"x":0,"count":3},{"y":5.1000000000000005,"x":4.612500000000001,"count":2},{"y":5.1000000000000005,"x":10.762500000000001,"count":3},{"y":5.1000000000000005,"x":12.3,"count":3},{"y":5.1000000000000005,"x":13.8375,"count":1},{"y":5.1000000000000005,"x":18.450000000000003,"count":2},{"y":6.143750000000001,"x":0,"count":2},{"y":6.143750000000001,"x":1.5375,"count":1},{"y":6.143750000000001,"x":3.075,"count":1},{"y":6.143750000000001,"x":4.612500000000001,"count":3},{"y":6.143750000000001,"x":6.15,"count":4},{"y":6.143750000000001,"x":7.6875,"count":3},{"y":6.143750000000001,"x":10.762500000000001,"count":2},{"y":6.143750000000001,"x":12.3,"count":2},{"y":6.143750000000001,"x":13.8375,"count":1},{"y":6.143750000000001,"x":21.525000000000002,"count":2},{"y":6.143750000000001,"x":33.825,"count":1},{"y":7.1875,"x":0,"count":2},{"y":7.1875,"x":1.5375,"count":1},{"y":7.1875,"x":3.075,"count":5},{"y":7.1875,"x":4.612500000000001,"count":2},{"y":7.1875,"x":6.15,"count":2},{"y":7.1875,"x":7.6875,"count":2},{"y":7.1875,"x":9.225000000000001,"count":1},{"y":7.1875,"x":12.3,"count":1},{"y":7.1875,"x":13.8375,"count":1},{"y":7.1875,"x":18.450000000000003,"count":1},{"y":7.1875,"x":19.9875,"count":1},{"y":7.1875,"x":41.5125,"count":1},{"y":8.23125,"x":0,"count":4},{"y":8.23125,"x":1.5375,"count":1},{"y":8.23125,"x":3.075,"count":3},{"y":8.23125,"x":4.612500000000001,"count":2},{"y":8.23125,"x":6.15,"count":3},{"y":8.23125,"x":7.6875,"count":1},{"y":8.23125,"x":9.225000000000001,"count":4},{"y":8.23125,"x":12.3,"count":1},{"y":8.23125,"x":15.375,"count":2},{"y":8.23125,"x":19.9875,"count":1},{"y":8.23125,"x":26.137500000000003,"count":3},{"y":8.23125,"x":30.75,"count":1},{"y":9.275,"x":0,"count":1},{"y":9.275,"x":1.5375,"count":1},{"y":9.275,"x":3.075,"count":4},{"y":9.275,"x":4.612500000000001,"count":3},{"y":9.275,"x":6.15,"count":3},{"y":9.275,"x":7.6875,"count":2},{"y":9.275,"x":9.225000000000001,"count":1},{"y":9.275,"x":10.762500000000001,"count":3},{"y":9.275,"x":19.9875,"count":1},{"y":9.275,"x":23.0625,"count":1},{"y":10.318750000000001,"x":3.075,"count":2},{"y":10.318750000000001,"x":4.612500000000001,"count":3},{"y":10.318750000000001,"x":6.15,"count":2},{"y":10.318750000000001,"x":7.6875,"count":2},{"y":10.318750000000001,"x":9.225000000000001,"count":2},{"y":10.318750000000001,"x":13.8375,"count":2},{"y":10.318750000000001,"x":15.375,"count":1},{"y":10.318750000000001,"x":23.0625,"count":1},{"y":11.3625,"x":4.612500000000001,"count":4},{"y":11.3625,"x":6.15,"count":2},{"y":11.3625,"x":7.6875,"count":3},{"y":11.3625,"x":9.225000000000001,"count":2},{"y":11.3625,"x":16.9125,"count":1},{"y":11.3625,"x":21.525000000000002,"count":1},{"y":11.3625,"x":24.6,"count":1},{"y":12.40625,"x":0,"count":1},{"y":12.40625,"x":1.5375,"count":1},{"y":12.40625,"x":3.075,"count":3},{"y":12.40625,"x":4.612500000000001,"count":2},{"y":12.40625,"x":6.15,"count":2},{"y":12.40625,"x":7.6875,"count":1},{"y":12.40625,"x":9.225000000000001,"count":1},{"y":12.40625,"x":13.8375,"count":2},{"y":12.40625,"x":16.9125,"count":1},{"y":12.40625,"x":21.525000000000002,"count":1},{"y":13.45,"x":0,"count":3},{"y":13.45,"x":1.5375,"count":2},{"y":13.45,"x":3.075,"count":3},{"y":13.45,"x":4.612500000000001,"count":4},{"y":13.45,"x":6.15,"count":1},{"y":13.45,"x":10.762500000000001,"count":1},{"y":13.45,"x":12.3,"count":1},{"y":13.45,"x":15.375,"count":1},{"y":13.45,"x":16.9125,"count":1},{"y":13.45,"x":26.137500000000003,"count":1},{"y":13.45,"x":29.212500000000002,"count":1},{"y":14.493749999999999,"x":0,"count":1},{"y":14.493749999999999,"x":1.5375,"count":2},{"y":14.493749999999999,"x":3.075,"count":4},{"y":14.493749999999999,"x":4.612500000000001,"count":4},{"y":14.493749999999999,"x":6.15,"count":1},{"y":14.493749999999999,"x":7.6875,"count":3},{"y":14.493749999999999,"x":10.762500000000001,"count":1},{"y":14.493749999999999,"x":16.9125,"count":2},{"y":14.493749999999999,"x":21.525000000000002,"count":1},{"y":14.493749999999999,"x":30.75,"count":1},{"y":14.493749999999999,"x":33.825,"count":1},{"y":15.537500000000001,"x":1.5375,"count":1},{"y":15.537500000000001,"x":3.075,"count":1},{"y":15.537500000000001,"x":6.15,"count":3},{"y":15.537500000000001,"x":7.6875,"count":5},{"y":15.537500000000001,"x":9.225000000000001,"count":1},{"y":15.537500000000001,"x":10.762500000000001,"count":1},{"y":15.537500000000001,"x":13.8375,"count":1},{"y":15.537500000000001,"x":15.375,"count":1},{"y":15.537500000000001,"x":16.9125,"count":1},{"y":15.537500000000001,"x":18.450000000000003,"count":2},{"y":15.537500000000001,"x":24.6,"count":1},{"y":15.537500000000001,"x":26.137500000000003,"count":1},{"y":16.58125,"x":4.612500000000001,"count":1},{"y":16.58125,"x":6.15,"count":2},{"y":16.58125,"x":7.6875,"count":2},{"y":16.58125,"x":9.225000000000001,"count":3},{"y":16.58125,"x":10.762500000000001,"count":3},{"y":16.58125,"x":21.525000000000002,"count":1},{"y":17.625,"x":4.612500000000001,"count":2},{"y":17.625,"x":6.15,"count":3},{"y":17.625,"x":7.6875,"count":2},{"y":17.625,"x":9.225000000000001,"count":1},{"y":17.625,"x":10.762500000000001,"count":3},{"y":17.625,"x":12.3,"count":1},{"y":17.625,"x":16.9125,"count":1},{"y":17.625,"x":32.2875,"count":2},{"y":18.66875,"x":0,"count":1},{"y":18.66875,"x":1.5375,"count":1},{"y":18.66875,"x":4.612500000000001,"count":3},{"y":18.66875,"x":6.15,"count":2},{"y":18.66875,"x":7.6875,"count":5},{"y":18.66875,"x":9.225000000000001,"count":1},{"y":18.66875,"x":10.762500000000001,"count":4},{"y":18.66875,"x":12.3,"count":1},{"y":18.66875,"x":13.8375,"count":2},{"y":18.66875,"x":15.375,"count":1},{"y":18.66875,"x":18.450000000000003,"count":1},{"y":18.66875,"x":19.9875,"count":2},{"y":18.66875,"x":24.6,"count":2},{"y":18.66875,"x":29.212500000000002,"count":1},{"y":19.7125,"x":3.075,"count":3},{"y":19.7125,"x":4.612500000000001,"count":4},{"y":19.7125,"x":7.6875,"count":2},{"y":19.7125,"x":9.225000000000001,"count":2},{"y":19.7125,"x":10.762500000000001,"count":1},{"y":19.7125,"x":12.3,"count":3},{"y":19.7125,"x":15.375,"count":1},{"y":19.7125,"x":27.675,"count":1},{"y":19.7125,"x":30.75,"count":1},{"y":19.7125,"x":39.975,"count":1},{"y":20.75625,"x":4.612500000000001,"count":1},{"y":20.75625,"x":6.15,"count":1},{"y":20.75625,"x":7.6875,"count":1},{"y":20.75625,"x":9.225000000000001,"count":1},{"y":20.75625,"x":10.762500000000001,"count":3},{"y":20.75625,"x":18.450000000000003,"count":1},{"y":20.75625,"x":21.525000000000002,"count":1},{"y":20.75625,"x":24.6,"count":1},{"y":20.75625,"x":29.212500000000002,"count":1},{"y":21.8,"x":3.075,"count":1},{"y":21.8,"x":6.15,"count":2},{"y":21.8,"x":7.6875,"count":2},{"y":21.8,"x":10.762500000000001,"count":1},{"y":21.8,"x":12.3,"count":1},{"y":21.8,"x":27.675,"count":1},{"y":21.8,"x":33.825,"count":1},{"y":22.84375,"x":4.612500000000001,"count":1},{"y":22.84375,"x":7.6875,"count":2},{"y":22.84375,"x":9.225000000000001,"count":1},{"y":22.84375,"x":10.762500000000001,"count":1},{"y":22.84375,"x":12.3,"count":1},{"y":22.84375,"x":21.525000000000002,"count":1},{"y":22.84375,"x":26.137500000000003,"count":1},{"y":23.8875,"x":3.075,"count":2},{"y":23.8875,"x":4.612500000000001,"count":4},{"y":23.8875,"x":6.15,"count":2},{"y":23.8875,"x":7.6875,"count":1},{"y":23.8875,"x":10.762500000000001,"count":2},{"y":23.8875,"x":13.8375,"count":2},{"y":23.8875,"x":15.375,"count":3},{"y":23.8875,"x":16.9125,"count":1},{"y":23.8875,"x":23.0625,"count":1},{"y":24.931250000000002,"x":4.612500000000001,"count":1},{"y":24.931250000000002,"x":7.6875,"count":5},{"y":24.931250000000002,"x":12.3,"count":1},{"y":24.931250000000002,"x":13.8375,"count":1},{"y":24.931250000000002,"x":19.9875,"count":2},{"y":24.931250000000002,"x":21.525000000000002,"count":1},{"y":24.931250000000002,"x":32.2875,"count":1},{"y":25.975,"x":4.612500000000001,"count":3},{"y":25.975,"x":6.15,"count":3},{"y":25.975,"x":7.6875,"count":2},{"y":25.975,"x":9.225000000000001,"count":3},{"y":25.975,"x":10.762500000000001,"count":4},{"y":25.975,"x":12.3,"count":1},{"y":27.01875,"x":3.075,"count":1},{"y":27.01875,"x":6.15,"count":4},{"y":27.01875,"x":7.6875,"count":1},{"y":27.01875,"x":9.225000000000001,"count":2},{"y":27.01875,"x":10.762500000000001,"count":1},{"y":27.01875,"x":12.3,"count":2},{"y":27.01875,"x":13.8375,"count":1},{"y":27.01875,"x":16.9125,"count":2},{"y":27.01875,"x":21.525000000000002,"count":1},{"y":27.01875,"x":29.212500000000002,"count":1},{"y":28.0625,"x":4.612500000000001,"count":1},{"y":28.0625,"x":6.15,"count":1},{"y":28.0625,"x":7.6875,"count":3},{"y":28.0625,"x":9.225000000000001,"count":2},{"y":28.0625,"x":15.375,"count":1},{"y":28.0625,"x":21.525000000000002,"count":2},{"y":28.0625,"x":23.0625,"count":1},{"y":28.0625,"x":27.675,"count":1},{"y":28.0625,"x":44.587500000000006,"count":1},{"y":29.10625,"x":4.612500000000001,"count":1},{"y":29.10625,"x":6.15,"count":3},{"y":29.10625,"x":7.6875,"count":2},{"y":29.10625,"x":10.762500000000001,"count":1},{"y":29.10625,"x":12.3,"count":1},{"y":29.10625,"x":15.375,"count":1},{"y":29.10625,"x":16.9125,"count":1},{"y":29.10625,"x":18.450000000000003,"count":1},{"y":29.10625,"x":21.525000000000002,"count":1},{"y":29.10625,"x":23.0625,"count":1},{"y":29.10625,"x":30.75,"count":1},{"y":29.10625,"x":33.825,"count":1},{"y":30.15,"x":4.612500000000001,"count":1},{"y":30.15,"x":7.6875,"count":3},{"y":30.15,"x":9.225000000000001,"count":1},{"y":30.15,"x":12.3,"count":1},{"y":30.15,"x":15.375,"count":1},{"y":30.15,"x":16.9125,"count":1},{"y":30.15,"x":21.525000000000002,"count":2},{"y":30.15,"x":26.137500000000003,"count":1},{"y":30.15,"x":27.675,"count":1},{"y":30.15,"x":29.212500000000002,"count":1},{"y":30.15,"x":30.75,"count":1},{"y":30.15,"x":39.975,"count":1},{"y":31.19375,"x":1.5375,"count":1},{"y":31.19375,"x":3.075,"count":2},{"y":31.19375,"x":4.612500000000001,"count":2},{"y":31.19375,"x":6.15,"count":1},{"y":31.19375,"x":7.6875,"count":2},{"y":31.19375,"x":9.225000000000001,"count":2},{"y":31.19375,"x":12.3,"count":1},{"y":31.19375,"x":13.8375,"count":1},{"y":31.19375,"x":15.375,"count":1},{"y":31.19375,"x":16.9125,"count":4},{"y":31.19375,"x":18.450000000000003,"count":1},{"y":31.19375,"x":29.212500000000002,"count":1},{"y":31.19375,"x":32.2875,"count":1},{"y":31.19375,"x":33.825,"count":2},{"y":31.19375,"x":36.900000000000006,"count":1},{"y":32.2375,"x":4.612500000000001,"count":1},{"y":32.2375,"x":7.6875,"count":2},{"y":32.2375,"x":9.225000000000001,"count":1},{"y":32.2375,"x":10.762500000000001,"count":1},{"y":32.2375,"x":13.8375,"count":4},{"y":32.2375,"x":16.9125,"count":1},{"y":32.2375,"x":24.6,"count":2},{"y":32.2375,"x":26.137500000000003,"count":2},{"y":32.2375,"x":32.2875,"count":1},{"y":32.2375,"x":47.6625,"count":1},{"y":33.28125,"x":7.6875,"count":1},{"y":33.28125,"x":9.225000000000001,"count":1},{"y":33.28125,"x":10.762500000000001,"count":2},{"y":33.28125,"x":12.3,"count":2},{"y":33.28125,"x":15.375,"count":2},{"y":33.28125,"x":29.212500000000002,"count":2},{"y":33.28125,"x":33.825,"count":1},{"y":33.28125,"x":38.4375,"count":1},{"y":34.324999999999996,"x":3.075,"count":1},{"y":34.324999999999996,"x":7.6875,"count":1},{"y":34.324999999999996,"x":9.225000000000001,"count":1},{"y":34.324999999999996,"x":10.762500000000001,"count":2},{"y":34.324999999999996,"x":12.3,"count":1},{"y":34.324999999999996,"x":13.8375,"count":1},{"y":34.324999999999996,"x":15.375,"count":1},{"y":34.324999999999996,"x":16.9125,"count":2},{"y":34.324999999999996,"x":21.525000000000002,"count":1},{"y":34.324999999999996,"x":26.137500000000003,"count":1},{"y":34.324999999999996,"x":27.675,"count":1},{"y":34.324999999999996,"x":30.75,"count":1},{"y":34.324999999999996,"x":32.2875,"count":1},{"y":34.324999999999996,"x":47.6625,"count":1},{"y":35.36875,"x":3.075,"count":1},{"y":35.36875,"x":12.3,"count":1},{"y":35.36875,"x":16.9125,"count":1},{"y":35.36875,"x":18.450000000000003,"count":1},{"y":35.36875,"x":19.9875,"count":1},{"y":35.36875,"x":21.525000000000002,"count":1},{"y":35.36875,"x":23.0625,"count":1},{"y":35.36875,"x":24.6,"count":1},{"y":35.36875,"x":29.212500000000002,"count":1},{"y":35.36875,"x":33.825,"count":1},{"y":35.36875,"x":36.900000000000006,"count":1},{"y":35.36875,"x":39.975,"count":2},{"y":36.4125,"x":16.9125,"count":1},{"y":36.4125,"x":18.450000000000003,"count":1},{"y":36.4125,"x":24.6,"count":1},{"y":37.45625,"x":10.762500000000001,"count":1},{"y":37.45625,"x":15.375,"count":1},{"y":37.45625,"x":18.450000000000003,"count":1},{"y":37.45625,"x":26.137500000000003,"count":2},{"y":37.45625,"x":30.75,"count":1}],"maxCount":5}},"steals per game":{"minutes":{"y":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"x":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"bins":[{"y":5.1000000000000005,"x":0,"count":5},{"y":5.1000000000000005,"x":0.0775,"count":2},{"y":5.1000000000000005,"x":0.155,"count":2},{"y":5.1000000000000005,"x":0.23249999999999998,"count":2},{"y":5.1000000000000005,"x":0.46499999999999997,"count":3},{"y":6.143750000000001,"x":0,"count":8},{"y":6.143750000000001,"x":0.0775,"count":4},{"y":6.143750000000001,"x":0.155,"count":6},{"y":6.143750000000001,"x":0.23249999999999998,"count":2},{"y":6.143750000000001,"x":0.31,"count":2},{"y":7.1875,"x":0,"count":1},{"y":7.1875,"x":0.0775,"count":6},{"y":7.1875,"x":0.155,"count":7},{"y":7.1875,"x":0.23249999999999998,"count":2},{"y":7.1875,"x":0.31,"count":2},{"y":7.1875,"x":0.46499999999999997,"count":1},{"y":7.1875,"x":0.62,"count":1},{"y":8.23125,"x":0,"count":4},{"y":8.23125,"x":0.0775,"count":4},{"y":8.23125,"x":0.155,"count":8},{"y":8.23125,"x":0.23249999999999998,"count":1},{"y":8.23125,"x":0.31,"count":4},{"y":8.23125,"x":0.3875,"count":1},{"y":8.23125,"x":0.46499999999999997,"count":2},{"y":8.23125,"x":0.5425,"count":1},{"y":8.23125,"x":1.9375,"count":1},{"y":9.275,"x":0,"count":1},{"y":9.275,"x":0.0775,"count":3},{"y":9.275,"x":0.155,"count":3},{"y":9.275,"x":0.23249999999999998,"count":3},{"y":9.275,"x":0.31,"count":3},{"y":9.275,"x":0.46499999999999997,"count":4},{"y":9.275,"x":0.5425,"count":3},{"y":10.318750000000001,"x":0,"count":1},{"y":10.318750000000001,"x":0.0775,"count":2},{"y":10.318750000000001,"x":0.23249999999999998,"count":3},{"y":10.318750000000001,"x":0.31,"count":3},{"y":10.318750000000001,"x":0.3875,"count":2},{"y":10.318750000000001,"x":0.46499999999999997,"count":1},{"y":10.318750000000001,"x":0.5425,"count":1},{"y":10.318750000000001,"x":0.62,"count":1},{"y":10.318750000000001,"x":0.775,"count":1},{"y":11.3625,"x":0.0775,"count":4},{"y":11.3625,"x":0.155,"count":1},{"y":11.3625,"x":0.31,"count":4},{"y":11.3625,"x":0.46499999999999997,"count":1},{"y":11.3625,"x":0.5425,"count":2},{"y":11.3625,"x":0.62,"count":1},{"y":11.3625,"x":0.775,"count":1},{"y":12.40625,"x":0,"count":1},{"y":12.40625,"x":0.155,"count":3},{"y":12.40625,"x":0.31,"count":3},{"y":12.40625,"x":0.3875,"count":2},{"y":12.40625,"x":0.46499999999999997,"count":3},{"y":12.40625,"x":0.5425,"count":1},{"y":12.40625,"x":0.62,"count":1},{"y":12.40625,"x":0.8525,"count":1},{"y":13.45,"x":0,"count":2},{"y":13.45,"x":0.0775,"count":1},{"y":13.45,"x":0.155,"count":1},{"y":13.45,"x":0.23249999999999998,"count":4},{"y":13.45,"x":0.31,"count":2},{"y":13.45,"x":0.3875,"count":2},{"y":13.45,"x":0.46499999999999997,"count":4},{"y":13.45,"x":0.6975,"count":1},{"y":13.45,"x":0.775,"count":1},{"y":13.45,"x":1.24,"count":1},{"y":14.493749999999999,"x":0,"count":1},{"y":14.493749999999999,"x":0.23249999999999998,"count":2},{"y":14.493749999999999,"x":0.31,"count":4},{"y":14.493749999999999,"x":0.3875,"count":5},{"y":14.493749999999999,"x":0.46499999999999997,"count":3},{"y":14.493749999999999,"x":0.5425,"count":2},{"y":14.493749999999999,"x":0.62,"count":2},{"y":14.493749999999999,"x":0.6975,"count":1},{"y":14.493749999999999,"x":0.8525,"count":1},{"y":15.537500000000001,"x":0.155,"count":1},{"y":15.537500000000001,"x":0.23249999999999998,"count":1},{"y":15.537500000000001,"x":0.31,"count":5},{"y":15.537500000000001,"x":0.3875,"count":2},{"y":15.537500000000001,"x":0.46499999999999997,"count":2},{"y":15.537500000000001,"x":0.5425,"count":1},{"y":15.537500000000001,"x":0.62,"count":3},{"y":15.537500000000001,"x":0.6975,"count":1},{"y":15.537500000000001,"x":0.8525,"count":2},{"y":15.537500000000001,"x":0.9299999999999999,"count":1},{"y":16.58125,"x":0.23249999999999998,"count":1},{"y":16.58125,"x":0.31,"count":2},{"y":16.58125,"x":0.3875,"count":2},{"y":16.58125,"x":0.46499999999999997,"count":2},{"y":16.58125,"x":0.5425,"count":2},{"y":16.58125,"x":0.62,"count":1},{"y":16.58125,"x":0.775,"count":1},{"y":16.58125,"x":0.8525,"count":1},{"y":17.625,"x":0,"count":1},{"y":17.625,"x":0.31,"count":5},{"y":17.625,"x":0.3875,"count":2},{"y":17.625,"x":0.46499999999999997,"count":1},{"y":17.625,"x":0.62,"count":3},{"y":17.625,"x":0.6975,"count":2},{"y":17.625,"x":0.775,"count":1},{"y":18.66875,"x":0,"count":1},{"y":18.66875,"x":0.23249999999999998,"count":2},{"y":18.66875,"x":0.31,"count":1},{"y":18.66875,"x":0.3875,"count":6},{"y":18.66875,"x":0.46499999999999997,"count":3},{"y":18.66875,"x":0.5425,"count":1},{"y":18.66875,"x":0.62,"count":1},{"y":18.66875,"x":0.6975,"count":4},{"y":18.66875,"x":0.775,"count":3},{"y":18.66875,"x":0.8525,"count":2},{"y":18.66875,"x":0.9299999999999999,"count":2},{"y":18.66875,"x":1.0075,"count":1},{"y":19.7125,"x":0.155,"count":1},{"y":19.7125,"x":0.23249999999999998,"count":3},{"y":19.7125,"x":0.31,"count":2},{"y":19.7125,"x":0.3875,"count":2},{"y":19.7125,"x":0.46499999999999997,"count":3},{"y":19.7125,"x":0.5425,"count":1},{"y":19.7125,"x":0.62,"count":3},{"y":19.7125,"x":0.6975,"count":2},{"y":19.7125,"x":0.775,"count":1},{"y":19.7125,"x":0.9299999999999999,"count":1},{"y":20.75625,"x":0.31,"count":1},{"y":20.75625,"x":0.3875,"count":2},{"y":20.75625,"x":0.46499999999999997,"count":1},{"y":20.75625,"x":0.5425,"count":2},{"y":20.75625,"x":0.62,"count":1},{"y":20.75625,"x":0.6975,"count":1},{"y":20.75625,"x":0.9299999999999999,"count":1},{"y":20.75625,"x":1.0075,"count":1},{"y":20.75625,"x":1.1625,"count":1},{"y":21.8,"x":0.31,"count":2},{"y":21.8,"x":0.46499999999999997,"count":1},{"y":21.8,"x":0.62,"count":2},{"y":21.8,"x":0.8525,"count":1},{"y":21.8,"x":0.9299999999999999,"count":1},{"y":21.8,"x":1.0075,"count":2},{"y":22.84375,"x":0.46499999999999997,"count":2},{"y":22.84375,"x":0.5425,"count":3},{"y":22.84375,"x":0.8525,"count":1},{"y":22.84375,"x":1.0075,"count":1},{"y":22.84375,"x":1.6275,"count":1},{"y":23.8875,"x":0.3875,"count":1},{"y":23.8875,"x":0.46499999999999997,"count":1},{"y":23.8875,"x":0.5425,"count":1},{"y":23.8875,"x":0.62,"count":6},{"y":23.8875,"x":0.6975,"count":3},{"y":23.8875,"x":0.775,"count":2},{"y":23.8875,"x":0.9299999999999999,"count":2},{"y":23.8875,"x":1.1625,"count":1},{"y":23.8875,"x":1.24,"count":1},{"y":24.931250000000002,"x":0.31,"count":1},{"y":24.931250000000002,"x":0.46499999999999997,"count":2},{"y":24.931250000000002,"x":0.5425,"count":1},{"y":24.931250000000002,"x":0.62,"count":1},{"y":24.931250000000002,"x":0.775,"count":2},{"y":24.931250000000002,"x":0.9299999999999999,"count":1},{"y":24.931250000000002,"x":1.0075,"count":1},{"y":24.931250000000002,"x":1.085,"count":1},{"y":24.931250000000002,"x":1.1625,"count":1},{"y":24.931250000000002,"x":1.24,"count":1},{"y":25.975,"x":0.31,"count":2},{"y":25.975,"x":0.5425,"count":2},{"y":25.975,"x":0.62,"count":1},{"y":25.975,"x":0.6975,"count":4},{"y":25.975,"x":0.775,"count":3},{"y":25.975,"x":0.8525,"count":2},{"y":25.975,"x":1.085,"count":1},{"y":25.975,"x":1.24,"count":1},{"y":27.01875,"x":0.23249999999999998,"count":1},{"y":27.01875,"x":0.3875,"count":1},{"y":27.01875,"x":0.46499999999999997,"count":2},{"y":27.01875,"x":0.62,"count":1},{"y":27.01875,"x":0.6975,"count":3},{"y":27.01875,"x":0.775,"count":2},{"y":27.01875,"x":0.8525,"count":2},{"y":27.01875,"x":1.0075,"count":1},{"y":27.01875,"x":1.085,"count":1},{"y":27.01875,"x":1.1625,"count":1},{"y":27.01875,"x":1.3175,"count":1},{"y":28.0625,"x":0.46499999999999997,"count":1},{"y":28.0625,"x":0.5425,"count":1},{"y":28.0625,"x":0.6975,"count":2},{"y":28.0625,"x":0.775,"count":1},{"y":28.0625,"x":0.8525,"count":1},{"y":28.0625,"x":0.9299999999999999,"count":3},{"y":28.0625,"x":1.0075,"count":1},{"y":28.0625,"x":1.085,"count":2},{"y":28.0625,"x":1.705,"count":1},{"y":29.10625,"x":0.31,"count":2},{"y":29.10625,"x":0.46499999999999997,"count":2},{"y":29.10625,"x":0.62,"count":1},{"y":29.10625,"x":0.6975,"count":1},{"y":29.10625,"x":0.8525,"count":3},{"y":29.10625,"x":1.0075,"count":3},{"y":29.10625,"x":1.1625,"count":2},{"y":29.10625,"x":1.6275,"count":1},{"y":30.15,"x":0.46499999999999997,"count":1},{"y":30.15,"x":0.5425,"count":1},{"y":30.15,"x":0.62,"count":1},{"y":30.15,"x":0.6975,"count":2},{"y":30.15,"x":0.775,"count":3},{"y":30.15,"x":0.8525,"count":1},{"y":30.15,"x":1.0075,"count":1},{"y":30.15,"x":1.1625,"count":1},{"y":30.15,"x":1.3175,"count":2},{"y":30.15,"x":1.55,"count":1},{"y":30.15,"x":1.8599999999999999,"count":1},{"y":31.19375,"x":0.31,"count":1},{"y":31.19375,"x":0.3875,"count":1},{"y":31.19375,"x":0.46499999999999997,"count":2},{"y":31.19375,"x":0.5425,"count":2},{"y":31.19375,"x":0.62,"count":1},{"y":31.19375,"x":0.6975,"count":1},{"y":31.19375,"x":0.775,"count":1},{"y":31.19375,"x":0.9299999999999999,"count":2},{"y":31.19375,"x":1.0075,"count":2},{"y":31.19375,"x":1.085,"count":1},{"y":31.19375,"x":1.1625,"count":2},{"y":31.19375,"x":1.24,"count":1},{"y":31.19375,"x":1.395,"count":1},{"y":31.19375,"x":1.4725,"count":3},{"y":31.19375,"x":1.7825,"count":1},{"y":31.19375,"x":2.2475,"count":1},{"y":32.2375,"x":0.46499999999999997,"count":2},{"y":32.2375,"x":0.5425,"count":2},{"y":32.2375,"x":0.6975,"count":1},{"y":32.2375,"x":0.8525,"count":2},{"y":32.2375,"x":0.9299999999999999,"count":3},{"y":32.2375,"x":1.085,"count":1},{"y":32.2375,"x":1.1625,"count":1},{"y":32.2375,"x":1.3175,"count":1},{"y":32.2375,"x":1.395,"count":2},{"y":32.2375,"x":1.55,"count":1},{"y":33.28125,"x":0.62,"count":1},{"y":33.28125,"x":0.6975,"count":1},{"y":33.28125,"x":0.775,"count":1},{"y":33.28125,"x":0.9299999999999999,"count":3},{"y":33.28125,"x":1.1625,"count":1},{"y":33.28125,"x":1.24,"count":1},{"y":33.28125,"x":1.4725,"count":1},{"y":33.28125,"x":1.6275,"count":1},{"y":33.28125,"x":1.705,"count":1},{"y":33.28125,"x":1.7825,"count":1},{"y":34.324999999999996,"x":0.46499999999999997,"count":1},{"y":34.324999999999996,"x":0.62,"count":1},{"y":34.324999999999996,"x":0.8525,"count":1},{"y":34.324999999999996,"x":0.9299999999999999,"count":3},{"y":34.324999999999996,"x":1.0075,"count":1},{"y":34.324999999999996,"x":1.24,"count":2},{"y":34.324999999999996,"x":1.3175,"count":3},{"y":34.324999999999996,"x":1.4725,"count":1},{"y":34.324999999999996,"x":1.55,"count":1},{"y":34.324999999999996,"x":1.6275,"count":1},{"y":34.324999999999996,"x":2.4025,"count":1},{"y":35.36875,"x":0.3875,"count":1},{"y":35.36875,"x":0.6975,"count":1},{"y":35.36875,"x":0.775,"count":1},{"y":35.36875,"x":0.8525,"count":1},{"y":35.36875,"x":0.9299999999999999,"count":1},{"y":35.36875,"x":1.085,"count":1},{"y":35.36875,"x":1.1625,"count":1},{"y":35.36875,"x":1.395,"count":1},{"y":35.36875,"x":1.4725,"count":1},{"y":35.36875,"x":1.55,"count":1},{"y":35.36875,"x":1.6275,"count":1},{"y":35.36875,"x":1.7825,"count":1},{"y":35.36875,"x":1.8599999999999999,"count":1},{"y":36.4125,"x":1.0075,"count":1},{"y":36.4125,"x":1.1625,"count":1},{"y":36.4125,"x":1.705,"count":1},{"y":37.45625,"x":1.085,"count":1},{"y":37.45625,"x":1.24,"count":2},{"y":37.45625,"x":1.55,"count":2},{"y":37.45625,"x":1.8599999999999999,"count":1}],"maxCount":8},"percentage of team assists":{"x":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"y":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"bins":[{"x":0,"y":0,"count":6},{"x":0,"y":1.5375,"count":1},{"x":0,"y":3.075,"count":2},{"x":0,"y":4.612500000000001,"count":3},{"x":0,"y":6.15,"count":2},{"x":0,"y":9.225000000000001,"count":2},{"x":0,"y":10.762500000000001,"count":4},{"x":0,"y":12.3,"count":3},{"x":0,"y":13.8375,"count":1},{"x":0,"y":15.375,"count":1},{"x":0,"y":18.450000000000003,"count":1},{"x":0.0775,"y":0,"count":2},{"x":0.0775,"y":1.5375,"count":3},{"x":0.0775,"y":3.075,"count":2},{"x":0.0775,"y":4.612500000000001,"count":4},{"x":0.0775,"y":6.15,"count":2},{"x":0.0775,"y":7.6875,"count":4},{"x":0.0775,"y":9.225000000000001,"count":3},{"x":0.0775,"y":12.3,"count":1},{"x":0.0775,"y":13.8375,"count":1},{"x":0.0775,"y":16.9125,"count":1},{"x":0.0775,"y":18.450000000000003,"count":2},{"x":0.0775,"y":30.75,"count":1},{"x":0.155,"y":0,"count":2},{"x":0.155,"y":1.5375,"count":1},{"x":0.155,"y":3.075,"count":6},{"x":0.155,"y":4.612500000000001,"count":6},{"x":0.155,"y":6.15,"count":7},{"x":0.155,"y":7.6875,"count":3},{"x":0.155,"y":9.225000000000001,"count":1},{"x":0.155,"y":12.3,"count":3},{"x":0.155,"y":19.9875,"count":1},{"x":0.155,"y":21.525000000000002,"count":1},{"x":0.155,"y":26.137500000000003,"count":1},{"x":0.155,"y":33.825,"count":1},{"x":0.23249999999999998,"y":0,"count":1},{"x":0.23249999999999998,"y":1.5375,"count":1},{"x":0.23249999999999998,"y":3.075,"count":6},{"x":0.23249999999999998,"y":4.612500000000001,"count":4},{"x":0.23249999999999998,"y":6.15,"count":3},{"x":0.23249999999999998,"y":7.6875,"count":4},{"x":0.23249999999999998,"y":9.225000000000001,"count":3},{"x":0.23249999999999998,"y":10.762500000000001,"count":3},{"x":0.23249999999999998,"y":13.8375,"count":1},{"x":0.23249999999999998,"y":29.212500000000002,"count":1},{"x":0.31,"y":0,"count":2},{"x":0.31,"y":3.075,"count":7},{"x":0.31,"y":4.612500000000001,"count":8},{"x":0.31,"y":6.15,"count":7},{"x":0.31,"y":7.6875,"count":5},{"x":0.31,"y":9.225000000000001,"count":3},{"x":0.31,"y":10.762500000000001,"count":4},{"x":0.31,"y":12.3,"count":2},{"x":0.31,"y":13.8375,"count":3},{"x":0.31,"y":15.375,"count":1},{"x":0.31,"y":19.9875,"count":1},{"x":0.31,"y":21.525000000000002,"count":3},{"x":0.31,"y":23.0625,"count":2},{"x":0.31,"y":26.137500000000003,"count":1},{"x":0.31,"y":32.2875,"count":2},{"x":0.3875,"y":0,"count":1},{"x":0.3875,"y":1.5375,"count":3},{"x":0.3875,"y":3.075,"count":6},{"x":0.3875,"y":4.612500000000001,"count":4},{"x":0.3875,"y":6.15,"count":5},{"x":0.3875,"y":7.6875,"count":5},{"x":0.3875,"y":9.225000000000001,"count":2},{"x":0.3875,"y":10.762500000000001,"count":1},{"x":0.3875,"y":13.8375,"count":1},{"x":0.3875,"y":18.450000000000003,"count":3},{"x":0.3875,"y":29.212500000000002,"count":1},{"x":0.46499999999999997,"y":0,"count":2},{"x":0.46499999999999997,"y":1.5375,"count":1},{"x":0.46499999999999997,"y":3.075,"count":3},{"x":0.46499999999999997,"y":4.612500000000001,"count":9},{"x":0.46499999999999997,"y":6.15,"count":6},{"x":0.46499999999999997,"y":7.6875,"count":4},{"x":0.46499999999999997,"y":9.225000000000001,"count":3},{"x":0.46499999999999997,"y":10.762500000000001,"count":3},{"x":0.46499999999999997,"y":12.3,"count":4},{"x":0.46499999999999997,"y":13.8375,"count":1},{"x":0.46499999999999997,"y":15.375,"count":2},{"x":0.46499999999999997,"y":16.9125,"count":3},{"x":0.46499999999999997,"y":19.9875,"count":2},{"x":0.46499999999999997,"y":21.525000000000002,"count":2},{"x":0.46499999999999997,"y":24.6,"count":1},{"x":0.46499999999999997,"y":26.137500000000003,"count":2},{"x":0.46499999999999997,"y":30.75,"count":1},{"x":0.46499999999999997,"y":39.975,"count":1},{"x":0.46499999999999997,"y":41.5125,"count":1},{"x":0.5425,"y":0,"count":1},{"x":0.5425,"y":4.612500000000001,"count":2},{"x":0.5425,"y":6.15,"count":2},{"x":0.5425,"y":7.6875,"count":6},{"x":0.5425,"y":9.225000000000001,"count":3},{"x":0.5425,"y":10.762500000000001,"count":4},{"x":0.5425,"y":13.8375,"count":1},{"x":0.5425,"y":15.375,"count":3},{"x":0.5425,"y":16.9125,"count":4},{"x":0.5425,"y":21.525000000000002,"count":1},{"x":0.5425,"y":24.6,"count":1},{"x":0.5425,"y":26.137500000000003,"count":1},{"x":0.5425,"y":29.212500000000002,"count":1},{"x":0.62,"y":1.5375,"count":1},{"x":0.62,"y":3.075,"count":2},{"x":0.62,"y":4.612500000000001,"count":7},{"x":0.62,"y":6.15,"count":4},{"x":0.62,"y":7.6875,"count":3},{"x":0.62,"y":10.762500000000001,"count":3},{"x":0.62,"y":12.3,"count":2},{"x":0.62,"y":13.8375,"count":3},{"x":0.62,"y":15.375,"count":1},{"x":0.62,"y":18.450000000000003,"count":2},{"x":0.62,"y":21.525000000000002,"count":2},{"x":0.62,"y":24.6,"count":2},{"x":0.62,"y":27.675,"count":1},{"x":0.62,"y":33.825,"count":1},{"x":0.6975,"y":4.612500000000001,"count":2},{"x":0.6975,"y":6.15,"count":4},{"x":0.6975,"y":7.6875,"count":5},{"x":0.6975,"y":9.225000000000001,"count":3},{"x":0.6975,"y":10.762500000000001,"count":5},{"x":0.6975,"y":12.3,"count":1},{"x":0.6975,"y":15.375,"count":2},{"x":0.6975,"y":21.525000000000002,"count":3},{"x":0.6975,"y":23.0625,"count":1},{"x":0.6975,"y":26.137500000000003,"count":1},{"x":0.6975,"y":29.212500000000002,"count":1},{"x":0.6975,"y":30.75,"count":1},{"x":0.6975,"y":32.2875,"count":1},{"x":0.6975,"y":33.825,"count":1},{"x":0.775,"y":3.075,"count":2},{"x":0.775,"y":4.612500000000001,"count":2},{"x":0.775,"y":7.6875,"count":5},{"x":0.775,"y":9.225000000000001,"count":1},{"x":0.775,"y":10.762500000000001,"count":3},{"x":0.775,"y":12.3,"count":3},{"x":0.775,"y":15.375,"count":2},{"x":0.775,"y":16.9125,"count":2},{"x":0.775,"y":19.9875,"count":1},{"x":0.775,"y":21.525000000000002,"count":1},{"x":0.775,"y":24.6,"count":2},{"x":0.775,"y":29.212500000000002,"count":1},{"x":0.8525,"y":6.15,"count":1},{"x":0.8525,"y":7.6875,"count":4},{"x":0.8525,"y":9.225000000000001,"count":2},{"x":0.8525,"y":10.762500000000001,"count":2},{"x":0.8525,"y":12.3,"count":2},{"x":0.8525,"y":13.8375,"count":3},{"x":0.8525,"y":16.9125,"count":2},{"x":0.8525,"y":18.450000000000003,"count":1},{"x":0.8525,"y":19.9875,"count":1},{"x":0.8525,"y":26.137500000000003,"count":1},{"x":0.8525,"y":30.75,"count":2},{"x":0.8525,"y":44.587500000000006,"count":1},{"x":0.9299999999999999,"y":3.075,"count":1},{"x":0.9299999999999999,"y":4.612500000000001,"count":2},{"x":0.9299999999999999,"y":7.6875,"count":1},{"x":0.9299999999999999,"y":9.225000000000001,"count":4},{"x":0.9299999999999999,"y":10.762500000000001,"count":3},{"x":0.9299999999999999,"y":12.3,"count":2},{"x":0.9299999999999999,"y":13.8375,"count":2},{"x":0.9299999999999999,"y":15.375,"count":1},{"x":0.9299999999999999,"y":16.9125,"count":3},{"x":0.9299999999999999,"y":19.9875,"count":1},{"x":0.9299999999999999,"y":21.525000000000002,"count":1},{"x":0.9299999999999999,"y":26.137500000000003,"count":1},{"x":0.9299999999999999,"y":27.675,"count":1},{"x":0.9299999999999999,"y":33.825,"count":1},{"x":1.0075,"y":4.612500000000001,"count":1},{"x":1.0075,"y":6.15,"count":1},{"x":1.0075,"y":7.6875,"count":5},{"x":1.0075,"y":9.225000000000001,"count":1},{"x":1.0075,"y":10.762500000000001,"count":1},{"x":1.0075,"y":12.3,"count":2},{"x":1.0075,"y":16.9125,"count":1},{"x":1.0075,"y":18.450000000000003,"count":1},{"x":1.0075,"y":23.0625,"count":1},{"x":1.0075,"y":24.6,"count":1},{"x":1.0075,"y":27.675,"count":1},{"x":1.085,"y":6.15,"count":1},{"x":1.085,"y":7.6875,"count":1},{"x":1.085,"y":9.225000000000001,"count":1},{"x":1.085,"y":13.8375,"count":1},{"x":1.085,"y":18.450000000000003,"count":2},{"x":1.085,"y":21.525000000000002,"count":2},{"x":1.085,"y":33.825,"count":1},{"x":1.1625,"y":6.15,"count":2},{"x":1.1625,"y":10.762500000000001,"count":1},{"x":1.1625,"y":15.375,"count":3},{"x":1.1625,"y":16.9125,"count":1},{"x":1.1625,"y":19.9875,"count":1},{"x":1.1625,"y":27.675,"count":1},{"x":1.1625,"y":29.212500000000002,"count":2},{"x":1.1625,"y":32.2875,"count":1},{"x":1.1625,"y":33.825,"count":1},{"x":1.24,"y":1.5375,"count":1},{"x":1.24,"y":4.612500000000001,"count":1},{"x":1.24,"y":7.6875,"count":1},{"x":1.24,"y":9.225000000000001,"count":1},{"x":1.24,"y":13.8375,"count":1},{"x":1.24,"y":15.375,"count":1},{"x":1.24,"y":26.137500000000003,"count":2},{"x":1.24,"y":32.2875,"count":1},{"x":1.24,"y":33.825,"count":1},{"x":1.3175,"y":7.6875,"count":2},{"x":1.3175,"y":12.3,"count":1},{"x":1.3175,"y":13.8375,"count":1},{"x":1.3175,"y":16.9125,"count":1},{"x":1.3175,"y":27.675,"count":1},{"x":1.3175,"y":47.6625,"count":1},{"x":1.395,"y":7.6875,"count":1},{"x":1.395,"y":23.0625,"count":1},{"x":1.395,"y":24.6,"count":1},{"x":1.395,"y":32.2875,"count":1},{"x":1.4725,"y":7.6875,"count":1},{"x":1.4725,"y":16.9125,"count":2},{"x":1.4725,"y":29.212500000000002,"count":1},{"x":1.4725,"y":30.75,"count":1},{"x":1.4725,"y":33.825,"count":1},{"x":1.55,"y":10.762500000000001,"count":1},{"x":1.55,"y":21.525000000000002,"count":1},{"x":1.55,"y":26.137500000000003,"count":2},{"x":1.55,"y":30.75,"count":1},{"x":1.55,"y":36.900000000000006,"count":1},{"x":1.6275,"y":10.762500000000001,"count":2},{"x":1.6275,"y":23.0625,"count":1},{"x":1.6275,"y":38.4375,"count":1},{"x":1.6275,"y":39.975,"count":1},{"x":1.705,"y":9.225000000000001,"count":1},{"x":1.705,"y":15.375,"count":1},{"x":1.705,"y":24.6,"count":1},{"x":1.7825,"y":7.6875,"count":1},{"x":1.7825,"y":29.212500000000002,"count":1},{"x":1.7825,"y":39.975,"count":1},{"x":1.8599999999999999,"y":10.762500000000001,"count":1},{"x":1.8599999999999999,"y":16.9125,"count":1},{"x":1.8599999999999999,"y":39.975,"count":1},{"x":1.9375,"y":0,"count":1},{"x":2.2475,"y":36.900000000000006,"count":1},{"x":2.4025,"y":47.6625,"count":1}],"maxCount":9},"percentage of team minutes":{"x":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"y":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"x":0,"y":7.2,"count":1},{"x":0,"y":9.459375,"count":6},{"x":0,"y":11.71875,"count":7},{"x":0,"y":13.978124999999999,"count":3},{"x":0,"y":18.496875,"count":3},{"x":0,"y":20.756249999999998,"count":2},{"x":0,"y":23.015625,"count":1},{"x":0,"y":25.275,"count":2},{"x":0,"y":29.79375,"count":1},{"x":0.0775,"y":9.459375,"count":2},{"x":0.0775,"y":11.71875,"count":2},{"x":0.0775,"y":13.978124999999999,"count":8},{"x":0.0775,"y":16.2375,"count":3},{"x":0.0775,"y":18.496875,"count":4},{"x":0.0775,"y":20.756249999999998,"count":2},{"x":0.0775,"y":23.015625,"count":3},{"x":0.0775,"y":25.275,"count":1},{"x":0.0775,"y":27.534374999999997,"count":1},{"x":0.155,"y":9.459375,"count":1},{"x":0.155,"y":11.71875,"count":5},{"x":0.155,"y":13.978124999999999,"count":7},{"x":0.155,"y":16.2375,"count":8},{"x":0.155,"y":18.496875,"count":5},{"x":0.155,"y":23.015625,"count":1},{"x":0.155,"y":25.275,"count":3},{"x":0.155,"y":27.534374999999997,"count":1},{"x":0.155,"y":29.79375,"count":1},{"x":0.155,"y":38.83125,"count":1},{"x":0.23249999999999998,"y":9.459375,"count":1},{"x":0.23249999999999998,"y":11.71875,"count":3},{"x":0.23249999999999998,"y":16.2375,"count":3},{"x":0.23249999999999998,"y":18.496875,"count":3},{"x":0.23249999999999998,"y":20.756249999999998,"count":3},{"x":0.23249999999999998,"y":23.015625,"count":1},{"x":0.23249999999999998,"y":25.275,"count":1},{"x":0.23249999999999998,"y":27.534374999999997,"count":2},{"x":0.23249999999999998,"y":29.79375,"count":2},{"x":0.23249999999999998,"y":32.053125,"count":1},{"x":0.23249999999999998,"y":34.3125,"count":1},{"x":0.23249999999999998,"y":38.83125,"count":3},{"x":0.23249999999999998,"y":41.090625,"count":2},{"x":0.23249999999999998,"y":56.90625,"count":1},{"x":0.31,"y":11.71875,"count":1},{"x":0.31,"y":13.978124999999999,"count":4},{"x":0.31,"y":16.2375,"count":2},{"x":0.31,"y":18.496875,"count":3},{"x":0.31,"y":20.756249999999998,"count":4},{"x":0.31,"y":23.015625,"count":2},{"x":0.31,"y":25.275,"count":5},{"x":0.31,"y":27.534374999999997,"count":3},{"x":0.31,"y":29.79375,"count":4},{"x":0.31,"y":32.053125,"count":3},{"x":0.31,"y":34.3125,"count":4},{"x":0.31,"y":36.571875,"count":5},{"x":0.31,"y":38.83125,"count":1},{"x":0.31,"y":41.090625,"count":1},{"x":0.31,"y":43.35,"count":1},{"x":0.31,"y":45.609375,"count":2},{"x":0.31,"y":50.128125000000004,"count":1},{"x":0.31,"y":52.3875,"count":1},{"x":0.31,"y":54.646875,"count":1},{"x":0.31,"y":59.165625,"count":2},{"x":0.31,"y":63.684375,"count":1},{"x":0.3875,"y":18.496875,"count":1},{"x":0.3875,"y":20.756249999999998,"count":2},{"x":0.3875,"y":25.275,"count":2},{"x":0.3875,"y":27.534374999999997,"count":3},{"x":0.3875,"y":29.79375,"count":4},{"x":0.3875,"y":32.053125,"count":2},{"x":0.3875,"y":34.3125,"count":3},{"x":0.3875,"y":36.571875,"count":2},{"x":0.3875,"y":38.83125,"count":6},{"x":0.3875,"y":41.090625,"count":2},{"x":0.3875,"y":43.35,"count":1},{"x":0.3875,"y":50.128125000000004,"count":1},{"x":0.3875,"y":56.90625,"count":1},{"x":0.3875,"y":63.684375,"count":1},{"x":0.3875,"y":70.46249999999999,"count":1},{"x":0.46499999999999997,"y":7.2,"count":2},{"x":0.46499999999999997,"y":9.459375,"count":1},{"x":0.46499999999999997,"y":16.2375,"count":3},{"x":0.46499999999999997,"y":18.496875,"count":3},{"x":0.46499999999999997,"y":20.756249999999998,"count":2},{"x":0.46499999999999997,"y":23.015625,"count":1},{"x":0.46499999999999997,"y":25.275,"count":4},{"x":0.46499999999999997,"y":27.534374999999997,"count":3},{"x":0.46499999999999997,"y":29.79375,"count":3},{"x":0.46499999999999997,"y":32.053125,"count":2},{"x":0.46499999999999997,"y":34.3125,"count":2},{"x":0.46499999999999997,"y":36.571875,"count":2},{"x":0.46499999999999997,"y":38.83125,"count":2},{"x":0.46499999999999997,"y":41.090625,"count":3},{"x":0.46499999999999997,"y":43.35,"count":1},{"x":0.46499999999999997,"y":45.609375,"count":3},{"x":0.46499999999999997,"y":47.86875,"count":1},{"x":0.46499999999999997,"y":52.3875,"count":2},{"x":0.46499999999999997,"y":54.646875,"count":2},{"x":0.46499999999999997,"y":56.90625,"count":2},{"x":0.46499999999999997,"y":59.165625,"count":2},{"x":0.46499999999999997,"y":61.425,"count":1},{"x":0.46499999999999997,"y":63.684375,"count":1},{"x":0.46499999999999997,"y":65.94375,"count":2},{"x":0.46499999999999997,"y":70.46249999999999,"count":1},{"x":0.5425,"y":13.978124999999999,"count":1},{"x":0.5425,"y":16.2375,"count":2},{"x":0.5425,"y":18.496875,"count":1},{"x":0.5425,"y":23.015625,"count":4},{"x":0.5425,"y":29.79375,"count":2},{"x":0.5425,"y":32.053125,"count":1},{"x":0.5425,"y":34.3125,"count":2},{"x":0.5425,"y":38.83125,"count":1},{"x":0.5425,"y":41.090625,"count":2},{"x":0.5425,"y":43.35,"count":1},{"x":0.5425,"y":45.609375,"count":1},{"x":0.5425,"y":47.86875,"count":2},{"x":0.5425,"y":50.128125000000004,"count":2},{"x":0.5425,"y":52.3875,"count":1},{"x":0.5425,"y":54.646875,"count":1},{"x":0.5425,"y":59.165625,"count":1},{"x":0.5425,"y":61.425,"count":1},{"x":0.5425,"y":63.684375,"count":2},{"x":0.5425,"y":65.94375,"count":2},{"x":0.62,"y":13.978124999999999,"count":1},{"x":0.62,"y":20.756249999999998,"count":1},{"x":0.62,"y":23.015625,"count":1},{"x":0.62,"y":25.275,"count":1},{"x":0.62,"y":27.534374999999997,"count":1},{"x":0.62,"y":29.79375,"count":3},{"x":0.62,"y":32.053125,"count":1},{"x":0.62,"y":34.3125,"count":1},{"x":0.62,"y":36.571875,"count":3},{"x":0.62,"y":38.83125,"count":2},{"x":0.62,"y":41.090625,"count":3},{"x":0.62,"y":45.609375,"count":2},{"x":0.62,"y":47.86875,"count":4},{"x":0.62,"y":50.128125000000004,"count":3},{"x":0.62,"y":54.646875,"count":1},{"x":0.62,"y":56.90625,"count":1},{"x":0.62,"y":61.425,"count":2},{"x":0.62,"y":63.684375,"count":1},{"x":0.62,"y":70.46249999999999,"count":2},{"x":0.6975,"y":27.534374999999997,"count":1},{"x":0.6975,"y":29.79375,"count":1},{"x":0.6975,"y":32.053125,"count":1},{"x":0.6975,"y":36.571875,"count":4},{"x":0.6975,"y":38.83125,"count":2},{"x":0.6975,"y":41.090625,"count":2},{"x":0.6975,"y":43.35,"count":1},{"x":0.6975,"y":47.86875,"count":3},{"x":0.6975,"y":52.3875,"count":2},{"x":0.6975,"y":54.646875,"count":3},{"x":0.6975,"y":56.90625,"count":4},{"x":0.6975,"y":61.425,"count":1},{"x":0.6975,"y":63.684375,"count":3},{"x":0.6975,"y":65.94375,"count":1},{"x":0.6975,"y":70.46249999999999,"count":1},{"x":0.6975,"y":72.721875,"count":1},{"x":0.775,"y":20.756249999999998,"count":1},{"x":0.775,"y":23.015625,"count":1},{"x":0.775,"y":27.534374999999997,"count":1},{"x":0.775,"y":34.3125,"count":1},{"x":0.775,"y":36.571875,"count":2},{"x":0.775,"y":38.83125,"count":2},{"x":0.775,"y":41.090625,"count":1},{"x":0.775,"y":50.128125000000004,"count":4},{"x":0.775,"y":52.3875,"count":1},{"x":0.775,"y":54.646875,"count":2},{"x":0.775,"y":56.90625,"count":3},{"x":0.775,"y":61.425,"count":3},{"x":0.775,"y":63.684375,"count":1},{"x":0.775,"y":68.203125,"count":1},{"x":0.775,"y":72.721875,"count":1},{"x":0.8525,"y":23.015625,"count":1},{"x":0.8525,"y":29.79375,"count":1},{"x":0.8525,"y":32.053125,"count":2},{"x":0.8525,"y":34.3125,"count":1},{"x":0.8525,"y":36.571875,"count":1},{"x":0.8525,"y":38.83125,"count":1},{"x":0.8525,"y":43.35,"count":1},{"x":0.8525,"y":45.609375,"count":1},{"x":0.8525,"y":54.646875,"count":3},{"x":0.8525,"y":56.90625,"count":1},{"x":0.8525,"y":59.165625,"count":3},{"x":0.8525,"y":61.425,"count":2},{"x":0.8525,"y":65.94375,"count":2},{"x":0.8525,"y":70.46249999999999,"count":1},{"x":0.8525,"y":72.721875,"count":1},{"x":0.9299999999999999,"y":32.053125,"count":1},{"x":0.9299999999999999,"y":36.571875,"count":1},{"x":0.9299999999999999,"y":38.83125,"count":1},{"x":0.9299999999999999,"y":41.090625,"count":2},{"x":0.9299999999999999,"y":45.609375,"count":1},{"x":0.9299999999999999,"y":47.86875,"count":1},{"x":0.9299999999999999,"y":50.128125000000004,"count":2},{"x":0.9299999999999999,"y":56.90625,"count":1},{"x":0.9299999999999999,"y":59.165625,"count":2},{"x":0.9299999999999999,"y":63.684375,"count":2},{"x":0.9299999999999999,"y":65.94375,"count":2},{"x":0.9299999999999999,"y":68.203125,"count":5},{"x":0.9299999999999999,"y":70.46249999999999,"count":1},{"x":0.9299999999999999,"y":72.721875,"count":2},{"x":1.0075,"y":38.83125,"count":1},{"x":1.0075,"y":43.35,"count":2},{"x":1.0075,"y":45.609375,"count":2},{"x":1.0075,"y":52.3875,"count":1},{"x":1.0075,"y":54.646875,"count":1},{"x":1.0075,"y":56.90625,"count":1},{"x":1.0075,"y":59.165625,"count":2},{"x":1.0075,"y":61.425,"count":1},{"x":1.0075,"y":63.684375,"count":3},{"x":1.0075,"y":70.46249999999999,"count":1},{"x":1.0075,"y":72.721875,"count":1},{"x":1.085,"y":52.3875,"count":1},{"x":1.085,"y":54.646875,"count":1},{"x":1.085,"y":56.90625,"count":3},{"x":1.085,"y":65.94375,"count":2},{"x":1.085,"y":72.721875,"count":1},{"x":1.085,"y":77.240625,"count":1},{"x":1.1625,"y":43.35,"count":1},{"x":1.1625,"y":47.86875,"count":1},{"x":1.1625,"y":52.3875,"count":1},{"x":1.1625,"y":56.90625,"count":1},{"x":1.1625,"y":59.165625,"count":2},{"x":1.1625,"y":61.425,"count":1},{"x":1.1625,"y":63.684375,"count":2},{"x":1.1625,"y":65.94375,"count":1},{"x":1.1625,"y":68.203125,"count":1},{"x":1.1625,"y":72.721875,"count":1},{"x":1.1625,"y":74.98125,"count":1},{"x":1.24,"y":27.534374999999997,"count":1},{"x":1.24,"y":50.128125000000004,"count":1},{"x":1.24,"y":52.3875,"count":2},{"x":1.24,"y":65.94375,"count":1},{"x":1.24,"y":68.203125,"count":1},{"x":1.24,"y":70.46249999999999,"count":2},{"x":1.24,"y":77.240625,"count":2},{"x":1.3175,"y":56.90625,"count":1},{"x":1.3175,"y":61.425,"count":1},{"x":1.3175,"y":63.684375,"count":1},{"x":1.3175,"y":68.203125,"count":1},{"x":1.3175,"y":70.46249999999999,"count":2},{"x":1.3175,"y":72.721875,"count":1},{"x":1.395,"y":63.684375,"count":1},{"x":1.395,"y":65.94375,"count":1},{"x":1.395,"y":68.203125,"count":1},{"x":1.395,"y":74.98125,"count":1},{"x":1.4725,"y":63.684375,"count":1},{"x":1.4725,"y":65.94375,"count":2},{"x":1.4725,"y":68.203125,"count":1},{"x":1.4725,"y":70.46249999999999,"count":1},{"x":1.4725,"y":72.721875,"count":1},{"x":1.55,"y":61.425,"count":1},{"x":1.55,"y":65.94375,"count":1},{"x":1.55,"y":68.203125,"count":1},{"x":1.55,"y":72.721875,"count":1},{"x":1.55,"y":77.240625,"count":2},{"x":1.6275,"y":45.609375,"count":1},{"x":1.6275,"y":59.165625,"count":1},{"x":1.6275,"y":65.94375,"count":1},{"x":1.6275,"y":70.46249999999999,"count":1},{"x":1.6275,"y":74.98125,"count":1},{"x":1.705,"y":59.165625,"count":1},{"x":1.705,"y":68.203125,"count":1},{"x":1.705,"y":74.98125,"count":1},{"x":1.7825,"y":65.94375,"count":1},{"x":1.7825,"y":70.46249999999999,"count":1},{"x":1.7825,"y":72.721875,"count":1},{"x":1.8599999999999999,"y":61.425,"count":1},{"x":1.8599999999999999,"y":72.721875,"count":1},{"x":1.8599999999999999,"y":77.240625,"count":1},{"x":1.9375,"y":7.2,"count":1},{"x":2.2475,"y":65.94375,"count":1},{"x":2.4025,"y":70.46249999999999,"count":1}],"maxCount":8},"free throw percent":{"y":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"x":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"bins":[{"y":0,"x":0,"count":9},{"y":0,"x":0.155,"count":1},{"y":0,"x":0.23249999999999998,"count":3},{"y":0,"x":0.3875,"count":1},{"y":0,"x":0.46499999999999997,"count":3},{"y":0,"x":1.9375,"count":1},{"y":0.15625,"x":0,"count":1},{"y":0.1875,"x":0.155,"count":1},{"y":0.25,"x":0.46499999999999997,"count":1},{"y":0.25,"x":0.775,"count":1},{"y":0.3125,"x":0.0775,"count":1},{"y":0.3125,"x":0.155,"count":1},{"y":0.3125,"x":0.5425,"count":1},{"y":0.34375,"x":0.6975,"count":1},{"y":0.375,"x":0.0775,"count":2},{"y":0.375,"x":0.9299999999999999,"count":1},{"y":0.40625,"x":0.23249999999999998,"count":1},{"y":0.40625,"x":0.9299999999999999,"count":1},{"y":0.40625,"x":1.24,"count":2},{"y":0.4375,"x":0.23249999999999998,"count":1},{"y":0.4375,"x":1.24,"count":1},{"y":0.46875,"x":0.155,"count":1},{"y":0.46875,"x":0.23249999999999998,"count":1},{"y":0.46875,"x":0.775,"count":1},{"y":0.5,"x":0,"count":4},{"y":0.5,"x":0.0775,"count":1},{"y":0.5,"x":0.155,"count":3},{"y":0.5,"x":0.23249999999999998,"count":3},{"y":0.5,"x":0.31,"count":1},{"y":0.5,"x":0.3875,"count":1},{"y":0.5,"x":0.46499999999999997,"count":3},{"y":0.5,"x":0.5425,"count":1},{"y":0.5,"x":0.62,"count":2},{"y":0.5,"x":0.8525,"count":2},{"y":0.53125,"x":0,"count":1},{"y":0.53125,"x":0.0775,"count":1},{"y":0.53125,"x":0.155,"count":2},{"y":0.53125,"x":0.23249999999999998,"count":1},{"y":0.53125,"x":0.3875,"count":2},{"y":0.53125,"x":0.46499999999999997,"count":1},{"y":0.53125,"x":0.62,"count":1},{"y":0.53125,"x":0.775,"count":1},{"y":0.53125,"x":1.3175,"count":1},{"y":0.5625,"x":0.0775,"count":1},{"y":0.5625,"x":0.155,"count":1},{"y":0.5625,"x":0.23249999999999998,"count":4},{"y":0.5625,"x":0.31,"count":4},{"y":0.5625,"x":0.3875,"count":1},{"y":0.5625,"x":0.46499999999999997,"count":3},{"y":0.5625,"x":0.6975,"count":3},{"y":0.5625,"x":0.775,"count":1},{"y":0.5625,"x":0.9299999999999999,"count":1},{"y":0.5625,"x":1.1625,"count":1},{"y":0.59375,"x":0.0775,"count":2},{"y":0.59375,"x":0.155,"count":1},{"y":0.59375,"x":0.23249999999999998,"count":1},{"y":0.59375,"x":0.31,"count":1},{"y":0.59375,"x":0.46499999999999997,"count":1},{"y":0.59375,"x":0.5425,"count":2},{"y":0.59375,"x":0.62,"count":2},{"y":0.59375,"x":0.6975,"count":1},{"y":0.59375,"x":0.8525,"count":1},{"y":0.59375,"x":1.1625,"count":1},{"y":0.625,"x":0.0775,"count":3},{"y":0.625,"x":0.155,"count":1},{"y":0.625,"x":0.23249999999999998,"count":1},{"y":0.625,"x":0.31,"count":4},{"y":0.625,"x":0.3875,"count":2},{"y":0.625,"x":0.46499999999999997,"count":3},{"y":0.625,"x":0.5425,"count":3},{"y":0.625,"x":0.62,"count":3},{"y":0.625,"x":0.6975,"count":4},{"y":0.625,"x":0.8525,"count":3},{"y":0.625,"x":1.0075,"count":1},{"y":0.625,"x":1.3175,"count":2},{"y":0.625,"x":1.4725,"count":1},{"y":0.625,"x":1.6275,"count":1},{"y":0.65625,"x":0.0775,"count":2},{"y":0.65625,"x":0.155,"count":3},{"y":0.65625,"x":0.31,"count":6},{"y":0.65625,"x":0.3875,"count":4},{"y":0.65625,"x":0.46499999999999997,"count":1},{"y":0.65625,"x":0.5425,"count":2},{"y":0.65625,"x":0.62,"count":4},{"y":0.65625,"x":0.775,"count":1},{"y":0.65625,"x":0.8525,"count":1},{"y":0.65625,"x":0.9299999999999999,"count":1},{"y":0.65625,"x":1.0075,"count":4},{"y":0.65625,"x":1.085,"count":1},{"y":0.65625,"x":1.1625,"count":1},{"y":0.6875,"x":0,"count":2},{"y":0.6875,"x":0.0775,"count":1},{"y":0.6875,"x":0.155,"count":3},{"y":0.6875,"x":0.31,"count":2},{"y":0.6875,"x":0.3875,"count":4},{"y":0.6875,"x":0.46499999999999997,"count":5},{"y":0.6875,"x":0.5425,"count":2},{"y":0.6875,"x":0.62,"count":6},{"y":0.6875,"x":0.775,"count":2},{"y":0.6875,"x":0.8525,"count":1},{"y":0.6875,"x":0.9299999999999999,"count":1},{"y":0.6875,"x":1.085,"count":1},{"y":0.6875,"x":1.7825,"count":2},{"y":0.71875,"x":0.31,"count":7},{"y":0.71875,"x":0.3875,"count":2},{"y":0.71875,"x":0.46499999999999997,"count":5},{"y":0.71875,"x":0.5425,"count":4},{"y":0.71875,"x":0.62,"count":1},{"y":0.71875,"x":0.6975,"count":3},{"y":0.71875,"x":0.775,"count":1},{"y":0.71875,"x":0.8525,"count":3},{"y":0.71875,"x":0.9299999999999999,"count":2},{"y":0.71875,"x":1.0075,"count":1},{"y":0.71875,"x":1.1625,"count":2},{"y":0.71875,"x":1.24,"count":2},{"y":0.71875,"x":1.395,"count":1},{"y":0.71875,"x":1.4725,"count":1},{"y":0.71875,"x":1.6275,"count":1},{"y":0.71875,"x":1.705,"count":1},{"y":0.75,"x":0,"count":2},{"y":0.75,"x":0.0775,"count":2},{"y":0.75,"x":0.155,"count":3},{"y":0.75,"x":0.23249999999999998,"count":7},{"y":0.75,"x":0.31,"count":8},{"y":0.75,"x":0.3875,"count":5},{"y":0.75,"x":0.46499999999999997,"count":4},{"y":0.75,"x":0.5425,"count":1},{"y":0.75,"x":0.62,"count":3},{"y":0.75,"x":0.6975,"count":4},{"y":0.75,"x":0.775,"count":1},{"y":0.75,"x":0.8525,"count":3},{"y":0.75,"x":0.9299999999999999,"count":4},{"y":0.75,"x":1.0075,"count":1},{"y":0.75,"x":1.085,"count":1},{"y":0.75,"x":1.1625,"count":1},{"y":0.75,"x":1.24,"count":2},{"y":0.75,"x":1.3175,"count":2},{"y":0.75,"x":1.4725,"count":1},{"y":0.75,"x":1.55,"count":4},{"y":0.75,"x":1.6275,"count":1},{"y":0.75,"x":1.8599999999999999,"count":1},{"y":0.78125,"x":0.0775,"count":2},{"y":0.78125,"x":0.155,"count":2},{"y":0.78125,"x":0.23249999999999998,"count":1},{"y":0.78125,"x":0.31,"count":6},{"y":0.78125,"x":0.46499999999999997,"count":9},{"y":0.78125,"x":0.5425,"count":4},{"y":0.78125,"x":0.62,"count":4},{"y":0.78125,"x":0.6975,"count":5},{"y":0.78125,"x":0.775,"count":2},{"y":0.78125,"x":0.8525,"count":2},{"y":0.78125,"x":0.9299999999999999,"count":7},{"y":0.78125,"x":1.0075,"count":2},{"y":0.78125,"x":1.085,"count":1},{"y":0.78125,"x":1.1625,"count":3},{"y":0.78125,"x":1.3175,"count":1},{"y":0.78125,"x":1.395,"count":1},{"y":0.78125,"x":1.55,"count":1},{"y":0.78125,"x":1.6275,"count":1},{"y":0.78125,"x":1.705,"count":2},{"y":0.78125,"x":1.7825,"count":1},{"y":0.78125,"x":2.2475,"count":1},{"y":0.8125,"x":0.0775,"count":3},{"y":0.8125,"x":0.155,"count":3},{"y":0.8125,"x":0.23249999999999998,"count":1},{"y":0.8125,"x":0.31,"count":4},{"y":0.8125,"x":0.3875,"count":6},{"y":0.8125,"x":0.46499999999999997,"count":8},{"y":0.8125,"x":0.5425,"count":5},{"y":0.8125,"x":0.62,"count":4},{"y":0.8125,"x":0.6975,"count":6},{"y":0.8125,"x":0.775,"count":4},{"y":0.8125,"x":0.8525,"count":1},{"y":0.8125,"x":0.9299999999999999,"count":3},{"y":0.8125,"x":1.0075,"count":3},{"y":0.8125,"x":1.085,"count":3},{"y":0.8125,"x":1.1625,"count":3},{"y":0.8125,"x":1.3175,"count":1},{"y":0.8125,"x":1.395,"count":1},{"y":0.8125,"x":1.4725,"count":2},{"y":0.8125,"x":1.8599999999999999,"count":1},{"y":0.84375,"x":0,"count":1},{"y":0.84375,"x":0.155,"count":2},{"y":0.84375,"x":0.23249999999999998,"count":1},{"y":0.84375,"x":0.3875,"count":2},{"y":0.84375,"x":0.46499999999999997,"count":2},{"y":0.84375,"x":0.5425,"count":1},{"y":0.84375,"x":0.62,"count":3},{"y":0.84375,"x":0.6975,"count":3},{"y":0.84375,"x":0.775,"count":6},{"y":0.84375,"x":0.8525,"count":3},{"y":0.84375,"x":1.0075,"count":2},{"y":0.84375,"x":1.085,"count":2},{"y":0.84375,"x":1.1625,"count":1},{"y":0.84375,"x":1.24,"count":3},{"y":0.84375,"x":1.395,"count":1},{"y":0.84375,"x":1.4725,"count":1},{"y":0.84375,"x":1.55,"count":1},{"y":0.84375,"x":1.8599999999999999,"count":1},{"y":0.84375,"x":2.4025,"count":1},{"y":0.875,"x":0,"count":2},{"y":0.875,"x":0.0775,"count":1},{"y":0.875,"x":0.31,"count":2},{"y":0.875,"x":0.3875,"count":1},{"y":0.875,"x":0.5425,"count":2},{"y":0.875,"x":0.6975,"count":1},{"y":0.875,"x":0.775,"count":2},{"y":0.875,"x":0.8525,"count":2},{"y":0.875,"x":0.9299999999999999,"count":2},{"y":0.875,"x":1.0075,"count":1},{"y":0.875,"x":1.6275,"count":1},{"y":0.90625,"x":0.0775,"count":1},{"y":0.90625,"x":0.31,"count":2},{"y":0.90625,"x":0.46499999999999997,"count":1},{"y":0.90625,"x":0.775,"count":1},{"y":0.90625,"x":0.9299999999999999,"count":1},{"y":0.90625,"x":1.0075,"count":1},{"y":0.9375,"x":0.31,"count":3},{"y":0.9375,"x":0.3875,"count":1},{"y":0.9375,"x":0.46499999999999997,"count":1},{"y":0.9375,"x":0.5425,"count":1},{"y":0.9375,"x":0.775,"count":1},{"y":0.96875,"x":0,"count":4},{"y":0.96875,"x":0.0775,"count":3},{"y":0.96875,"x":0.155,"count":5},{"y":0.96875,"x":0.23249999999999998,"count":1},{"y":0.96875,"x":0.31,"count":1},{"y":0.96875,"x":0.5425,"count":1},{"y":0.96875,"x":0.62,"count":1}],"maxCount":9},"true shooting percentage":{"y":{"name":"true shooting percentage","extent":[0,0.8200000000000001],"delta":0.025625000000000002},"x":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"bins":[{"y":0,"x":0.23249999999999998,"count":1},{"y":0,"x":0.46499999999999997,"count":2},{"y":0.179375,"x":0,"count":1},{"y":0.20500000000000002,"x":0.23249999999999998,"count":2},{"y":0.23062500000000002,"x":0,"count":1},{"y":0.23062500000000002,"x":0.155,"count":1},{"y":0.25625000000000003,"x":0,"count":1},{"y":0.25625000000000003,"x":0.62,"count":1},{"y":0.28187500000000004,"x":0,"count":3},{"y":0.3075,"x":0,"count":3},{"y":0.3075,"x":0.0775,"count":1},{"y":0.3075,"x":0.155,"count":1},{"y":0.333125,"x":0.155,"count":1},{"y":0.333125,"x":0.46499999999999997,"count":1},{"y":0.35875,"x":0,"count":2},{"y":0.35875,"x":0.0775,"count":2},{"y":0.35875,"x":0.155,"count":1},{"y":0.35875,"x":0.3875,"count":1},{"y":0.35875,"x":0.775,"count":1},{"y":0.384375,"x":0.0775,"count":2},{"y":0.384375,"x":0.155,"count":2},{"y":0.384375,"x":0.31,"count":1},{"y":0.384375,"x":0.3875,"count":1},{"y":0.384375,"x":0.5425,"count":1},{"y":0.384375,"x":0.8525,"count":1},{"y":0.41000000000000003,"x":0,"count":1},{"y":0.41000000000000003,"x":0.0775,"count":1},{"y":0.41000000000000003,"x":0.23249999999999998,"count":1},{"y":0.41000000000000003,"x":0.31,"count":1},{"y":0.41000000000000003,"x":0.3875,"count":2},{"y":0.41000000000000003,"x":0.46499999999999997,"count":3},{"y":0.41000000000000003,"x":0.5425,"count":3},{"y":0.43562500000000004,"x":0,"count":1},{"y":0.43562500000000004,"x":0.0775,"count":3},{"y":0.43562500000000004,"x":0.155,"count":5},{"y":0.43562500000000004,"x":0.23249999999999998,"count":5},{"y":0.43562500000000004,"x":0.31,"count":5},{"y":0.43562500000000004,"x":0.3875,"count":2},{"y":0.43562500000000004,"x":0.46499999999999997,"count":7},{"y":0.43562500000000004,"x":0.5425,"count":2},{"y":0.43562500000000004,"x":0.62,"count":3},{"y":0.43562500000000004,"x":0.6975,"count":2},{"y":0.43562500000000004,"x":1.3175,"count":1},{"y":0.46125000000000005,"x":0,"count":1},{"y":0.46125000000000005,"x":0.0775,"count":4},{"y":0.46125000000000005,"x":0.155,"count":2},{"y":0.46125000000000005,"x":0.23249999999999998,"count":1},{"y":0.46125000000000005,"x":0.31,"count":6},{"y":0.46125000000000005,"x":0.3875,"count":6},{"y":0.46125000000000005,"x":0.46499999999999997,"count":2},{"y":0.46125000000000005,"x":0.5425,"count":3},{"y":0.46125000000000005,"x":0.62,"count":5},{"y":0.46125000000000005,"x":0.6975,"count":1},{"y":0.46125000000000005,"x":0.775,"count":3},{"y":0.46125000000000005,"x":0.9299999999999999,"count":1},{"y":0.46125000000000005,"x":1.0075,"count":1},{"y":0.46125000000000005,"x":1.1625,"count":1},{"y":0.46125000000000005,"x":1.24,"count":2},{"y":0.46125000000000005,"x":1.3175,"count":1},{"y":0.46125000000000005,"x":1.55,"count":1},{"y":0.46125000000000005,"x":1.7825,"count":1},{"y":0.48687500000000006,"x":0,"count":2},{"y":0.48687500000000006,"x":0.0775,"count":3},{"y":0.48687500000000006,"x":0.155,"count":8},{"y":0.48687500000000006,"x":0.23249999999999998,"count":3},{"y":0.48687500000000006,"x":0.31,"count":19},{"y":0.48687500000000006,"x":0.3875,"count":4},{"y":0.48687500000000006,"x":0.46499999999999997,"count":5},{"y":0.48687500000000006,"x":0.5425,"count":3},{"y":0.48687500000000006,"x":0.62,"count":5},{"y":0.48687500000000006,"x":0.6975,"count":4},{"y":0.48687500000000006,"x":0.775,"count":4},{"y":0.48687500000000006,"x":0.8525,"count":3},{"y":0.48687500000000006,"x":0.9299999999999999,"count":6},{"y":0.48687500000000006,"x":1.0075,"count":3},{"y":0.48687500000000006,"x":1.085,"count":1},{"y":0.48687500000000006,"x":1.1625,"count":4},{"y":0.48687500000000006,"x":1.24,"count":1},{"y":0.48687500000000006,"x":1.6275,"count":1},{"y":0.48687500000000006,"x":1.9375,"count":1},{"y":0.48687500000000006,"x":2.2475,"count":1},{"y":0.5125000000000001,"x":0,"count":4},{"y":0.5125000000000001,"x":0.0775,"count":3},{"y":0.5125000000000001,"x":0.155,"count":2},{"y":0.5125000000000001,"x":0.23249999999999998,"count":5},{"y":0.5125000000000001,"x":0.31,"count":6},{"y":0.5125000000000001,"x":0.3875,"count":5},{"y":0.5125000000000001,"x":0.46499999999999997,"count":11},{"y":0.5125000000000001,"x":0.5425,"count":4},{"y":0.5125000000000001,"x":0.62,"count":10},{"y":0.5125000000000001,"x":0.6975,"count":9},{"y":0.5125000000000001,"x":0.775,"count":2},{"y":0.5125000000000001,"x":0.8525,"count":6},{"y":0.5125000000000001,"x":0.9299999999999999,"count":6},{"y":0.5125000000000001,"x":1.0075,"count":6},{"y":0.5125000000000001,"x":1.085,"count":3},{"y":0.5125000000000001,"x":1.1625,"count":3},{"y":0.5125000000000001,"x":1.24,"count":2},{"y":0.5125000000000001,"x":1.395,"count":1},{"y":0.5125000000000001,"x":1.4725,"count":1},{"y":0.5125000000000001,"x":1.55,"count":1},{"y":0.5125000000000001,"x":1.6275,"count":1},{"y":0.5125000000000001,"x":1.705,"count":1},{"y":0.5125000000000001,"x":1.7825,"count":1},{"y":0.5125000000000001,"x":1.8599999999999999,"count":1},{"y":0.5381250000000001,"x":0,"count":1},{"y":0.5381250000000001,"x":0.155,"count":5},{"y":0.5381250000000001,"x":0.23249999999999998,"count":3},{"y":0.5381250000000001,"x":0.31,"count":4},{"y":0.5381250000000001,"x":0.3875,"count":5},{"y":0.5381250000000001,"x":0.46499999999999997,"count":9},{"y":0.5381250000000001,"x":0.5425,"count":8},{"y":0.5381250000000001,"x":0.62,"count":3},{"y":0.5381250000000001,"x":0.6975,"count":6},{"y":0.5381250000000001,"x":0.775,"count":6},{"y":0.5381250000000001,"x":0.8525,"count":7},{"y":0.5381250000000001,"x":0.9299999999999999,"count":5},{"y":0.5381250000000001,"x":1.0075,"count":3},{"y":0.5381250000000001,"x":1.085,"count":2},{"y":0.5381250000000001,"x":1.1625,"count":3},{"y":0.5381250000000001,"x":1.24,"count":2},{"y":0.5381250000000001,"x":1.3175,"count":3},{"y":0.5381250000000001,"x":1.4725,"count":2},{"y":0.5381250000000001,"x":1.55,"count":1},{"y":0.5381250000000001,"x":1.705,"count":1},{"y":0.5381250000000001,"x":1.7825,"count":1},{"y":0.5381250000000001,"x":1.8599999999999999,"count":2},{"y":0.5637500000000001,"x":0.0775,"count":1},{"y":0.5637500000000001,"x":0.23249999999999998,"count":5},{"y":0.5637500000000001,"x":0.31,"count":5},{"y":0.5637500000000001,"x":0.3875,"count":3},{"y":0.5637500000000001,"x":0.46499999999999997,"count":8},{"y":0.5637500000000001,"x":0.5425,"count":6},{"y":0.5637500000000001,"x":0.62,"count":5},{"y":0.5637500000000001,"x":0.6975,"count":4},{"y":0.5637500000000001,"x":0.775,"count":6},{"y":0.5637500000000001,"x":0.8525,"count":4},{"y":0.5637500000000001,"x":0.9299999999999999,"count":4},{"y":0.5637500000000001,"x":1.085,"count":2},{"y":0.5637500000000001,"x":1.1625,"count":2},{"y":0.5637500000000001,"x":1.24,"count":1},{"y":0.5637500000000001,"x":1.3175,"count":1},{"y":0.5637500000000001,"x":1.395,"count":2},{"y":0.5637500000000001,"x":1.4725,"count":3},{"y":0.5637500000000001,"x":1.55,"count":1},{"y":0.5637500000000001,"x":1.6275,"count":1},{"y":0.5637500000000001,"x":2.4025,"count":1},{"y":0.5893750000000001,"x":0,"count":2},{"y":0.5893750000000001,"x":0.0775,"count":2},{"y":0.5893750000000001,"x":0.155,"count":2},{"y":0.5893750000000001,"x":0.23249999999999998,"count":1},{"y":0.5893750000000001,"x":0.31,"count":3},{"y":0.5893750000000001,"x":0.3875,"count":2},{"y":0.5893750000000001,"x":0.46499999999999997,"count":2},{"y":0.5893750000000001,"x":0.62,"count":1},{"y":0.5893750000000001,"x":0.6975,"count":4},{"y":0.5893750000000001,"x":0.775,"count":3},{"y":0.5893750000000001,"x":0.8525,"count":1},{"y":0.5893750000000001,"x":1.0075,"count":2},{"y":0.5893750000000001,"x":1.085,"count":1},{"y":0.5893750000000001,"x":1.24,"count":1},{"y":0.5893750000000001,"x":1.3175,"count":1},{"y":0.5893750000000001,"x":1.395,"count":1},{"y":0.5893750000000001,"x":1.6275,"count":2},{"y":0.5893750000000001,"x":1.705,"count":1},{"y":0.615,"x":0,"count":1},{"y":0.615,"x":0.0775,"count":1},{"y":0.615,"x":0.155,"count":1},{"y":0.615,"x":0.31,"count":1},{"y":0.615,"x":0.46499999999999997,"count":1},{"y":0.615,"x":0.62,"count":1},{"y":0.615,"x":0.9299999999999999,"count":1},{"y":0.615,"x":1.24,"count":1},{"y":0.615,"x":1.55,"count":1},{"y":0.640625,"x":0.0775,"count":2},{"y":0.640625,"x":0.9299999999999999,"count":1},{"y":0.640625,"x":1.0075,"count":1},{"y":0.640625,"x":1.55,"count":1},{"y":0.66625,"x":0,"count":1},{"y":0.66625,"x":0.3875,"count":1},{"y":0.66625,"x":0.6975,"count":1},{"y":0.691875,"x":0,"count":1},{"y":0.7175,"x":0.0775,"count":1},{"y":0.743125,"x":0.155,"count":1},{"y":0.794375,"x":0.155,"count":1}],"maxCount":19}},"minutes":{"free throw percent":{"y":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"x":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"bins":[{"y":0,"x":5.1000000000000005,"count":6},{"y":0,"x":6.143750000000001,"count":5},{"y":0,"x":8.23125,"count":2},{"y":0,"x":12.40625,"count":1},{"y":0,"x":13.45,"count":2},{"y":0,"x":14.493749999999999,"count":1},{"y":0,"x":18.66875,"count":1},{"y":0.15625,"x":7.1875,"count":1},{"y":0.1875,"x":7.1875,"count":1},{"y":0.25,"x":9.275,"count":1},{"y":0.25,"x":13.45,"count":1},{"y":0.3125,"x":5.1000000000000005,"count":1},{"y":0.3125,"x":6.143750000000001,"count":1},{"y":0.3125,"x":12.40625,"count":1},{"y":0.34375,"x":25.975,"count":1},{"y":0.375,"x":7.1875,"count":1},{"y":0.375,"x":8.23125,"count":1},{"y":0.375,"x":15.537500000000001,"count":1},{"y":0.40625,"x":13.45,"count":1},{"y":0.40625,"x":18.66875,"count":1},{"y":0.40625,"x":31.19375,"count":1},{"y":0.40625,"x":34.324999999999996,"count":1},{"y":0.4375,"x":6.143750000000001,"count":1},{"y":0.4375,"x":23.8875,"count":1},{"y":0.46875,"x":9.275,"count":1},{"y":0.46875,"x":13.45,"count":1},{"y":0.46875,"x":24.931250000000002,"count":1},{"y":0.5,"x":5.1000000000000005,"count":2},{"y":0.5,"x":6.143750000000001,"count":1},{"y":0.5,"x":7.1875,"count":2},{"y":0.5,"x":8.23125,"count":4},{"y":0.5,"x":9.275,"count":2},{"y":0.5,"x":11.3625,"count":1},{"y":0.5,"x":13.45,"count":3},{"y":0.5,"x":14.493749999999999,"count":1},{"y":0.5,"x":18.66875,"count":2},{"y":0.5,"x":25.975,"count":2},{"y":0.5,"x":28.0625,"count":1},{"y":0.53125,"x":6.143750000000001,"count":2},{"y":0.53125,"x":9.275,"count":2},{"y":0.53125,"x":12.40625,"count":1},{"y":0.53125,"x":13.45,"count":1},{"y":0.53125,"x":18.66875,"count":1},{"y":0.53125,"x":23.8875,"count":2},{"y":0.53125,"x":33.28125,"count":1},{"y":0.53125,"x":34.324999999999996,"count":1},{"y":0.5625,"x":6.143750000000001,"count":1},{"y":0.5625,"x":7.1875,"count":3},{"y":0.5625,"x":8.23125,"count":2},{"y":0.5625,"x":11.3625,"count":1},{"y":0.5625,"x":13.45,"count":3},{"y":0.5625,"x":14.493749999999999,"count":3},{"y":0.5625,"x":18.66875,"count":1},{"y":0.5625,"x":19.7125,"count":2},{"y":0.5625,"x":23.8875,"count":2},{"y":0.5625,"x":24.931250000000002,"count":1},{"y":0.5625,"x":29.10625,"count":1},{"y":0.59375,"x":7.1875,"count":2},{"y":0.59375,"x":10.318750000000001,"count":1},{"y":0.59375,"x":11.3625,"count":1},{"y":0.59375,"x":14.493749999999999,"count":1},{"y":0.59375,"x":15.537500000000001,"count":2},{"y":0.59375,"x":17.625,"count":1},{"y":0.59375,"x":19.7125,"count":1},{"y":0.59375,"x":20.75625,"count":1},{"y":0.59375,"x":23.8875,"count":2},{"y":0.59375,"x":27.01875,"count":1},{"y":0.625,"x":7.1875,"count":2},{"y":0.625,"x":8.23125,"count":2},{"y":0.625,"x":9.275,"count":1},{"y":0.625,"x":10.318750000000001,"count":3},{"y":0.625,"x":11.3625,"count":1},{"y":0.625,"x":12.40625,"count":3},{"y":0.625,"x":13.45,"count":1},{"y":0.625,"x":14.493749999999999,"count":2},{"y":0.625,"x":16.58125,"count":1},{"y":0.625,"x":17.625,"count":1},{"y":0.625,"x":18.66875,"count":3},{"y":0.625,"x":19.7125,"count":1},{"y":0.625,"x":20.75625,"count":2},{"y":0.625,"x":22.84375,"count":2},{"y":0.625,"x":25.975,"count":1},{"y":0.625,"x":27.01875,"count":1},{"y":0.625,"x":28.0625,"count":1},{"y":0.625,"x":29.10625,"count":1},{"y":0.625,"x":31.19375,"count":1},{"y":0.625,"x":32.2375,"count":2},{"y":0.65625,"x":5.1000000000000005,"count":1},{"y":0.65625,"x":7.1875,"count":1},{"y":0.65625,"x":8.23125,"count":3},{"y":0.65625,"x":9.275,"count":1},{"y":0.65625,"x":11.3625,"count":2},{"y":0.65625,"x":12.40625,"count":1},{"y":0.65625,"x":13.45,"count":1},{"y":0.65625,"x":14.493749999999999,"count":2},{"y":0.65625,"x":15.537500000000001,"count":2},{"y":0.65625,"x":16.58125,"count":1},{"y":0.65625,"x":17.625,"count":2},{"y":0.65625,"x":18.66875,"count":1},{"y":0.65625,"x":19.7125,"count":1},{"y":0.65625,"x":20.75625,"count":2},{"y":0.65625,"x":23.8875,"count":1},{"y":0.65625,"x":24.931250000000002,"count":2},{"y":0.65625,"x":27.01875,"count":1},{"y":0.65625,"x":29.10625,"count":3},{"y":0.65625,"x":32.2375,"count":3},{"y":0.6875,"x":6.143750000000001,"count":1},{"y":0.6875,"x":7.1875,"count":1},{"y":0.6875,"x":8.23125,"count":2},{"y":0.6875,"x":9.275,"count":3},{"y":0.6875,"x":10.318750000000001,"count":1},{"y":0.6875,"x":11.3625,"count":2},{"y":0.6875,"x":12.40625,"count":2},{"y":0.6875,"x":13.45,"count":1},{"y":0.6875,"x":14.493749999999999,"count":2},{"y":0.6875,"x":15.537500000000001,"count":2},{"y":0.6875,"x":17.625,"count":1},{"y":0.6875,"x":18.66875,"count":2},{"y":0.6875,"x":20.75625,"count":3},{"y":0.6875,"x":21.8,"count":1},{"y":0.6875,"x":23.8875,"count":1},{"y":0.6875,"x":27.01875,"count":1},{"y":0.6875,"x":31.19375,"count":2},{"y":0.6875,"x":33.28125,"count":1},{"y":0.6875,"x":34.324999999999996,"count":2},{"y":0.6875,"x":35.36875,"count":1},{"y":0.71875,"x":7.1875,"count":1},{"y":0.71875,"x":8.23125,"count":1},{"y":0.71875,"x":9.275,"count":1},{"y":0.71875,"x":10.318750000000001,"count":2},{"y":0.71875,"x":11.3625,"count":1},{"y":0.71875,"x":16.58125,"count":3},{"y":0.71875,"x":18.66875,"count":2},{"y":0.71875,"x":19.7125,"count":1},{"y":0.71875,"x":20.75625,"count":1},{"y":0.71875,"x":21.8,"count":3},{"y":0.71875,"x":22.84375,"count":1},{"y":0.71875,"x":23.8875,"count":1},{"y":0.71875,"x":25.975,"count":3},{"y":0.71875,"x":27.01875,"count":2},{"y":0.71875,"x":28.0625,"count":2},{"y":0.71875,"x":29.10625,"count":2},{"y":0.71875,"x":30.15,"count":3},{"y":0.71875,"x":31.19375,"count":2},{"y":0.71875,"x":32.2375,"count":1},{"y":0.71875,"x":33.28125,"count":2},{"y":0.71875,"x":34.324999999999996,"count":1},{"y":0.71875,"x":36.4125,"count":1},{"y":0.75,"x":5.1000000000000005,"count":1},{"y":0.75,"x":6.143750000000001,"count":2},{"y":0.75,"x":7.1875,"count":1},{"y":0.75,"x":8.23125,"count":3},{"y":0.75,"x":9.275,"count":1},{"y":0.75,"x":10.318750000000001,"count":3},{"y":0.75,"x":11.3625,"count":1},{"y":0.75,"x":13.45,"count":2},{"y":0.75,"x":14.493749999999999,"count":4},{"y":0.75,"x":15.537500000000001,"count":3},{"y":0.75,"x":16.58125,"count":2},{"y":0.75,"x":17.625,"count":2},{"y":0.75,"x":18.66875,"count":4},{"y":0.75,"x":19.7125,"count":2},{"y":0.75,"x":20.75625,"count":1},{"y":0.75,"x":21.8,"count":2},{"y":0.75,"x":23.8875,"count":1},{"y":0.75,"x":24.931250000000002,"count":2},{"y":0.75,"x":25.975,"count":2},{"y":0.75,"x":27.01875,"count":4},{"y":0.75,"x":28.0625,"count":2},{"y":0.75,"x":29.10625,"count":1},{"y":0.75,"x":30.15,"count":2},{"y":0.75,"x":31.19375,"count":3},{"y":0.75,"x":32.2375,"count":3},{"y":0.75,"x":33.28125,"count":2},{"y":0.75,"x":34.324999999999996,"count":3},{"y":0.75,"x":37.45625,"count":2},{"y":0.78125,"x":6.143750000000001,"count":2},{"y":0.78125,"x":7.1875,"count":1},{"y":0.78125,"x":9.275,"count":1},{"y":0.78125,"x":11.3625,"count":1},{"y":0.78125,"x":12.40625,"count":3},{"y":0.78125,"x":13.45,"count":1},{"y":0.78125,"x":14.493749999999999,"count":1},{"y":0.78125,"x":15.537500000000001,"count":2},{"y":0.78125,"x":16.58125,"count":2},{"y":0.78125,"x":17.625,"count":4},{"y":0.78125,"x":18.66875,"count":2},{"y":0.78125,"x":19.7125,"count":6},{"y":0.78125,"x":22.84375,"count":2},{"y":0.78125,"x":23.8875,"count":2},{"y":0.78125,"x":24.931250000000002,"count":1},{"y":0.78125,"x":25.975,"count":2},{"y":0.78125,"x":28.0625,"count":2},{"y":0.78125,"x":29.10625,"count":2},{"y":0.78125,"x":30.15,"count":3},{"y":0.78125,"x":31.19375,"count":6},{"y":0.78125,"x":32.2375,"count":3},{"y":0.78125,"x":33.28125,"count":2},{"y":0.78125,"x":34.324999999999996,"count":3},{"y":0.78125,"x":35.36875,"count":3},{"y":0.78125,"x":36.4125,"count":1},{"y":0.8125,"x":5.1000000000000005,"count":1},{"y":0.8125,"x":8.23125,"count":1},{"y":0.8125,"x":9.275,"count":1},{"y":0.8125,"x":10.318750000000001,"count":1},{"y":0.8125,"x":11.3625,"count":1},{"y":0.8125,"x":12.40625,"count":3},{"y":0.8125,"x":13.45,"count":1},{"y":0.8125,"x":14.493749999999999,"count":3},{"y":0.8125,"x":15.537500000000001,"count":4},{"y":0.8125,"x":16.58125,"count":2},{"y":0.8125,"x":17.625,"count":2},{"y":0.8125,"x":18.66875,"count":3},{"y":0.8125,"x":19.7125,"count":3},{"y":0.8125,"x":21.8,"count":1},{"y":0.8125,"x":22.84375,"count":1},{"y":0.8125,"x":23.8875,"count":2},{"y":0.8125,"x":24.931250000000002,"count":1},{"y":0.8125,"x":25.975,"count":4},{"y":0.8125,"x":27.01875,"count":4},{"y":0.8125,"x":28.0625,"count":2},{"y":0.8125,"x":29.10625,"count":1},{"y":0.8125,"x":30.15,"count":3},{"y":0.8125,"x":31.19375,"count":3},{"y":0.8125,"x":32.2375,"count":2},{"y":0.8125,"x":33.28125,"count":3},{"y":0.8125,"x":34.324999999999996,"count":2},{"y":0.8125,"x":35.36875,"count":5},{"y":0.8125,"x":36.4125,"count":1},{"y":0.8125,"x":37.45625,"count":1},{"y":0.84375,"x":6.143750000000001,"count":1},{"y":0.84375,"x":7.1875,"count":1},{"y":0.84375,"x":10.318750000000001,"count":1},{"y":0.84375,"x":15.537500000000001,"count":2},{"y":0.84375,"x":16.58125,"count":1},{"y":0.84375,"x":17.625,"count":1},{"y":0.84375,"x":18.66875,"count":2},{"y":0.84375,"x":19.7125,"count":1},{"y":0.84375,"x":20.75625,"count":1},{"y":0.84375,"x":21.8,"count":1},{"y":0.84375,"x":23.8875,"count":2},{"y":0.84375,"x":24.931250000000002,"count":3},{"y":0.84375,"x":27.01875,"count":1},{"y":0.84375,"x":28.0625,"count":1},{"y":0.84375,"x":29.10625,"count":3},{"y":0.84375,"x":30.15,"count":3},{"y":0.84375,"x":31.19375,"count":3},{"y":0.84375,"x":32.2375,"count":1},{"y":0.84375,"x":34.324999999999996,"count":3},{"y":0.84375,"x":35.36875,"count":2},{"y":0.84375,"x":37.45625,"count":3},{"y":0.875,"x":5.1000000000000005,"count":1},{"y":0.875,"x":6.143750000000001,"count":1},{"y":0.875,"x":8.23125,"count":1},{"y":0.875,"x":9.275,"count":1},{"y":0.875,"x":10.318750000000001,"count":1},{"y":0.875,"x":14.493749999999999,"count":1},{"y":0.875,"x":17.625,"count":1},{"y":0.875,"x":18.66875,"count":1},{"y":0.875,"x":25.975,"count":1},{"y":0.875,"x":28.0625,"count":2},{"y":0.875,"x":29.10625,"count":1},{"y":0.875,"x":30.15,"count":1},{"y":0.875,"x":31.19375,"count":2},{"y":0.875,"x":32.2375,"count":1},{"y":0.875,"x":35.36875,"count":1},{"y":0.90625,"x":6.143750000000001,"count":1},{"y":0.90625,"x":8.23125,"count":2},{"y":0.90625,"x":18.66875,"count":1},{"y":0.90625,"x":19.7125,"count":1},{"y":0.90625,"x":27.01875,"count":1},{"y":0.90625,"x":33.28125,"count":1},{"y":0.9375,"x":10.318750000000001,"count":1},{"y":0.9375,"x":11.3625,"count":1},{"y":0.9375,"x":21.8,"count":1},{"y":0.9375,"x":22.84375,"count":2},{"y":0.9375,"x":24.931250000000002,"count":1},{"y":0.9375,"x":35.36875,"count":1},{"y":0.96875,"x":5.1000000000000005,"count":1},{"y":0.96875,"x":6.143750000000001,"count":3},{"y":0.96875,"x":7.1875,"count":2},{"y":0.96875,"x":8.23125,"count":2},{"y":0.96875,"x":9.275,"count":4},{"y":0.96875,"x":10.318750000000001,"count":1},{"y":0.96875,"x":11.3625,"count":1},{"y":0.96875,"x":15.537500000000001,"count":1},{"y":0.96875,"x":23.8875,"count":1}],"maxCount":6},"steals per game":{"x":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"y":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"bins":[{"x":5.1000000000000005,"y":0,"count":5},{"x":5.1000000000000005,"y":0.0775,"count":2},{"x":5.1000000000000005,"y":0.155,"count":2},{"x":5.1000000000000005,"y":0.23249999999999998,"count":2},{"x":5.1000000000000005,"y":0.46499999999999997,"count":3},{"x":6.143750000000001,"y":0,"count":8},{"x":6.143750000000001,"y":0.0775,"count":4},{"x":6.143750000000001,"y":0.155,"count":6},{"x":6.143750000000001,"y":0.23249999999999998,"count":2},{"x":6.143750000000001,"y":0.31,"count":2},{"x":7.1875,"y":0,"count":1},{"x":7.1875,"y":0.0775,"count":6},{"x":7.1875,"y":0.155,"count":7},{"x":7.1875,"y":0.23249999999999998,"count":2},{"x":7.1875,"y":0.31,"count":2},{"x":7.1875,"y":0.46499999999999997,"count":1},{"x":7.1875,"y":0.62,"count":1},{"x":8.23125,"y":0,"count":4},{"x":8.23125,"y":0.0775,"count":4},{"x":8.23125,"y":0.155,"count":8},{"x":8.23125,"y":0.23249999999999998,"count":1},{"x":8.23125,"y":0.31,"count":4},{"x":8.23125,"y":0.3875,"count":1},{"x":8.23125,"y":0.46499999999999997,"count":2},{"x":8.23125,"y":0.5425,"count":1},{"x":8.23125,"y":1.9375,"count":1},{"x":9.275,"y":0,"count":1},{"x":9.275,"y":0.0775,"count":3},{"x":9.275,"y":0.155,"count":3},{"x":9.275,"y":0.23249999999999998,"count":3},{"x":9.275,"y":0.31,"count":3},{"x":9.275,"y":0.46499999999999997,"count":4},{"x":9.275,"y":0.5425,"count":3},{"x":10.318750000000001,"y":0,"count":1},{"x":10.318750000000001,"y":0.0775,"count":2},{"x":10.318750000000001,"y":0.23249999999999998,"count":3},{"x":10.318750000000001,"y":0.31,"count":3},{"x":10.318750000000001,"y":0.3875,"count":2},{"x":10.318750000000001,"y":0.46499999999999997,"count":1},{"x":10.318750000000001,"y":0.5425,"count":1},{"x":10.318750000000001,"y":0.62,"count":1},{"x":10.318750000000001,"y":0.775,"count":1},{"x":11.3625,"y":0.0775,"count":4},{"x":11.3625,"y":0.155,"count":1},{"x":11.3625,"y":0.31,"count":4},{"x":11.3625,"y":0.46499999999999997,"count":1},{"x":11.3625,"y":0.5425,"count":2},{"x":11.3625,"y":0.62,"count":1},{"x":11.3625,"y":0.775,"count":1},{"x":12.40625,"y":0,"count":1},{"x":12.40625,"y":0.155,"count":3},{"x":12.40625,"y":0.31,"count":3},{"x":12.40625,"y":0.3875,"count":2},{"x":12.40625,"y":0.46499999999999997,"count":3},{"x":12.40625,"y":0.5425,"count":1},{"x":12.40625,"y":0.62,"count":1},{"x":12.40625,"y":0.8525,"count":1},{"x":13.45,"y":0,"count":2},{"x":13.45,"y":0.0775,"count":1},{"x":13.45,"y":0.155,"count":1},{"x":13.45,"y":0.23249999999999998,"count":4},{"x":13.45,"y":0.31,"count":2},{"x":13.45,"y":0.3875,"count":2},{"x":13.45,"y":0.46499999999999997,"count":4},{"x":13.45,"y":0.6975,"count":1},{"x":13.45,"y":0.775,"count":1},{"x":13.45,"y":1.24,"count":1},{"x":14.493749999999999,"y":0,"count":1},{"x":14.493749999999999,"y":0.23249999999999998,"count":2},{"x":14.493749999999999,"y":0.31,"count":4},{"x":14.493749999999999,"y":0.3875,"count":5},{"x":14.493749999999999,"y":0.46499999999999997,"count":3},{"x":14.493749999999999,"y":0.5425,"count":2},{"x":14.493749999999999,"y":0.62,"count":2},{"x":14.493749999999999,"y":0.6975,"count":1},{"x":14.493749999999999,"y":0.8525,"count":1},{"x":15.537500000000001,"y":0.155,"count":1},{"x":15.537500000000001,"y":0.23249999999999998,"count":1},{"x":15.537500000000001,"y":0.31,"count":5},{"x":15.537500000000001,"y":0.3875,"count":2},{"x":15.537500000000001,"y":0.46499999999999997,"count":2},{"x":15.537500000000001,"y":0.5425,"count":1},{"x":15.537500000000001,"y":0.62,"count":3},{"x":15.537500000000001,"y":0.6975,"count":1},{"x":15.537500000000001,"y":0.8525,"count":2},{"x":15.537500000000001,"y":0.9299999999999999,"count":1},{"x":16.58125,"y":0.23249999999999998,"count":1},{"x":16.58125,"y":0.31,"count":2},{"x":16.58125,"y":0.3875,"count":2},{"x":16.58125,"y":0.46499999999999997,"count":2},{"x":16.58125,"y":0.5425,"count":2},{"x":16.58125,"y":0.62,"count":1},{"x":16.58125,"y":0.775,"count":1},{"x":16.58125,"y":0.8525,"count":1},{"x":17.625,"y":0,"count":1},{"x":17.625,"y":0.31,"count":5},{"x":17.625,"y":0.3875,"count":2},{"x":17.625,"y":0.46499999999999997,"count":1},{"x":17.625,"y":0.62,"count":3},{"x":17.625,"y":0.6975,"count":2},{"x":17.625,"y":0.775,"count":1},{"x":18.66875,"y":0,"count":1},{"x":18.66875,"y":0.23249999999999998,"count":2},{"x":18.66875,"y":0.31,"count":1},{"x":18.66875,"y":0.3875,"count":6},{"x":18.66875,"y":0.46499999999999997,"count":3},{"x":18.66875,"y":0.5425,"count":1},{"x":18.66875,"y":0.62,"count":1},{"x":18.66875,"y":0.6975,"count":4},{"x":18.66875,"y":0.775,"count":3},{"x":18.66875,"y":0.8525,"count":2},{"x":18.66875,"y":0.9299999999999999,"count":2},{"x":18.66875,"y":1.0075,"count":1},{"x":19.7125,"y":0.155,"count":1},{"x":19.7125,"y":0.23249999999999998,"count":3},{"x":19.7125,"y":0.31,"count":2},{"x":19.7125,"y":0.3875,"count":2},{"x":19.7125,"y":0.46499999999999997,"count":3},{"x":19.7125,"y":0.5425,"count":1},{"x":19.7125,"y":0.62,"count":3},{"x":19.7125,"y":0.6975,"count":2},{"x":19.7125,"y":0.775,"count":1},{"x":19.7125,"y":0.9299999999999999,"count":1},{"x":20.75625,"y":0.31,"count":1},{"x":20.75625,"y":0.3875,"count":2},{"x":20.75625,"y":0.46499999999999997,"count":1},{"x":20.75625,"y":0.5425,"count":2},{"x":20.75625,"y":0.62,"count":1},{"x":20.75625,"y":0.6975,"count":1},{"x":20.75625,"y":0.9299999999999999,"count":1},{"x":20.75625,"y":1.0075,"count":1},{"x":20.75625,"y":1.1625,"count":1},{"x":21.8,"y":0.31,"count":2},{"x":21.8,"y":0.46499999999999997,"count":1},{"x":21.8,"y":0.62,"count":2},{"x":21.8,"y":0.8525,"count":1},{"x":21.8,"y":0.9299999999999999,"count":1},{"x":21.8,"y":1.0075,"count":2},{"x":22.84375,"y":0.46499999999999997,"count":2},{"x":22.84375,"y":0.5425,"count":3},{"x":22.84375,"y":0.8525,"count":1},{"x":22.84375,"y":1.0075,"count":1},{"x":22.84375,"y":1.6275,"count":1},{"x":23.8875,"y":0.3875,"count":1},{"x":23.8875,"y":0.46499999999999997,"count":1},{"x":23.8875,"y":0.5425,"count":1},{"x":23.8875,"y":0.62,"count":6},{"x":23.8875,"y":0.6975,"count":3},{"x":23.8875,"y":0.775,"count":2},{"x":23.8875,"y":0.9299999999999999,"count":2},{"x":23.8875,"y":1.1625,"count":1},{"x":23.8875,"y":1.24,"count":1},{"x":24.931250000000002,"y":0.31,"count":1},{"x":24.931250000000002,"y":0.46499999999999997,"count":2},{"x":24.931250000000002,"y":0.5425,"count":1},{"x":24.931250000000002,"y":0.62,"count":1},{"x":24.931250000000002,"y":0.775,"count":2},{"x":24.931250000000002,"y":0.9299999999999999,"count":1},{"x":24.931250000000002,"y":1.0075,"count":1},{"x":24.931250000000002,"y":1.085,"count":1},{"x":24.931250000000002,"y":1.1625,"count":1},{"x":24.931250000000002,"y":1.24,"count":1},{"x":25.975,"y":0.31,"count":2},{"x":25.975,"y":0.5425,"count":2},{"x":25.975,"y":0.62,"count":1},{"x":25.975,"y":0.6975,"count":4},{"x":25.975,"y":0.775,"count":3},{"x":25.975,"y":0.8525,"count":2},{"x":25.975,"y":1.085,"count":1},{"x":25.975,"y":1.24,"count":1},{"x":27.01875,"y":0.23249999999999998,"count":1},{"x":27.01875,"y":0.3875,"count":1},{"x":27.01875,"y":0.46499999999999997,"count":2},{"x":27.01875,"y":0.62,"count":1},{"x":27.01875,"y":0.6975,"count":3},{"x":27.01875,"y":0.775,"count":2},{"x":27.01875,"y":0.8525,"count":2},{"x":27.01875,"y":1.0075,"count":1},{"x":27.01875,"y":1.085,"count":1},{"x":27.01875,"y":1.1625,"count":1},{"x":27.01875,"y":1.3175,"count":1},{"x":28.0625,"y":0.46499999999999997,"count":1},{"x":28.0625,"y":0.5425,"count":1},{"x":28.0625,"y":0.6975,"count":2},{"x":28.0625,"y":0.775,"count":1},{"x":28.0625,"y":0.8525,"count":1},{"x":28.0625,"y":0.9299999999999999,"count":3},{"x":28.0625,"y":1.0075,"count":1},{"x":28.0625,"y":1.085,"count":2},{"x":28.0625,"y":1.705,"count":1},{"x":29.10625,"y":0.31,"count":2},{"x":29.10625,"y":0.46499999999999997,"count":2},{"x":29.10625,"y":0.62,"count":1},{"x":29.10625,"y":0.6975,"count":1},{"x":29.10625,"y":0.8525,"count":3},{"x":29.10625,"y":1.0075,"count":3},{"x":29.10625,"y":1.1625,"count":2},{"x":29.10625,"y":1.6275,"count":1},{"x":30.15,"y":0.46499999999999997,"count":1},{"x":30.15,"y":0.5425,"count":1},{"x":30.15,"y":0.62,"count":1},{"x":30.15,"y":0.6975,"count":2},{"x":30.15,"y":0.775,"count":3},{"x":30.15,"y":0.8525,"count":1},{"x":30.15,"y":1.0075,"count":1},{"x":30.15,"y":1.1625,"count":1},{"x":30.15,"y":1.3175,"count":2},{"x":30.15,"y":1.55,"count":1},{"x":30.15,"y":1.8599999999999999,"count":1},{"x":31.19375,"y":0.31,"count":1},{"x":31.19375,"y":0.3875,"count":1},{"x":31.19375,"y":0.46499999999999997,"count":2},{"x":31.19375,"y":0.5425,"count":2},{"x":31.19375,"y":0.62,"count":1},{"x":31.19375,"y":0.6975,"count":1},{"x":31.19375,"y":0.775,"count":1},{"x":31.19375,"y":0.9299999999999999,"count":2},{"x":31.19375,"y":1.0075,"count":2},{"x":31.19375,"y":1.085,"count":1},{"x":31.19375,"y":1.1625,"count":2},{"x":31.19375,"y":1.24,"count":1},{"x":31.19375,"y":1.395,"count":1},{"x":31.19375,"y":1.4725,"count":3},{"x":31.19375,"y":1.7825,"count":1},{"x":31.19375,"y":2.2475,"count":1},{"x":32.2375,"y":0.46499999999999997,"count":2},{"x":32.2375,"y":0.5425,"count":2},{"x":32.2375,"y":0.6975,"count":1},{"x":32.2375,"y":0.8525,"count":2},{"x":32.2375,"y":0.9299999999999999,"count":3},{"x":32.2375,"y":1.085,"count":1},{"x":32.2375,"y":1.1625,"count":1},{"x":32.2375,"y":1.3175,"count":1},{"x":32.2375,"y":1.395,"count":2},{"x":32.2375,"y":1.55,"count":1},{"x":33.28125,"y":0.62,"count":1},{"x":33.28125,"y":0.6975,"count":1},{"x":33.28125,"y":0.775,"count":1},{"x":33.28125,"y":0.9299999999999999,"count":3},{"x":33.28125,"y":1.1625,"count":1},{"x":33.28125,"y":1.24,"count":1},{"x":33.28125,"y":1.4725,"count":1},{"x":33.28125,"y":1.6275,"count":1},{"x":33.28125,"y":1.705,"count":1},{"x":33.28125,"y":1.7825,"count":1},{"x":34.324999999999996,"y":0.46499999999999997,"count":1},{"x":34.324999999999996,"y":0.62,"count":1},{"x":34.324999999999996,"y":0.8525,"count":1},{"x":34.324999999999996,"y":0.9299999999999999,"count":3},{"x":34.324999999999996,"y":1.0075,"count":1},{"x":34.324999999999996,"y":1.24,"count":2},{"x":34.324999999999996,"y":1.3175,"count":3},{"x":34.324999999999996,"y":1.4725,"count":1},{"x":34.324999999999996,"y":1.55,"count":1},{"x":34.324999999999996,"y":1.6275,"count":1},{"x":34.324999999999996,"y":2.4025,"count":1},{"x":35.36875,"y":0.3875,"count":1},{"x":35.36875,"y":0.6975,"count":1},{"x":35.36875,"y":0.775,"count":1},{"x":35.36875,"y":0.8525,"count":1},{"x":35.36875,"y":0.9299999999999999,"count":1},{"x":35.36875,"y":1.085,"count":1},{"x":35.36875,"y":1.1625,"count":1},{"x":35.36875,"y":1.395,"count":1},{"x":35.36875,"y":1.4725,"count":1},{"x":35.36875,"y":1.55,"count":1},{"x":35.36875,"y":1.6275,"count":1},{"x":35.36875,"y":1.7825,"count":1},{"x":35.36875,"y":1.8599999999999999,"count":1},{"x":36.4125,"y":1.0075,"count":1},{"x":36.4125,"y":1.1625,"count":1},{"x":36.4125,"y":1.705,"count":1},{"x":37.45625,"y":1.085,"count":1},{"x":37.45625,"y":1.24,"count":2},{"x":37.45625,"y":1.55,"count":2},{"x":37.45625,"y":1.8599999999999999,"count":1}],"maxCount":8},"percentage of team minutes":{"x":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"y":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"x":5.1000000000000005,"y":7.2,"count":3},{"x":5.1000000000000005,"y":9.459375,"count":9},{"x":5.1000000000000005,"y":11.71875,"count":2},{"x":6.143750000000001,"y":9.459375,"count":2},{"x":6.143750000000001,"y":11.71875,"count":14},{"x":6.143750000000001,"y":13.978124999999999,"count":6},{"x":7.1875,"y":11.71875,"count":1},{"x":7.1875,"y":13.978124999999999,"count":14},{"x":7.1875,"y":16.2375,"count":5},{"x":8.23125,"y":7.2,"count":1},{"x":8.23125,"y":11.71875,"count":1},{"x":8.23125,"y":13.978124999999999,"count":4},{"x":8.23125,"y":16.2375,"count":14},{"x":8.23125,"y":18.496875,"count":6},{"x":9.275,"y":16.2375,"count":2},{"x":9.275,"y":18.496875,"count":16},{"x":9.275,"y":20.756249999999998,"count":2},{"x":10.318750000000001,"y":20.756249999999998,"count":14},{"x":10.318750000000001,"y":23.015625,"count":1},{"x":11.3625,"y":23.015625,"count":11},{"x":11.3625,"y":25.275,"count":3},{"x":12.40625,"y":18.496875,"count":1},{"x":12.40625,"y":23.015625,"count":2},{"x":12.40625,"y":25.275,"count":11},{"x":12.40625,"y":27.534374999999997,"count":1},{"x":13.45,"y":20.756249999999998,"count":1},{"x":13.45,"y":23.015625,"count":1},{"x":13.45,"y":25.275,"count":4},{"x":13.45,"y":27.534374999999997,"count":13},{"x":14.493749999999999,"y":25.275,"count":1},{"x":14.493749999999999,"y":27.534374999999997,"count":3},{"x":14.493749999999999,"y":29.79375,"count":17},{"x":15.537500000000001,"y":29.79375,"count":4},{"x":15.537500000000001,"y":32.053125,"count":14},{"x":15.537500000000001,"y":34.3125,"count":1},{"x":16.58125,"y":34.3125,"count":12},{"x":17.625,"y":29.79375,"count":1},{"x":17.625,"y":34.3125,"count":2},{"x":17.625,"y":36.571875,"count":12},{"x":18.66875,"y":23.015625,"count":1},{"x":18.66875,"y":36.571875,"count":8},{"x":18.66875,"y":38.83125,"count":18},{"x":19.7125,"y":38.83125,"count":5},{"x":19.7125,"y":41.090625,"count":14},{"x":20.75625,"y":41.090625,"count":4},{"x":20.75625,"y":43.35,"count":7},{"x":21.8,"y":43.35,"count":2},{"x":21.8,"y":45.609375,"count":7},{"x":22.84375,"y":45.609375,"count":6},{"x":22.84375,"y":47.86875,"count":2},{"x":23.8875,"y":47.86875,"count":10},{"x":23.8875,"y":50.128125000000004,"count":8},{"x":24.931250000000002,"y":50.128125000000004,"count":6},{"x":24.931250000000002,"y":52.3875,"count":6},{"x":25.975,"y":52.3875,"count":6},{"x":25.975,"y":54.646875,"count":10},{"x":27.01875,"y":54.646875,"count":5},{"x":27.01875,"y":56.90625,"count":11},{"x":28.0625,"y":56.90625,"count":8},{"x":28.0625,"y":59.165625,"count":5},{"x":29.10625,"y":59.165625,"count":11},{"x":29.10625,"y":61.425,"count":4},{"x":30.15,"y":56.90625,"count":1},{"x":30.15,"y":61.425,"count":10},{"x":30.15,"y":63.684375,"count":4},{"x":31.19375,"y":61.425,"count":1},{"x":31.19375,"y":63.684375,"count":15},{"x":31.19375,"y":65.94375,"count":7},{"x":32.2375,"y":63.684375,"count":1},{"x":32.2375,"y":65.94375,"count":12},{"x":32.2375,"y":68.203125,"count":3},{"x":33.28125,"y":65.94375,"count":1},{"x":33.28125,"y":68.203125,"count":8},{"x":33.28125,"y":70.46249999999999,"count":3},{"x":34.324999999999996,"y":68.203125,"count":2},{"x":34.324999999999996,"y":70.46249999999999,"count":12},{"x":34.324999999999996,"y":72.721875,"count":2},{"x":35.36875,"y":70.46249999999999,"count":1},{"x":35.36875,"y":72.721875,"count":10},{"x":35.36875,"y":74.98125,"count":2},{"x":36.4125,"y":72.721875,"count":1},{"x":36.4125,"y":74.98125,"count":2},{"x":37.45625,"y":77.240625,"count":6}],"maxCount":18},"percentage of team assists":{"x":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"y":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"bins":[{"x":5.1000000000000005,"y":0,"count":3},{"x":5.1000000000000005,"y":4.612500000000001,"count":2},{"x":5.1000000000000005,"y":10.762500000000001,"count":3},{"x":5.1000000000000005,"y":12.3,"count":3},{"x":5.1000000000000005,"y":13.8375,"count":1},{"x":5.1000000000000005,"y":18.450000000000003,"count":2},{"x":6.143750000000001,"y":0,"count":2},{"x":6.143750000000001,"y":1.5375,"count":1},{"x":6.143750000000001,"y":3.075,"count":1},{"x":6.143750000000001,"y":4.612500000000001,"count":3},{"x":6.143750000000001,"y":6.15,"count":4},{"x":6.143750000000001,"y":7.6875,"count":3},{"x":6.143750000000001,"y":10.762500000000001,"count":2},{"x":6.143750000000001,"y":12.3,"count":2},{"x":6.143750000000001,"y":13.8375,"count":1},{"x":6.143750000000001,"y":21.525000000000002,"count":2},{"x":6.143750000000001,"y":33.825,"count":1},{"x":7.1875,"y":0,"count":2},{"x":7.1875,"y":1.5375,"count":1},{"x":7.1875,"y":3.075,"count":5},{"x":7.1875,"y":4.612500000000001,"count":2},{"x":7.1875,"y":6.15,"count":2},{"x":7.1875,"y":7.6875,"count":2},{"x":7.1875,"y":9.225000000000001,"count":1},{"x":7.1875,"y":12.3,"count":1},{"x":7.1875,"y":13.8375,"count":1},{"x":7.1875,"y":18.450000000000003,"count":1},{"x":7.1875,"y":19.9875,"count":1},{"x":7.1875,"y":41.5125,"count":1},{"x":8.23125,"y":0,"count":4},{"x":8.23125,"y":1.5375,"count":1},{"x":8.23125,"y":3.075,"count":3},{"x":8.23125,"y":4.612500000000001,"count":2},{"x":8.23125,"y":6.15,"count":3},{"x":8.23125,"y":7.6875,"count":1},{"x":8.23125,"y":9.225000000000001,"count":4},{"x":8.23125,"y":12.3,"count":1},{"x":8.23125,"y":15.375,"count":2},{"x":8.23125,"y":19.9875,"count":1},{"x":8.23125,"y":26.137500000000003,"count":3},{"x":8.23125,"y":30.75,"count":1},{"x":9.275,"y":0,"count":1},{"x":9.275,"y":1.5375,"count":1},{"x":9.275,"y":3.075,"count":4},{"x":9.275,"y":4.612500000000001,"count":3},{"x":9.275,"y":6.15,"count":3},{"x":9.275,"y":7.6875,"count":2},{"x":9.275,"y":9.225000000000001,"count":1},{"x":9.275,"y":10.762500000000001,"count":3},{"x":9.275,"y":19.9875,"count":1},{"x":9.275,"y":23.0625,"count":1},{"x":10.318750000000001,"y":3.075,"count":2},{"x":10.318750000000001,"y":4.612500000000001,"count":3},{"x":10.318750000000001,"y":6.15,"count":2},{"x":10.318750000000001,"y":7.6875,"count":2},{"x":10.318750000000001,"y":9.225000000000001,"count":2},{"x":10.318750000000001,"y":13.8375,"count":2},{"x":10.318750000000001,"y":15.375,"count":1},{"x":10.318750000000001,"y":23.0625,"count":1},{"x":11.3625,"y":4.612500000000001,"count":4},{"x":11.3625,"y":6.15,"count":2},{"x":11.3625,"y":7.6875,"count":3},{"x":11.3625,"y":9.225000000000001,"count":2},{"x":11.3625,"y":16.9125,"count":1},{"x":11.3625,"y":21.525000000000002,"count":1},{"x":11.3625,"y":24.6,"count":1},{"x":12.40625,"y":0,"count":1},{"x":12.40625,"y":1.5375,"count":1},{"x":12.40625,"y":3.075,"count":3},{"x":12.40625,"y":4.612500000000001,"count":2},{"x":12.40625,"y":6.15,"count":2},{"x":12.40625,"y":7.6875,"count":1},{"x":12.40625,"y":9.225000000000001,"count":1},{"x":12.40625,"y":13.8375,"count":2},{"x":12.40625,"y":16.9125,"count":1},{"x":12.40625,"y":21.525000000000002,"count":1},{"x":13.45,"y":0,"count":3},{"x":13.45,"y":1.5375,"count":2},{"x":13.45,"y":3.075,"count":3},{"x":13.45,"y":4.612500000000001,"count":4},{"x":13.45,"y":6.15,"count":1},{"x":13.45,"y":10.762500000000001,"count":1},{"x":13.45,"y":12.3,"count":1},{"x":13.45,"y":15.375,"count":1},{"x":13.45,"y":16.9125,"count":1},{"x":13.45,"y":26.137500000000003,"count":1},{"x":13.45,"y":29.212500000000002,"count":1},{"x":14.493749999999999,"y":0,"count":1},{"x":14.493749999999999,"y":1.5375,"count":2},{"x":14.493749999999999,"y":3.075,"count":4},{"x":14.493749999999999,"y":4.612500000000001,"count":4},{"x":14.493749999999999,"y":6.15,"count":1},{"x":14.493749999999999,"y":7.6875,"count":3},{"x":14.493749999999999,"y":10.762500000000001,"count":1},{"x":14.493749999999999,"y":16.9125,"count":2},{"x":14.493749999999999,"y":21.525000000000002,"count":1},{"x":14.493749999999999,"y":30.75,"count":1},{"x":14.493749999999999,"y":33.825,"count":1},{"x":15.537500000000001,"y":1.5375,"count":1},{"x":15.537500000000001,"y":3.075,"count":1},{"x":15.537500000000001,"y":6.15,"count":3},{"x":15.537500000000001,"y":7.6875,"count":5},{"x":15.537500000000001,"y":9.225000000000001,"count":1},{"x":15.537500000000001,"y":10.762500000000001,"count":1},{"x":15.537500000000001,"y":13.8375,"count":1},{"x":15.537500000000001,"y":15.375,"count":1},{"x":15.537500000000001,"y":16.9125,"count":1},{"x":15.537500000000001,"y":18.450000000000003,"count":2},{"x":15.537500000000001,"y":24.6,"count":1},{"x":15.537500000000001,"y":26.137500000000003,"count":1},{"x":16.58125,"y":4.612500000000001,"count":1},{"x":16.58125,"y":6.15,"count":2},{"x":16.58125,"y":7.6875,"count":2},{"x":16.58125,"y":9.225000000000001,"count":3},{"x":16.58125,"y":10.762500000000001,"count":3},{"x":16.58125,"y":21.525000000000002,"count":1},{"x":17.625,"y":4.612500000000001,"count":2},{"x":17.625,"y":6.15,"count":3},{"x":17.625,"y":7.6875,"count":2},{"x":17.625,"y":9.225000000000001,"count":1},{"x":17.625,"y":10.762500000000001,"count":3},{"x":17.625,"y":12.3,"count":1},{"x":17.625,"y":16.9125,"count":1},{"x":17.625,"y":32.2875,"count":2},{"x":18.66875,"y":0,"count":1},{"x":18.66875,"y":1.5375,"count":1},{"x":18.66875,"y":4.612500000000001,"count":3},{"x":18.66875,"y":6.15,"count":2},{"x":18.66875,"y":7.6875,"count":5},{"x":18.66875,"y":9.225000000000001,"count":1},{"x":18.66875,"y":10.762500000000001,"count":4},{"x":18.66875,"y":12.3,"count":1},{"x":18.66875,"y":13.8375,"count":2},{"x":18.66875,"y":15.375,"count":1},{"x":18.66875,"y":18.450000000000003,"count":1},{"x":18.66875,"y":19.9875,"count":2},{"x":18.66875,"y":24.6,"count":2},{"x":18.66875,"y":29.212500000000002,"count":1},{"x":19.7125,"y":3.075,"count":3},{"x":19.7125,"y":4.612500000000001,"count":4},{"x":19.7125,"y":7.6875,"count":2},{"x":19.7125,"y":9.225000000000001,"count":2},{"x":19.7125,"y":10.762500000000001,"count":1},{"x":19.7125,"y":12.3,"count":3},{"x":19.7125,"y":15.375,"count":1},{"x":19.7125,"y":27.675,"count":1},{"x":19.7125,"y":30.75,"count":1},{"x":19.7125,"y":39.975,"count":1},{"x":20.75625,"y":4.612500000000001,"count":1},{"x":20.75625,"y":6.15,"count":1},{"x":20.75625,"y":7.6875,"count":1},{"x":20.75625,"y":9.225000000000001,"count":1},{"x":20.75625,"y":10.762500000000001,"count":3},{"x":20.75625,"y":18.450000000000003,"count":1},{"x":20.75625,"y":21.525000000000002,"count":1},{"x":20.75625,"y":24.6,"count":1},{"x":20.75625,"y":29.212500000000002,"count":1},{"x":21.8,"y":3.075,"count":1},{"x":21.8,"y":6.15,"count":2},{"x":21.8,"y":7.6875,"count":2},{"x":21.8,"y":10.762500000000001,"count":1},{"x":21.8,"y":12.3,"count":1},{"x":21.8,"y":27.675,"count":1},{"x":21.8,"y":33.825,"count":1},{"x":22.84375,"y":4.612500000000001,"count":1},{"x":22.84375,"y":7.6875,"count":2},{"x":22.84375,"y":9.225000000000001,"count":1},{"x":22.84375,"y":10.762500000000001,"count":1},{"x":22.84375,"y":12.3,"count":1},{"x":22.84375,"y":21.525000000000002,"count":1},{"x":22.84375,"y":26.137500000000003,"count":1},{"x":23.8875,"y":3.075,"count":2},{"x":23.8875,"y":4.612500000000001,"count":4},{"x":23.8875,"y":6.15,"count":2},{"x":23.8875,"y":7.6875,"count":1},{"x":23.8875,"y":10.762500000000001,"count":2},{"x":23.8875,"y":13.8375,"count":2},{"x":23.8875,"y":15.375,"count":3},{"x":23.8875,"y":16.9125,"count":1},{"x":23.8875,"y":23.0625,"count":1},{"x":24.931250000000002,"y":4.612500000000001,"count":1},{"x":24.931250000000002,"y":7.6875,"count":5},{"x":24.931250000000002,"y":12.3,"count":1},{"x":24.931250000000002,"y":13.8375,"count":1},{"x":24.931250000000002,"y":19.9875,"count":2},{"x":24.931250000000002,"y":21.525000000000002,"count":1},{"x":24.931250000000002,"y":32.2875,"count":1},{"x":25.975,"y":4.612500000000001,"count":3},{"x":25.975,"y":6.15,"count":3},{"x":25.975,"y":7.6875,"count":2},{"x":25.975,"y":9.225000000000001,"count":3},{"x":25.975,"y":10.762500000000001,"count":4},{"x":25.975,"y":12.3,"count":1},{"x":27.01875,"y":3.075,"count":1},{"x":27.01875,"y":6.15,"count":4},{"x":27.01875,"y":7.6875,"count":1},{"x":27.01875,"y":9.225000000000001,"count":2},{"x":27.01875,"y":10.762500000000001,"count":1},{"x":27.01875,"y":12.3,"count":2},{"x":27.01875,"y":13.8375,"count":1},{"x":27.01875,"y":16.9125,"count":2},{"x":27.01875,"y":21.525000000000002,"count":1},{"x":27.01875,"y":29.212500000000002,"count":1},{"x":28.0625,"y":4.612500000000001,"count":1},{"x":28.0625,"y":6.15,"count":1},{"x":28.0625,"y":7.6875,"count":3},{"x":28.0625,"y":9.225000000000001,"count":2},{"x":28.0625,"y":15.375,"count":1},{"x":28.0625,"y":21.525000000000002,"count":2},{"x":28.0625,"y":23.0625,"count":1},{"x":28.0625,"y":27.675,"count":1},{"x":28.0625,"y":44.587500000000006,"count":1},{"x":29.10625,"y":4.612500000000001,"count":1},{"x":29.10625,"y":6.15,"count":3},{"x":29.10625,"y":7.6875,"count":2},{"x":29.10625,"y":10.762500000000001,"count":1},{"x":29.10625,"y":12.3,"count":1},{"x":29.10625,"y":15.375,"count":1},{"x":29.10625,"y":16.9125,"count":1},{"x":29.10625,"y":18.450000000000003,"count":1},{"x":29.10625,"y":21.525000000000002,"count":1},{"x":29.10625,"y":23.0625,"count":1},{"x":29.10625,"y":30.75,"count":1},{"x":29.10625,"y":33.825,"count":1},{"x":30.15,"y":4.612500000000001,"count":1},{"x":30.15,"y":7.6875,"count":3},{"x":30.15,"y":9.225000000000001,"count":1},{"x":30.15,"y":12.3,"count":1},{"x":30.15,"y":15.375,"count":1},{"x":30.15,"y":16.9125,"count":1},{"x":30.15,"y":21.525000000000002,"count":2},{"x":30.15,"y":26.137500000000003,"count":1},{"x":30.15,"y":27.675,"count":1},{"x":30.15,"y":29.212500000000002,"count":1},{"x":30.15,"y":30.75,"count":1},{"x":30.15,"y":39.975,"count":1},{"x":31.19375,"y":1.5375,"count":1},{"x":31.19375,"y":3.075,"count":2},{"x":31.19375,"y":4.612500000000001,"count":2},{"x":31.19375,"y":6.15,"count":1},{"x":31.19375,"y":7.6875,"count":2},{"x":31.19375,"y":9.225000000000001,"count":2},{"x":31.19375,"y":12.3,"count":1},{"x":31.19375,"y":13.8375,"count":1},{"x":31.19375,"y":15.375,"count":1},{"x":31.19375,"y":16.9125,"count":4},{"x":31.19375,"y":18.450000000000003,"count":1},{"x":31.19375,"y":29.212500000000002,"count":1},{"x":31.19375,"y":32.2875,"count":1},{"x":31.19375,"y":33.825,"count":2},{"x":31.19375,"y":36.900000000000006,"count":1},{"x":32.2375,"y":4.612500000000001,"count":1},{"x":32.2375,"y":7.6875,"count":2},{"x":32.2375,"y":9.225000000000001,"count":1},{"x":32.2375,"y":10.762500000000001,"count":1},{"x":32.2375,"y":13.8375,"count":4},{"x":32.2375,"y":16.9125,"count":1},{"x":32.2375,"y":24.6,"count":2},{"x":32.2375,"y":26.137500000000003,"count":2},{"x":32.2375,"y":32.2875,"count":1},{"x":32.2375,"y":47.6625,"count":1},{"x":33.28125,"y":7.6875,"count":1},{"x":33.28125,"y":9.225000000000001,"count":1},{"x":33.28125,"y":10.762500000000001,"count":2},{"x":33.28125,"y":12.3,"count":2},{"x":33.28125,"y":15.375,"count":2},{"x":33.28125,"y":29.212500000000002,"count":2},{"x":33.28125,"y":33.825,"count":1},{"x":33.28125,"y":38.4375,"count":1},{"x":34.324999999999996,"y":3.075,"count":1},{"x":34.324999999999996,"y":7.6875,"count":1},{"x":34.324999999999996,"y":9.225000000000001,"count":1},{"x":34.324999999999996,"y":10.762500000000001,"count":2},{"x":34.324999999999996,"y":12.3,"count":1},{"x":34.324999999999996,"y":13.8375,"count":1},{"x":34.324999999999996,"y":15.375,"count":1},{"x":34.324999999999996,"y":16.9125,"count":2},{"x":34.324999999999996,"y":21.525000000000002,"count":1},{"x":34.324999999999996,"y":26.137500000000003,"count":1},{"x":34.324999999999996,"y":27.675,"count":1},{"x":34.324999999999996,"y":30.75,"count":1},{"x":34.324999999999996,"y":32.2875,"count":1},{"x":34.324999999999996,"y":47.6625,"count":1},{"x":35.36875,"y":3.075,"count":1},{"x":35.36875,"y":12.3,"count":1},{"x":35.36875,"y":16.9125,"count":1},{"x":35.36875,"y":18.450000000000003,"count":1},{"x":35.36875,"y":19.9875,"count":1},{"x":35.36875,"y":21.525000000000002,"count":1},{"x":35.36875,"y":23.0625,"count":1},{"x":35.36875,"y":24.6,"count":1},{"x":35.36875,"y":29.212500000000002,"count":1},{"x":35.36875,"y":33.825,"count":1},{"x":35.36875,"y":36.900000000000006,"count":1},{"x":35.36875,"y":39.975,"count":2},{"x":36.4125,"y":16.9125,"count":1},{"x":36.4125,"y":18.450000000000003,"count":1},{"x":36.4125,"y":24.6,"count":1},{"x":37.45625,"y":10.762500000000001,"count":1},{"x":37.45625,"y":15.375,"count":1},{"x":37.45625,"y":18.450000000000003,"count":1},{"x":37.45625,"y":26.137500000000003,"count":2},{"x":37.45625,"y":30.75,"count":1}],"maxCount":5}},"free throw percent":{"minutes":{"x":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"y":{"name":"minutes","extent":[5.1000000000000005,38.5],"delta":1.04375},"bins":[{"x":0,"y":5.1000000000000005,"count":6},{"x":0,"y":6.143750000000001,"count":5},{"x":0,"y":8.23125,"count":2},{"x":0,"y":12.40625,"count":1},{"x":0,"y":13.45,"count":2},{"x":0,"y":14.493749999999999,"count":1},{"x":0,"y":18.66875,"count":1},{"x":0.15625,"y":7.1875,"count":1},{"x":0.1875,"y":7.1875,"count":1},{"x":0.25,"y":9.275,"count":1},{"x":0.25,"y":13.45,"count":1},{"x":0.3125,"y":5.1000000000000005,"count":1},{"x":0.3125,"y":6.143750000000001,"count":1},{"x":0.3125,"y":12.40625,"count":1},{"x":0.34375,"y":25.975,"count":1},{"x":0.375,"y":7.1875,"count":1},{"x":0.375,"y":8.23125,"count":1},{"x":0.375,"y":15.537500000000001,"count":1},{"x":0.40625,"y":13.45,"count":1},{"x":0.40625,"y":18.66875,"count":1},{"x":0.40625,"y":31.19375,"count":1},{"x":0.40625,"y":34.324999999999996,"count":1},{"x":0.4375,"y":6.143750000000001,"count":1},{"x":0.4375,"y":23.8875,"count":1},{"x":0.46875,"y":9.275,"count":1},{"x":0.46875,"y":13.45,"count":1},{"x":0.46875,"y":24.931250000000002,"count":1},{"x":0.5,"y":5.1000000000000005,"count":2},{"x":0.5,"y":6.143750000000001,"count":1},{"x":0.5,"y":7.1875,"count":2},{"x":0.5,"y":8.23125,"count":4},{"x":0.5,"y":9.275,"count":2},{"x":0.5,"y":11.3625,"count":1},{"x":0.5,"y":13.45,"count":3},{"x":0.5,"y":14.493749999999999,"count":1},{"x":0.5,"y":18.66875,"count":2},{"x":0.5,"y":25.975,"count":2},{"x":0.5,"y":28.0625,"count":1},{"x":0.53125,"y":6.143750000000001,"count":2},{"x":0.53125,"y":9.275,"count":2},{"x":0.53125,"y":12.40625,"count":1},{"x":0.53125,"y":13.45,"count":1},{"x":0.53125,"y":18.66875,"count":1},{"x":0.53125,"y":23.8875,"count":2},{"x":0.53125,"y":33.28125,"count":1},{"x":0.53125,"y":34.324999999999996,"count":1},{"x":0.5625,"y":6.143750000000001,"count":1},{"x":0.5625,"y":7.1875,"count":3},{"x":0.5625,"y":8.23125,"count":2},{"x":0.5625,"y":11.3625,"count":1},{"x":0.5625,"y":13.45,"count":3},{"x":0.5625,"y":14.493749999999999,"count":3},{"x":0.5625,"y":18.66875,"count":1},{"x":0.5625,"y":19.7125,"count":2},{"x":0.5625,"y":23.8875,"count":2},{"x":0.5625,"y":24.931250000000002,"count":1},{"x":0.5625,"y":29.10625,"count":1},{"x":0.59375,"y":7.1875,"count":2},{"x":0.59375,"y":10.318750000000001,"count":1},{"x":0.59375,"y":11.3625,"count":1},{"x":0.59375,"y":14.493749999999999,"count":1},{"x":0.59375,"y":15.537500000000001,"count":2},{"x":0.59375,"y":17.625,"count":1},{"x":0.59375,"y":19.7125,"count":1},{"x":0.59375,"y":20.75625,"count":1},{"x":0.59375,"y":23.8875,"count":2},{"x":0.59375,"y":27.01875,"count":1},{"x":0.625,"y":7.1875,"count":2},{"x":0.625,"y":8.23125,"count":2},{"x":0.625,"y":9.275,"count":1},{"x":0.625,"y":10.318750000000001,"count":3},{"x":0.625,"y":11.3625,"count":1},{"x":0.625,"y":12.40625,"count":3},{"x":0.625,"y":13.45,"count":1},{"x":0.625,"y":14.493749999999999,"count":2},{"x":0.625,"y":16.58125,"count":1},{"x":0.625,"y":17.625,"count":1},{"x":0.625,"y":18.66875,"count":3},{"x":0.625,"y":19.7125,"count":1},{"x":0.625,"y":20.75625,"count":2},{"x":0.625,"y":22.84375,"count":2},{"x":0.625,"y":25.975,"count":1},{"x":0.625,"y":27.01875,"count":1},{"x":0.625,"y":28.0625,"count":1},{"x":0.625,"y":29.10625,"count":1},{"x":0.625,"y":31.19375,"count":1},{"x":0.625,"y":32.2375,"count":2},{"x":0.65625,"y":5.1000000000000005,"count":1},{"x":0.65625,"y":7.1875,"count":1},{"x":0.65625,"y":8.23125,"count":3},{"x":0.65625,"y":9.275,"count":1},{"x":0.65625,"y":11.3625,"count":2},{"x":0.65625,"y":12.40625,"count":1},{"x":0.65625,"y":13.45,"count":1},{"x":0.65625,"y":14.493749999999999,"count":2},{"x":0.65625,"y":15.537500000000001,"count":2},{"x":0.65625,"y":16.58125,"count":1},{"x":0.65625,"y":17.625,"count":2},{"x":0.65625,"y":18.66875,"count":1},{"x":0.65625,"y":19.7125,"count":1},{"x":0.65625,"y":20.75625,"count":2},{"x":0.65625,"y":23.8875,"count":1},{"x":0.65625,"y":24.931250000000002,"count":2},{"x":0.65625,"y":27.01875,"count":1},{"x":0.65625,"y":29.10625,"count":3},{"x":0.65625,"y":32.2375,"count":3},{"x":0.6875,"y":6.143750000000001,"count":1},{"x":0.6875,"y":7.1875,"count":1},{"x":0.6875,"y":8.23125,"count":2},{"x":0.6875,"y":9.275,"count":3},{"x":0.6875,"y":10.318750000000001,"count":1},{"x":0.6875,"y":11.3625,"count":2},{"x":0.6875,"y":12.40625,"count":2},{"x":0.6875,"y":13.45,"count":1},{"x":0.6875,"y":14.493749999999999,"count":2},{"x":0.6875,"y":15.537500000000001,"count":2},{"x":0.6875,"y":17.625,"count":1},{"x":0.6875,"y":18.66875,"count":2},{"x":0.6875,"y":20.75625,"count":3},{"x":0.6875,"y":21.8,"count":1},{"x":0.6875,"y":23.8875,"count":1},{"x":0.6875,"y":27.01875,"count":1},{"x":0.6875,"y":31.19375,"count":2},{"x":0.6875,"y":33.28125,"count":1},{"x":0.6875,"y":34.324999999999996,"count":2},{"x":0.6875,"y":35.36875,"count":1},{"x":0.71875,"y":7.1875,"count":1},{"x":0.71875,"y":8.23125,"count":1},{"x":0.71875,"y":9.275,"count":1},{"x":0.71875,"y":10.318750000000001,"count":2},{"x":0.71875,"y":11.3625,"count":1},{"x":0.71875,"y":16.58125,"count":3},{"x":0.71875,"y":18.66875,"count":2},{"x":0.71875,"y":19.7125,"count":1},{"x":0.71875,"y":20.75625,"count":1},{"x":0.71875,"y":21.8,"count":3},{"x":0.71875,"y":22.84375,"count":1},{"x":0.71875,"y":23.8875,"count":1},{"x":0.71875,"y":25.975,"count":3},{"x":0.71875,"y":27.01875,"count":2},{"x":0.71875,"y":28.0625,"count":2},{"x":0.71875,"y":29.10625,"count":2},{"x":0.71875,"y":30.15,"count":3},{"x":0.71875,"y":31.19375,"count":2},{"x":0.71875,"y":32.2375,"count":1},{"x":0.71875,"y":33.28125,"count":2},{"x":0.71875,"y":34.324999999999996,"count":1},{"x":0.71875,"y":36.4125,"count":1},{"x":0.75,"y":5.1000000000000005,"count":1},{"x":0.75,"y":6.143750000000001,"count":2},{"x":0.75,"y":7.1875,"count":1},{"x":0.75,"y":8.23125,"count":3},{"x":0.75,"y":9.275,"count":1},{"x":0.75,"y":10.318750000000001,"count":3},{"x":0.75,"y":11.3625,"count":1},{"x":0.75,"y":13.45,"count":2},{"x":0.75,"y":14.493749999999999,"count":4},{"x":0.75,"y":15.537500000000001,"count":3},{"x":0.75,"y":16.58125,"count":2},{"x":0.75,"y":17.625,"count":2},{"x":0.75,"y":18.66875,"count":4},{"x":0.75,"y":19.7125,"count":2},{"x":0.75,"y":20.75625,"count":1},{"x":0.75,"y":21.8,"count":2},{"x":0.75,"y":23.8875,"count":1},{"x":0.75,"y":24.931250000000002,"count":2},{"x":0.75,"y":25.975,"count":2},{"x":0.75,"y":27.01875,"count":4},{"x":0.75,"y":28.0625,"count":2},{"x":0.75,"y":29.10625,"count":1},{"x":0.75,"y":30.15,"count":2},{"x":0.75,"y":31.19375,"count":3},{"x":0.75,"y":32.2375,"count":3},{"x":0.75,"y":33.28125,"count":2},{"x":0.75,"y":34.324999999999996,"count":3},{"x":0.75,"y":37.45625,"count":2},{"x":0.78125,"y":6.143750000000001,"count":2},{"x":0.78125,"y":7.1875,"count":1},{"x":0.78125,"y":9.275,"count":1},{"x":0.78125,"y":11.3625,"count":1},{"x":0.78125,"y":12.40625,"count":3},{"x":0.78125,"y":13.45,"count":1},{"x":0.78125,"y":14.493749999999999,"count":1},{"x":0.78125,"y":15.537500000000001,"count":2},{"x":0.78125,"y":16.58125,"count":2},{"x":0.78125,"y":17.625,"count":4},{"x":0.78125,"y":18.66875,"count":2},{"x":0.78125,"y":19.7125,"count":6},{"x":0.78125,"y":22.84375,"count":2},{"x":0.78125,"y":23.8875,"count":2},{"x":0.78125,"y":24.931250000000002,"count":1},{"x":0.78125,"y":25.975,"count":2},{"x":0.78125,"y":28.0625,"count":2},{"x":0.78125,"y":29.10625,"count":2},{"x":0.78125,"y":30.15,"count":3},{"x":0.78125,"y":31.19375,"count":6},{"x":0.78125,"y":32.2375,"count":3},{"x":0.78125,"y":33.28125,"count":2},{"x":0.78125,"y":34.324999999999996,"count":3},{"x":0.78125,"y":35.36875,"count":3},{"x":0.78125,"y":36.4125,"count":1},{"x":0.8125,"y":5.1000000000000005,"count":1},{"x":0.8125,"y":8.23125,"count":1},{"x":0.8125,"y":9.275,"count":1},{"x":0.8125,"y":10.318750000000001,"count":1},{"x":0.8125,"y":11.3625,"count":1},{"x":0.8125,"y":12.40625,"count":3},{"x":0.8125,"y":13.45,"count":1},{"x":0.8125,"y":14.493749999999999,"count":3},{"x":0.8125,"y":15.537500000000001,"count":4},{"x":0.8125,"y":16.58125,"count":2},{"x":0.8125,"y":17.625,"count":2},{"x":0.8125,"y":18.66875,"count":3},{"x":0.8125,"y":19.7125,"count":3},{"x":0.8125,"y":21.8,"count":1},{"x":0.8125,"y":22.84375,"count":1},{"x":0.8125,"y":23.8875,"count":2},{"x":0.8125,"y":24.931250000000002,"count":1},{"x":0.8125,"y":25.975,"count":4},{"x":0.8125,"y":27.01875,"count":4},{"x":0.8125,"y":28.0625,"count":2},{"x":0.8125,"y":29.10625,"count":1},{"x":0.8125,"y":30.15,"count":3},{"x":0.8125,"y":31.19375,"count":3},{"x":0.8125,"y":32.2375,"count":2},{"x":0.8125,"y":33.28125,"count":3},{"x":0.8125,"y":34.324999999999996,"count":2},{"x":0.8125,"y":35.36875,"count":5},{"x":0.8125,"y":36.4125,"count":1},{"x":0.8125,"y":37.45625,"count":1},{"x":0.84375,"y":6.143750000000001,"count":1},{"x":0.84375,"y":7.1875,"count":1},{"x":0.84375,"y":10.318750000000001,"count":1},{"x":0.84375,"y":15.537500000000001,"count":2},{"x":0.84375,"y":16.58125,"count":1},{"x":0.84375,"y":17.625,"count":1},{"x":0.84375,"y":18.66875,"count":2},{"x":0.84375,"y":19.7125,"count":1},{"x":0.84375,"y":20.75625,"count":1},{"x":0.84375,"y":21.8,"count":1},{"x":0.84375,"y":23.8875,"count":2},{"x":0.84375,"y":24.931250000000002,"count":3},{"x":0.84375,"y":27.01875,"count":1},{"x":0.84375,"y":28.0625,"count":1},{"x":0.84375,"y":29.10625,"count":3},{"x":0.84375,"y":30.15,"count":3},{"x":0.84375,"y":31.19375,"count":3},{"x":0.84375,"y":32.2375,"count":1},{"x":0.84375,"y":34.324999999999996,"count":3},{"x":0.84375,"y":35.36875,"count":2},{"x":0.84375,"y":37.45625,"count":3},{"x":0.875,"y":5.1000000000000005,"count":1},{"x":0.875,"y":6.143750000000001,"count":1},{"x":0.875,"y":8.23125,"count":1},{"x":0.875,"y":9.275,"count":1},{"x":0.875,"y":10.318750000000001,"count":1},{"x":0.875,"y":14.493749999999999,"count":1},{"x":0.875,"y":17.625,"count":1},{"x":0.875,"y":18.66875,"count":1},{"x":0.875,"y":25.975,"count":1},{"x":0.875,"y":28.0625,"count":2},{"x":0.875,"y":29.10625,"count":1},{"x":0.875,"y":30.15,"count":1},{"x":0.875,"y":31.19375,"count":2},{"x":0.875,"y":32.2375,"count":1},{"x":0.875,"y":35.36875,"count":1},{"x":0.90625,"y":6.143750000000001,"count":1},{"x":0.90625,"y":8.23125,"count":2},{"x":0.90625,"y":18.66875,"count":1},{"x":0.90625,"y":19.7125,"count":1},{"x":0.90625,"y":27.01875,"count":1},{"x":0.90625,"y":33.28125,"count":1},{"x":0.9375,"y":10.318750000000001,"count":1},{"x":0.9375,"y":11.3625,"count":1},{"x":0.9375,"y":21.8,"count":1},{"x":0.9375,"y":22.84375,"count":2},{"x":0.9375,"y":24.931250000000002,"count":1},{"x":0.9375,"y":35.36875,"count":1},{"x":0.96875,"y":5.1000000000000005,"count":1},{"x":0.96875,"y":6.143750000000001,"count":3},{"x":0.96875,"y":7.1875,"count":2},{"x":0.96875,"y":8.23125,"count":2},{"x":0.96875,"y":9.275,"count":4},{"x":0.96875,"y":10.318750000000001,"count":1},{"x":0.96875,"y":11.3625,"count":1},{"x":0.96875,"y":15.537500000000001,"count":1},{"x":0.96875,"y":23.8875,"count":1}],"maxCount":6},"percentage of team minutes":{"x":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"y":{"name":"percentage of team minutes","extent":[7.2,79.5],"delta":2.259375},"bins":[{"x":0,"y":7.2,"count":4},{"x":0,"y":9.459375,"count":4},{"x":0,"y":11.71875,"count":4},{"x":0,"y":18.496875,"count":2},{"x":0,"y":20.756249999999998,"count":1},{"x":0,"y":23.015625,"count":1},{"x":0,"y":25.275,"count":2},{"x":0.15625,"y":13.978124999999999,"count":1},{"x":0.1875,"y":16.2375,"count":1},{"x":0.25,"y":18.496875,"count":1},{"x":0.25,"y":27.534374999999997,"count":1},{"x":0.3125,"y":11.71875,"count":1},{"x":0.3125,"y":13.978124999999999,"count":1},{"x":0.3125,"y":23.015625,"count":1},{"x":0.34375,"y":52.3875,"count":1},{"x":0.375,"y":13.978124999999999,"count":1},{"x":0.375,"y":16.2375,"count":1},{"x":0.375,"y":32.053125,"count":1},{"x":0.40625,"y":27.534374999999997,"count":1},{"x":0.40625,"y":38.83125,"count":1},{"x":0.40625,"y":65.94375,"count":1},{"x":0.40625,"y":70.46249999999999,"count":1},{"x":0.4375,"y":11.71875,"count":1},{"x":0.4375,"y":50.128125000000004,"count":1},{"x":0.46875,"y":18.496875,"count":1},{"x":0.46875,"y":27.534374999999997,"count":1},{"x":0.46875,"y":50.128125000000004,"count":1},{"x":0.5,"y":9.459375,"count":1},{"x":0.5,"y":11.71875,"count":4},{"x":0.5,"y":13.978124999999999,"count":4},{"x":0.5,"y":18.496875,"count":1},{"x":0.5,"y":20.756249999999998,"count":1},{"x":0.5,"y":23.015625,"count":1},{"x":0.5,"y":25.275,"count":1},{"x":0.5,"y":27.534374999999997,"count":2},{"x":0.5,"y":29.79375,"count":1},{"x":0.5,"y":36.571875,"count":1},{"x":0.5,"y":38.83125,"count":1},{"x":0.5,"y":52.3875,"count":1},{"x":0.5,"y":54.646875,"count":1},{"x":0.5,"y":59.165625,"count":1},{"x":0.53125,"y":11.71875,"count":1},{"x":0.53125,"y":13.978124999999999,"count":1},{"x":0.53125,"y":18.496875,"count":2},{"x":0.53125,"y":25.275,"count":2},{"x":0.53125,"y":38.83125,"count":1},{"x":0.53125,"y":47.86875,"count":1},{"x":0.53125,"y":50.128125000000004,"count":1},{"x":0.53125,"y":68.203125,"count":1},{"x":0.53125,"y":72.721875,"count":1},{"x":0.5625,"y":13.978124999999999,"count":2},{"x":0.5625,"y":16.2375,"count":4},{"x":0.5625,"y":25.275,"count":2},{"x":0.5625,"y":27.534374999999997,"count":2},{"x":0.5625,"y":29.79375,"count":3},{"x":0.5625,"y":38.83125,"count":1},{"x":0.5625,"y":41.090625,"count":2},{"x":0.5625,"y":47.86875,"count":1},{"x":0.5625,"y":50.128125000000004,"count":1},{"x":0.5625,"y":52.3875,"count":1},{"x":0.5625,"y":59.165625,"count":1},{"x":0.59375,"y":13.978124999999999,"count":1},{"x":0.59375,"y":16.2375,"count":1},{"x":0.59375,"y":20.756249999999998,"count":1},{"x":0.59375,"y":23.015625,"count":1},{"x":0.59375,"y":29.79375,"count":1},{"x":0.59375,"y":32.053125,"count":2},{"x":0.59375,"y":36.571875,"count":1},{"x":0.59375,"y":41.090625,"count":1},{"x":0.59375,"y":43.35,"count":1},{"x":0.59375,"y":47.86875,"count":2},{"x":0.59375,"y":54.646875,"count":1},{"x":0.625,"y":13.978124999999999,"count":3},{"x":0.625,"y":16.2375,"count":1},{"x":0.625,"y":18.496875,"count":1},{"x":0.625,"y":20.756249999999998,"count":3},{"x":0.625,"y":23.015625,"count":1},{"x":0.625,"y":25.275,"count":2},{"x":0.625,"y":27.534374999999997,"count":2},{"x":0.625,"y":29.79375,"count":2},{"x":0.625,"y":34.3125,"count":1},{"x":0.625,"y":36.571875,"count":2},{"x":0.625,"y":38.83125,"count":3},{"x":0.625,"y":43.35,"count":2},{"x":0.625,"y":45.609375,"count":1},{"x":0.625,"y":47.86875,"count":1},{"x":0.625,"y":54.646875,"count":1},{"x":0.625,"y":56.90625,"count":2},{"x":0.625,"y":61.425,"count":1},{"x":0.625,"y":65.94375,"count":2},{"x":0.625,"y":68.203125,"count":1},{"x":0.65625,"y":9.459375,"count":1},{"x":0.65625,"y":13.978124999999999,"count":1},{"x":0.65625,"y":16.2375,"count":2},{"x":0.65625,"y":18.496875,"count":1},{"x":0.65625,"y":20.756249999999998,"count":1},{"x":0.65625,"y":23.015625,"count":1},{"x":0.65625,"y":25.275,"count":2},{"x":0.65625,"y":27.534374999999997,"count":1},{"x":0.65625,"y":29.79375,"count":2},{"x":0.65625,"y":32.053125,"count":1},{"x":0.65625,"y":34.3125,"count":2},{"x":0.65625,"y":36.571875,"count":3},{"x":0.65625,"y":41.090625,"count":2},{"x":0.65625,"y":43.35,"count":1},{"x":0.65625,"y":50.128125000000004,"count":2},{"x":0.65625,"y":52.3875,"count":1},{"x":0.65625,"y":54.646875,"count":1},{"x":0.65625,"y":59.165625,"count":2},{"x":0.65625,"y":61.425,"count":1},{"x":0.65625,"y":65.94375,"count":3},{"x":0.6875,"y":11.71875,"count":1},{"x":0.6875,"y":13.978124999999999,"count":1},{"x":0.6875,"y":16.2375,"count":3},{"x":0.6875,"y":18.496875,"count":2},{"x":0.6875,"y":20.756249999999998,"count":1},{"x":0.6875,"y":23.015625,"count":2},{"x":0.6875,"y":25.275,"count":2},{"x":0.6875,"y":27.534374999999997,"count":1},{"x":0.6875,"y":29.79375,"count":4},{"x":0.6875,"y":32.053125,"count":1},{"x":0.6875,"y":38.83125,"count":2},{"x":0.6875,"y":41.090625,"count":2},{"x":0.6875,"y":43.35,"count":1},{"x":0.6875,"y":45.609375,"count":1},{"x":0.6875,"y":50.128125000000004,"count":1},{"x":0.6875,"y":56.90625,"count":1},{"x":0.6875,"y":63.684375,"count":1},{"x":0.6875,"y":65.94375,"count":1},{"x":0.6875,"y":70.46249999999999,"count":3},{"x":0.6875,"y":72.721875,"count":1},{"x":0.71875,"y":16.2375,"count":1},{"x":0.71875,"y":18.496875,"count":2},{"x":0.71875,"y":20.756249999999998,"count":2},{"x":0.71875,"y":23.015625,"count":1},{"x":0.71875,"y":34.3125,"count":3},{"x":0.71875,"y":36.571875,"count":1},{"x":0.71875,"y":38.83125,"count":1},{"x":0.71875,"y":41.090625,"count":2},{"x":0.71875,"y":43.35,"count":1},{"x":0.71875,"y":45.609375,"count":3},{"x":0.71875,"y":50.128125000000004,"count":1},{"x":0.71875,"y":52.3875,"count":1},{"x":0.71875,"y":54.646875,"count":3},{"x":0.71875,"y":56.90625,"count":2},{"x":0.71875,"y":59.165625,"count":2},{"x":0.71875,"y":61.425,"count":3},{"x":0.71875,"y":63.684375,"count":2},{"x":0.71875,"y":65.94375,"count":2},{"x":0.71875,"y":68.203125,"count":1},{"x":0.71875,"y":70.46249999999999,"count":2},{"x":0.71875,"y":74.98125,"count":1},{"x":0.75,"y":9.459375,"count":1},{"x":0.75,"y":11.71875,"count":2},{"x":0.75,"y":13.978124999999999,"count":1},{"x":0.75,"y":16.2375,"count":2},{"x":0.75,"y":18.496875,"count":2},{"x":0.75,"y":20.756249999999998,"count":3},{"x":0.75,"y":23.015625,"count":2},{"x":0.75,"y":27.534374999999997,"count":2},{"x":0.75,"y":29.79375,"count":4},{"x":0.75,"y":32.053125,"count":2},{"x":0.75,"y":34.3125,"count":2},{"x":0.75,"y":36.571875,"count":3},{"x":0.75,"y":38.83125,"count":5},{"x":0.75,"y":43.35,"count":2},{"x":0.75,"y":45.609375,"count":1},{"x":0.75,"y":50.128125000000004,"count":2},{"x":0.75,"y":52.3875,"count":2},{"x":0.75,"y":54.646875,"count":2},{"x":0.75,"y":56.90625,"count":5},{"x":0.75,"y":59.165625,"count":1},{"x":0.75,"y":61.425,"count":2},{"x":0.75,"y":63.684375,"count":3},{"x":0.75,"y":65.94375,"count":2},{"x":0.75,"y":68.203125,"count":4},{"x":0.75,"y":70.46249999999999,"count":2},{"x":0.75,"y":77.240625,"count":2},{"x":0.78125,"y":13.978124999999999,"count":3},{"x":0.78125,"y":18.496875,"count":1},{"x":0.78125,"y":23.015625,"count":1},{"x":0.78125,"y":25.275,"count":3},{"x":0.78125,"y":27.534374999999997,"count":1},{"x":0.78125,"y":29.79375,"count":1},{"x":0.78125,"y":32.053125,"count":2},{"x":0.78125,"y":34.3125,"count":3},{"x":0.78125,"y":36.571875,"count":4},{"x":0.78125,"y":38.83125,"count":1},{"x":0.78125,"y":41.090625,"count":6},{"x":0.78125,"y":45.609375,"count":1},{"x":0.78125,"y":47.86875,"count":3},{"x":0.78125,"y":50.128125000000004,"count":1},{"x":0.78125,"y":54.646875,"count":2},{"x":0.78125,"y":56.90625,"count":1},{"x":0.78125,"y":59.165625,"count":3},{"x":0.78125,"y":61.425,"count":1},{"x":0.78125,"y":63.684375,"count":7},{"x":0.78125,"y":65.94375,"count":5},{"x":0.78125,"y":68.203125,"count":1},{"x":0.78125,"y":70.46249999999999,"count":2},{"x":0.78125,"y":72.721875,"count":4},{"x":0.78125,"y":74.98125,"count":1},{"x":0.8125,"y":9.459375,"count":1},{"x":0.8125,"y":18.496875,"count":2},{"x":0.8125,"y":23.015625,"count":2},{"x":0.8125,"y":25.275,"count":3},{"x":0.8125,"y":27.534374999999997,"count":2},{"x":0.8125,"y":29.79375,"count":3},{"x":0.8125,"y":32.053125,"count":3},{"x":0.8125,"y":34.3125,"count":2},{"x":0.8125,"y":36.571875,"count":3},{"x":0.8125,"y":38.83125,"count":4},{"x":0.8125,"y":41.090625,"count":1},{"x":0.8125,"y":45.609375,"count":2},{"x":0.8125,"y":47.86875,"count":2},{"x":0.8125,"y":52.3875,"count":2},{"x":0.8125,"y":54.646875,"count":4},{"x":0.8125,"y":56.90625,"count":4},{"x":0.8125,"y":59.165625,"count":2},{"x":0.8125,"y":61.425,"count":3},{"x":0.8125,"y":63.684375,"count":4},{"x":0.8125,"y":65.94375,"count":1},{"x":0.8125,"y":68.203125,"count":3},{"x":0.8125,"y":70.46249999999999,"count":2},{"x":0.8125,"y":72.721875,"count":5},{"x":0.8125,"y":74.98125,"count":1},{"x":0.8125,"y":77.240625,"count":1},{"x":0.84375,"y":13.978124999999999,"count":2},{"x":0.84375,"y":20.756249999999998,"count":1},{"x":0.84375,"y":32.053125,"count":2},{"x":0.84375,"y":34.3125,"count":1},{"x":0.84375,"y":36.571875,"count":1},{"x":0.84375,"y":38.83125,"count":2},{"x":0.84375,"y":41.090625,"count":1},{"x":0.84375,"y":43.35,"count":1},{"x":0.84375,"y":45.609375,"count":1},{"x":0.84375,"y":47.86875,"count":1},{"x":0.84375,"y":50.128125000000004,"count":2},{"x":0.84375,"y":52.3875,"count":2},{"x":0.84375,"y":56.90625,"count":3},{"x":0.84375,"y":59.165625,"count":2},{"x":0.84375,"y":61.425,"count":3},{"x":0.84375,"y":63.684375,"count":2},{"x":0.84375,"y":65.94375,"count":1},{"x":0.84375,"y":68.203125,"count":1},{"x":0.84375,"y":70.46249999999999,"count":3},{"x":0.84375,"y":72.721875,"count":2},{"x":0.84375,"y":77.240625,"count":3},{"x":0.875,"y":9.459375,"count":1},{"x":0.875,"y":11.71875,"count":1},{"x":0.875,"y":18.496875,"count":2},{"x":0.875,"y":20.756249999999998,"count":1},{"x":0.875,"y":27.534374999999997,"count":1},{"x":0.875,"y":34.3125,"count":1},{"x":0.875,"y":36.571875,"count":1},{"x":0.875,"y":52.3875,"count":1},{"x":0.875,"y":56.90625,"count":1},{"x":0.875,"y":59.165625,"count":2},{"x":0.875,"y":61.425,"count":1},{"x":0.875,"y":63.684375,"count":1},{"x":0.875,"y":65.94375,"count":2},{"x":0.875,"y":74.98125,"count":1},{"x":0.90625,"y":11.71875,"count":1},{"x":0.90625,"y":16.2375,"count":2},{"x":0.90625,"y":38.83125,"count":1},{"x":0.90625,"y":41.090625,"count":1},{"x":0.90625,"y":56.90625,"count":1},{"x":0.90625,"y":68.203125,"count":1},{"x":0.9375,"y":20.756249999999998,"count":1},{"x":0.9375,"y":23.015625,"count":1},{"x":0.9375,"y":45.609375,"count":3},{"x":0.9375,"y":50.128125000000004,"count":1},{"x":0.9375,"y":70.46249999999999,"count":1},{"x":0.96875,"y":9.459375,"count":2},{"x":0.96875,"y":11.71875,"count":2},{"x":0.96875,"y":13.978124999999999,"count":2},{"x":0.96875,"y":16.2375,"count":3},{"x":0.96875,"y":18.496875,"count":3},{"x":0.96875,"y":20.756249999999998,"count":1},{"x":0.96875,"y":23.015625,"count":1},{"x":0.96875,"y":29.79375,"count":1},{"x":0.96875,"y":47.86875,"count":1}],"maxCount":7},"steals per game":{"x":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"y":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"bins":[{"x":0,"y":0,"count":9},{"x":0,"y":0.155,"count":1},{"x":0,"y":0.23249999999999998,"count":3},{"x":0,"y":0.3875,"count":1},{"x":0,"y":0.46499999999999997,"count":3},{"x":0,"y":1.9375,"count":1},{"x":0.15625,"y":0,"count":1},{"x":0.1875,"y":0.155,"count":1},{"x":0.25,"y":0.46499999999999997,"count":1},{"x":0.25,"y":0.775,"count":1},{"x":0.3125,"y":0.0775,"count":1},{"x":0.3125,"y":0.155,"count":1},{"x":0.3125,"y":0.5425,"count":1},{"x":0.34375,"y":0.6975,"count":1},{"x":0.375,"y":0.0775,"count":2},{"x":0.375,"y":0.9299999999999999,"count":1},{"x":0.40625,"y":0.23249999999999998,"count":1},{"x":0.40625,"y":0.9299999999999999,"count":1},{"x":0.40625,"y":1.24,"count":2},{"x":0.4375,"y":0.23249999999999998,"count":1},{"x":0.4375,"y":1.24,"count":1},{"x":0.46875,"y":0.155,"count":1},{"x":0.46875,"y":0.23249999999999998,"count":1},{"x":0.46875,"y":0.775,"count":1},{"x":0.5,"y":0,"count":4},{"x":0.5,"y":0.0775,"count":1},{"x":0.5,"y":0.155,"count":3},{"x":0.5,"y":0.23249999999999998,"count":3},{"x":0.5,"y":0.31,"count":1},{"x":0.5,"y":0.3875,"count":1},{"x":0.5,"y":0.46499999999999997,"count":3},{"x":0.5,"y":0.5425,"count":1},{"x":0.5,"y":0.62,"count":2},{"x":0.5,"y":0.8525,"count":2},{"x":0.53125,"y":0,"count":1},{"x":0.53125,"y":0.0775,"count":1},{"x":0.53125,"y":0.155,"count":2},{"x":0.53125,"y":0.23249999999999998,"count":1},{"x":0.53125,"y":0.3875,"count":2},{"x":0.53125,"y":0.46499999999999997,"count":1},{"x":0.53125,"y":0.62,"count":1},{"x":0.53125,"y":0.775,"count":1},{"x":0.53125,"y":1.3175,"count":1},{"x":0.5625,"y":0.0775,"count":1},{"x":0.5625,"y":0.155,"count":1},{"x":0.5625,"y":0.23249999999999998,"count":4},{"x":0.5625,"y":0.31,"count":4},{"x":0.5625,"y":0.3875,"count":1},{"x":0.5625,"y":0.46499999999999997,"count":3},{"x":0.5625,"y":0.6975,"count":3},{"x":0.5625,"y":0.775,"count":1},{"x":0.5625,"y":0.9299999999999999,"count":1},{"x":0.5625,"y":1.1625,"count":1},{"x":0.59375,"y":0.0775,"count":2},{"x":0.59375,"y":0.155,"count":1},{"x":0.59375,"y":0.23249999999999998,"count":1},{"x":0.59375,"y":0.31,"count":1},{"x":0.59375,"y":0.46499999999999997,"count":1},{"x":0.59375,"y":0.5425,"count":2},{"x":0.59375,"y":0.62,"count":2},{"x":0.59375,"y":0.6975,"count":1},{"x":0.59375,"y":0.8525,"count":1},{"x":0.59375,"y":1.1625,"count":1},{"x":0.625,"y":0.0775,"count":3},{"x":0.625,"y":0.155,"count":1},{"x":0.625,"y":0.23249999999999998,"count":1},{"x":0.625,"y":0.31,"count":4},{"x":0.625,"y":0.3875,"count":2},{"x":0.625,"y":0.46499999999999997,"count":3},{"x":0.625,"y":0.5425,"count":3},{"x":0.625,"y":0.62,"count":3},{"x":0.625,"y":0.6975,"count":4},{"x":0.625,"y":0.8525,"count":3},{"x":0.625,"y":1.0075,"count":1},{"x":0.625,"y":1.3175,"count":2},{"x":0.625,"y":1.4725,"count":1},{"x":0.625,"y":1.6275,"count":1},{"x":0.65625,"y":0.0775,"count":2},{"x":0.65625,"y":0.155,"count":3},{"x":0.65625,"y":0.31,"count":6},{"x":0.65625,"y":0.3875,"count":4},{"x":0.65625,"y":0.46499999999999997,"count":1},{"x":0.65625,"y":0.5425,"count":2},{"x":0.65625,"y":0.62,"count":4},{"x":0.65625,"y":0.775,"count":1},{"x":0.65625,"y":0.8525,"count":1},{"x":0.65625,"y":0.9299999999999999,"count":1},{"x":0.65625,"y":1.0075,"count":4},{"x":0.65625,"y":1.085,"count":1},{"x":0.65625,"y":1.1625,"count":1},{"x":0.6875,"y":0,"count":2},{"x":0.6875,"y":0.0775,"count":1},{"x":0.6875,"y":0.155,"count":3},{"x":0.6875,"y":0.31,"count":2},{"x":0.6875,"y":0.3875,"count":4},{"x":0.6875,"y":0.46499999999999997,"count":5},{"x":0.6875,"y":0.5425,"count":2},{"x":0.6875,"y":0.62,"count":6},{"x":0.6875,"y":0.775,"count":2},{"x":0.6875,"y":0.8525,"count":1},{"x":0.6875,"y":0.9299999999999999,"count":1},{"x":0.6875,"y":1.085,"count":1},{"x":0.6875,"y":1.7825,"count":2},{"x":0.71875,"y":0.31,"count":7},{"x":0.71875,"y":0.3875,"count":2},{"x":0.71875,"y":0.46499999999999997,"count":5},{"x":0.71875,"y":0.5425,"count":4},{"x":0.71875,"y":0.62,"count":1},{"x":0.71875,"y":0.6975,"count":3},{"x":0.71875,"y":0.775,"count":1},{"x":0.71875,"y":0.8525,"count":3},{"x":0.71875,"y":0.9299999999999999,"count":2},{"x":0.71875,"y":1.0075,"count":1},{"x":0.71875,"y":1.1625,"count":2},{"x":0.71875,"y":1.24,"count":2},{"x":0.71875,"y":1.395,"count":1},{"x":0.71875,"y":1.4725,"count":1},{"x":0.71875,"y":1.6275,"count":1},{"x":0.71875,"y":1.705,"count":1},{"x":0.75,"y":0,"count":2},{"x":0.75,"y":0.0775,"count":2},{"x":0.75,"y":0.155,"count":3},{"x":0.75,"y":0.23249999999999998,"count":7},{"x":0.75,"y":0.31,"count":8},{"x":0.75,"y":0.3875,"count":5},{"x":0.75,"y":0.46499999999999997,"count":4},{"x":0.75,"y":0.5425,"count":1},{"x":0.75,"y":0.62,"count":3},{"x":0.75,"y":0.6975,"count":4},{"x":0.75,"y":0.775,"count":1},{"x":0.75,"y":0.8525,"count":3},{"x":0.75,"y":0.9299999999999999,"count":4},{"x":0.75,"y":1.0075,"count":1},{"x":0.75,"y":1.085,"count":1},{"x":0.75,"y":1.1625,"count":1},{"x":0.75,"y":1.24,"count":2},{"x":0.75,"y":1.3175,"count":2},{"x":0.75,"y":1.4725,"count":1},{"x":0.75,"y":1.55,"count":4},{"x":0.75,"y":1.6275,"count":1},{"x":0.75,"y":1.8599999999999999,"count":1},{"x":0.78125,"y":0.0775,"count":2},{"x":0.78125,"y":0.155,"count":2},{"x":0.78125,"y":0.23249999999999998,"count":1},{"x":0.78125,"y":0.31,"count":6},{"x":0.78125,"y":0.46499999999999997,"count":9},{"x":0.78125,"y":0.5425,"count":4},{"x":0.78125,"y":0.62,"count":4},{"x":0.78125,"y":0.6975,"count":5},{"x":0.78125,"y":0.775,"count":2},{"x":0.78125,"y":0.8525,"count":2},{"x":0.78125,"y":0.9299999999999999,"count":7},{"x":0.78125,"y":1.0075,"count":2},{"x":0.78125,"y":1.085,"count":1},{"x":0.78125,"y":1.1625,"count":3},{"x":0.78125,"y":1.3175,"count":1},{"x":0.78125,"y":1.395,"count":1},{"x":0.78125,"y":1.55,"count":1},{"x":0.78125,"y":1.6275,"count":1},{"x":0.78125,"y":1.705,"count":2},{"x":0.78125,"y":1.7825,"count":1},{"x":0.78125,"y":2.2475,"count":1},{"x":0.8125,"y":0.0775,"count":3},{"x":0.8125,"y":0.155,"count":3},{"x":0.8125,"y":0.23249999999999998,"count":1},{"x":0.8125,"y":0.31,"count":4},{"x":0.8125,"y":0.3875,"count":6},{"x":0.8125,"y":0.46499999999999997,"count":8},{"x":0.8125,"y":0.5425,"count":5},{"x":0.8125,"y":0.62,"count":4},{"x":0.8125,"y":0.6975,"count":6},{"x":0.8125,"y":0.775,"count":4},{"x":0.8125,"y":0.8525,"count":1},{"x":0.8125,"y":0.9299999999999999,"count":3},{"x":0.8125,"y":1.0075,"count":3},{"x":0.8125,"y":1.085,"count":3},{"x":0.8125,"y":1.1625,"count":3},{"x":0.8125,"y":1.3175,"count":1},{"x":0.8125,"y":1.395,"count":1},{"x":0.8125,"y":1.4725,"count":2},{"x":0.8125,"y":1.8599999999999999,"count":1},{"x":0.84375,"y":0,"count":1},{"x":0.84375,"y":0.155,"count":2},{"x":0.84375,"y":0.23249999999999998,"count":1},{"x":0.84375,"y":0.3875,"count":2},{"x":0.84375,"y":0.46499999999999997,"count":2},{"x":0.84375,"y":0.5425,"count":1},{"x":0.84375,"y":0.62,"count":3},{"x":0.84375,"y":0.6975,"count":3},{"x":0.84375,"y":0.775,"count":6},{"x":0.84375,"y":0.8525,"count":3},{"x":0.84375,"y":1.0075,"count":2},{"x":0.84375,"y":1.085,"count":2},{"x":0.84375,"y":1.1625,"count":1},{"x":0.84375,"y":1.24,"count":3},{"x":0.84375,"y":1.395,"count":1},{"x":0.84375,"y":1.4725,"count":1},{"x":0.84375,"y":1.55,"count":1},{"x":0.84375,"y":1.8599999999999999,"count":1},{"x":0.84375,"y":2.4025,"count":1},{"x":0.875,"y":0,"count":2},{"x":0.875,"y":0.0775,"count":1},{"x":0.875,"y":0.31,"count":2},{"x":0.875,"y":0.3875,"count":1},{"x":0.875,"y":0.5425,"count":2},{"x":0.875,"y":0.6975,"count":1},{"x":0.875,"y":0.775,"count":2},{"x":0.875,"y":0.8525,"count":2},{"x":0.875,"y":0.9299999999999999,"count":2},{"x":0.875,"y":1.0075,"count":1},{"x":0.875,"y":1.6275,"count":1},{"x":0.90625,"y":0.0775,"count":1},{"x":0.90625,"y":0.31,"count":2},{"x":0.90625,"y":0.46499999999999997,"count":1},{"x":0.90625,"y":0.775,"count":1},{"x":0.90625,"y":0.9299999999999999,"count":1},{"x":0.90625,"y":1.0075,"count":1},{"x":0.9375,"y":0.31,"count":3},{"x":0.9375,"y":0.3875,"count":1},{"x":0.9375,"y":0.46499999999999997,"count":1},{"x":0.9375,"y":0.5425,"count":1},{"x":0.9375,"y":0.775,"count":1},{"x":0.96875,"y":0,"count":4},{"x":0.96875,"y":0.0775,"count":3},{"x":0.96875,"y":0.155,"count":5},{"x":0.96875,"y":0.23249999999999998,"count":1},{"x":0.96875,"y":0.31,"count":1},{"x":0.96875,"y":0.5425,"count":1},{"x":0.96875,"y":0.62,"count":1}],"maxCount":9},"percentage of team assists":{"x":{"name":"free throw percent","extent":[0,1],"delta":0.03125},"y":{"name":"percentage of team assists","extent":[0,49.2],"delta":1.5375},"bins":[{"x":0,"y":0,"count":7},{"x":0,"y":3.075,"count":2},{"x":0,"y":4.612500000000001,"count":1},{"x":0,"y":6.15,"count":1},{"x":0,"y":7.6875,"count":1},{"x":0,"y":10.762500000000001,"count":3},{"x":0,"y":13.8375,"count":1},{"x":0,"y":29.212500000000002,"count":1},{"x":0,"y":33.825,"count":1},{"x":0.15625,"y":0,"count":1},{"x":0.1875,"y":0,"count":1},{"x":0.25,"y":3.075,"count":1},{"x":0.25,"y":4.612500000000001,"count":1},{"x":0.3125,"y":1.5375,"count":1},{"x":0.3125,"y":4.612500000000001,"count":1},{"x":0.3125,"y":16.9125,"count":1},{"x":0.34375,"y":9.225000000000001,"count":1},{"x":0.375,"y":0,"count":1},{"x":0.375,"y":9.225000000000001,"count":1},{"x":0.375,"y":12.3,"count":1},{"x":0.40625,"y":1.5375,"count":1},{"x":0.40625,"y":3.075,"count":1},{"x":0.40625,"y":4.612500000000001,"count":2},{"x":0.4375,"y":6.15,"count":1},{"x":0.4375,"y":13.8375,"count":1},{"x":0.46875,"y":1.5375,"count":2},{"x":0.46875,"y":4.612500000000001,"count":1},{"x":0.5,"y":0,"count":2},{"x":0.5,"y":3.075,"count":4},{"x":0.5,"y":4.612500000000001,"count":1},{"x":0.5,"y":6.15,"count":2},{"x":0.5,"y":7.6875,"count":2},{"x":0.5,"y":9.225000000000001,"count":1},{"x":0.5,"y":10.762500000000001,"count":4},{"x":0.5,"y":12.3,"count":2},{"x":0.5,"y":15.375,"count":2},{"x":0.5,"y":44.587500000000006,"count":1},{"x":0.53125,"y":0,"count":1},{"x":0.53125,"y":1.5375,"count":2},{"x":0.53125,"y":3.075,"count":2},{"x":0.53125,"y":4.612500000000001,"count":2},{"x":0.53125,"y":7.6875,"count":2},{"x":0.53125,"y":9.225000000000001,"count":1},{"x":0.53125,"y":13.8375,"count":1},{"x":0.5625,"y":0,"count":1},{"x":0.5625,"y":3.075,"count":3},{"x":0.5625,"y":4.612500000000001,"count":6},{"x":0.5625,"y":6.15,"count":2},{"x":0.5625,"y":7.6875,"count":3},{"x":0.5625,"y":10.762500000000001,"count":1},{"x":0.5625,"y":15.375,"count":1},{"x":0.5625,"y":21.525000000000002,"count":2},{"x":0.5625,"y":26.137500000000003,"count":1},{"x":0.59375,"y":1.5375,"count":1},{"x":0.59375,"y":3.075,"count":1},{"x":0.59375,"y":4.612500000000001,"count":3},{"x":0.59375,"y":6.15,"count":3},{"x":0.59375,"y":7.6875,"count":2},{"x":0.59375,"y":9.225000000000001,"count":1},{"x":0.59375,"y":19.9875,"count":1},{"x":0.59375,"y":26.137500000000003,"count":1},{"x":0.625,"y":1.5375,"count":2},{"x":0.625,"y":3.075,"count":2},{"x":0.625,"y":4.612500000000001,"count":6},{"x":0.625,"y":6.15,"count":3},{"x":0.625,"y":7.6875,"count":6},{"x":0.625,"y":9.225000000000001,"count":3},{"x":0.625,"y":10.762500000000001,"count":2},{"x":0.625,"y":13.8375,"count":1},{"x":0.625,"y":16.9125,"count":2},{"x":0.625,"y":18.450000000000003,"count":1},{"x":0.625,"y":19.9875,"count":1},{"x":0.625,"y":21.525000000000002,"count":1},{"x":0.625,"y":30.75,"count":1},{"x":0.625,"y":47.6625,"count":1},{"x":0.65625,"y":1.5375,"count":1},{"x":0.65625,"y":3.075,"count":3},{"x":0.65625,"y":4.612500000000001,"count":5},{"x":0.65625,"y":6.15,"count":2},{"x":0.65625,"y":7.6875,"count":5},{"x":0.65625,"y":9.225000000000001,"count":2},{"x":0.65625,"y":10.762500000000001,"count":4},{"x":0.65625,"y":12.3,"count":1},{"x":0.65625,"y":13.8375,"count":2},{"x":0.65625,"y":15.375,"count":1},{"x":0.65625,"y":18.450000000000003,"count":1},{"x":0.65625,"y":21.525000000000002,"count":1},{"x":0.65625,"y":24.6,"count":1},{"x":0.65625,"y":26.137500000000003,"count":1},{"x":0.65625,"y":30.75,"count":1},{"x":0.6875,"y":1.5375,"count":1},{"x":0.6875,"y":3.075,"count":1},{"x":0.6875,"y":4.612500000000001,"count":4},{"x":0.6875,"y":6.15,"count":5},{"x":0.6875,"y":7.6875,"count":3},{"x":0.6875,"y":9.225000000000001,"count":2},{"x":0.6875,"y":10.762500000000001,"count":3},{"x":0.6875,"y":12.3,"count":2},{"x":0.6875,"y":13.8375,"count":2},{"x":0.6875,"y":15.375,"count":1},{"x":0.6875,"y":16.9125,"count":1},{"x":0.6875,"y":18.450000000000003,"count":2},{"x":0.6875,"y":21.525000000000002,"count":1},{"x":0.6875,"y":24.6,"count":2},{"x":0.6875,"y":26.137500000000003,"count":1},{"x":0.6875,"y":29.212500000000002,"count":1},{"x":0.71875,"y":3.075,"count":4},{"x":0.71875,"y":4.612500000000001,"count":1},{"x":0.71875,"y":6.15,"count":1},{"x":0.71875,"y":7.6875,"count":2},{"x":0.71875,"y":9.225000000000001,"count":8},{"x":0.71875,"y":10.762500000000001,"count":1},{"x":0.71875,"y":12.3,"count":2},{"x":0.71875,"y":13.8375,"count":1},{"x":0.71875,"y":15.375,"count":3},{"x":0.71875,"y":16.9125,"count":3},{"x":0.71875,"y":18.450000000000003,"count":1},{"x":0.71875,"y":19.9875,"count":2},{"x":0.71875,"y":21.525000000000002,"count":1},{"x":0.71875,"y":23.0625,"count":1},{"x":0.71875,"y":24.6,"count":2},{"x":0.71875,"y":26.137500000000003,"count":1},{"x":0.71875,"y":27.675,"count":1},{"x":0.71875,"y":33.825,"count":1},{"x":0.71875,"y":41.5125,"count":1},{"x":0.75,"y":0,"count":1},{"x":0.75,"y":3.075,"count":4},{"x":0.75,"y":4.612500000000001,"count":6},{"x":0.75,"y":6.15,"count":8},{"x":0.75,"y":7.6875,"count":11},{"x":0.75,"y":9.225000000000001,"count":6},{"x":0.75,"y":10.762500000000001,"count":10},{"x":0.75,"y":13.8375,"count":3},{"x":0.75,"y":16.9125,"count":3},{"x":0.75,"y":18.450000000000003,"count":2},{"x":0.75,"y":21.525000000000002,"count":2},{"x":0.75,"y":26.137500000000003,"count":1},{"x":0.75,"y":27.675,"count":1},{"x":0.75,"y":29.212500000000002,"count":1},{"x":0.75,"y":30.75,"count":1},{"x":0.75,"y":33.825,"count":1},{"x":0.78125,"y":1.5375,"count":1},{"x":0.78125,"y":3.075,"count":2},{"x":0.78125,"y":4.612500000000001,"count":4},{"x":0.78125,"y":6.15,"count":4},{"x":0.78125,"y":7.6875,"count":11},{"x":0.78125,"y":9.225000000000001,"count":3},{"x":0.78125,"y":10.762500000000001,"count":3},{"x":0.78125,"y":12.3,"count":5},{"x":0.78125,"y":13.8375,"count":1},{"x":0.78125,"y":15.375,"count":4},{"x":0.78125,"y":16.9125,"count":2},{"x":0.78125,"y":19.9875,"count":2},{"x":0.78125,"y":21.525000000000002,"count":2},{"x":0.78125,"y":23.0625,"count":1},{"x":0.78125,"y":24.6,"count":1},{"x":0.78125,"y":26.137500000000003,"count":2},{"x":0.78125,"y":30.75,"count":2},{"x":0.78125,"y":32.2875,"count":4},{"x":0.78125,"y":36.900000000000006,"count":2},{"x":0.78125,"y":38.4375,"count":1},{"x":0.78125,"y":39.975,"count":1},{"x":0.8125,"y":3.075,"count":3},{"x":0.8125,"y":4.612500000000001,"count":6},{"x":0.8125,"y":6.15,"count":8},{"x":0.8125,"y":7.6875,"count":4},{"x":0.8125,"y":9.225000000000001,"count":1},{"x":0.8125,"y":10.762500000000001,"count":5},{"x":0.8125,"y":12.3,"count":5},{"x":0.8125,"y":13.8375,"count":4},{"x":0.8125,"y":15.375,"count":3},{"x":0.8125,"y":16.9125,"count":5},{"x":0.8125,"y":18.450000000000003,"count":4},{"x":0.8125,"y":19.9875,"count":2},{"x":0.8125,"y":21.525000000000002,"count":4},{"x":0.8125,"y":23.0625,"count":1},{"x":0.8125,"y":24.6,"count":1},{"x":0.8125,"y":29.212500000000002,"count":3},{"x":0.8125,"y":33.825,"count":2},{"x":0.8125,"y":39.975,"count":1},{"x":0.84375,"y":4.612500000000001,"count":1},{"x":0.84375,"y":6.15,"count":4},{"x":0.84375,"y":7.6875,"count":6},{"x":0.84375,"y":10.762500000000001,"count":1},{"x":0.84375,"y":12.3,"count":2},{"x":0.84375,"y":13.8375,"count":1},{"x":0.84375,"y":15.375,"count":2},{"x":0.84375,"y":16.9125,"count":4},{"x":0.84375,"y":21.525000000000002,"count":1},{"x":0.84375,"y":23.0625,"count":1},{"x":0.84375,"y":24.6,"count":1},{"x":0.84375,"y":26.137500000000003,"count":3},{"x":0.84375,"y":27.675,"count":2},{"x":0.84375,"y":29.212500000000002,"count":1},{"x":0.84375,"y":30.75,"count":2},{"x":0.84375,"y":32.2875,"count":1},{"x":0.84375,"y":33.825,"count":3},{"x":0.84375,"y":47.6625,"count":1},{"x":0.875,"y":0,"count":1},{"x":0.875,"y":4.612500000000001,"count":1},{"x":0.875,"y":6.15,"count":1},{"x":0.875,"y":7.6875,"count":1},{"x":0.875,"y":9.225000000000001,"count":2},{"x":0.875,"y":10.762500000000001,"count":2},{"x":0.875,"y":12.3,"count":1},{"x":0.875,"y":13.8375,"count":1},{"x":0.875,"y":15.375,"count":1},{"x":0.875,"y":23.0625,"count":2},{"x":0.875,"y":27.675,"count":1},{"x":0.875,"y":29.212500000000002,"count":2},{"x":0.875,"y":39.975,"count":1},{"x":0.90625,"y":6.15,"count":1},{"x":0.90625,"y":9.225000000000001,"count":1},{"x":0.90625,"y":12.3,"count":3},{"x":0.90625,"y":24.6,"count":1},{"x":0.90625,"y":39.975,"count":1},{"x":0.9375,"y":3.075,"count":2},{"x":0.9375,"y":4.612500000000001,"count":1},{"x":0.9375,"y":7.6875,"count":1},{"x":0.9375,"y":12.3,"count":1},{"x":0.9375,"y":21.525000000000002,"count":1},{"x":0.9375,"y":32.2875,"count":1},{"x":0.96875,"y":0,"count":2},{"x":0.96875,"y":3.075,"count":2},{"x":0.96875,"y":4.612500000000001,"count":2},{"x":0.96875,"y":6.15,"count":1},{"x":0.96875,"y":7.6875,"count":1},{"x":0.96875,"y":9.225000000000001,"count":1},{"x":0.96875,"y":10.762500000000001,"count":2},{"x":0.96875,"y":12.3,"count":1},{"x":0.96875,"y":13.8375,"count":1},{"x":0.96875,"y":18.450000000000003,"count":1},{"x":0.96875,"y":21.525000000000002,"count":1},{"x":0.96875,"y":26.137500000000003,"count":1}],"maxCount":11}},"true shooting percentage":{"steals per game":{"x":{"name":"true shooting percentage","extent":[0,0.8200000000000001],"delta":0.025625000000000002},"y":{"name":"steals per game","extent":[0,2.48],"delta":0.0775},"bins":[{"x":0,"y":0.23249999999999998,"count":1},{"x":0,"y":0.46499999999999997,"count":2},{"x":0.179375,"y":0,"count":1},{"x":0.20500000000000002,"y":0.23249999999999998,"count":2},{"x":0.23062500000000002,"y":0,"count":1},{"x":0.23062500000000002,"y":0.155,"count":1},{"x":0.25625000000000003,"y":0,"count":1},{"x":0.25625000000000003,"y":0.62,"count":1},{"x":0.28187500000000004,"y":0,"count":3},{"x":0.3075,"y":0,"count":3},{"x":0.3075,"y":0.0775,"count":1},{"x":0.3075,"y":0.155,"count":1},{"x":0.333125,"y":0.155,"count":1},{"x":0.333125,"y":0.46499999999999997,"count":1},{"x":0.35875,"y":0,"count":2},{"x":0.35875,"y":0.0775,"count":2},{"x":0.35875,"y":0.155,"count":1},{"x":0.35875,"y":0.3875,"count":1},{"x":0.35875,"y":0.775,"count":1},{"x":0.384375,"y":0.0775,"count":2},{"x":0.384375,"y":0.155,"count":2},{"x":0.384375,"y":0.31,"count":1},{"x":0.384375,"y":0.3875,"count":1},{"x":0.384375,"y":0.5425,"count":1},{"x":0.384375,"y":0.8525,"count":1},{"x":0.41000000000000003,"y":0,"count":1},{"x":0.41000000000000003,"y":0.0775,"count":1},{"x":0.41000000000000003,"y":0.23249999999999998,"count":1},{"x":0.41000000000000003,"y":0.31,"count":1},{"x":0.41000000000000003,"y":0.3875,"count":2},{"x":0.41000000000000003,"y":0.46499999999999997,"count":3},{"x":0.41000000000000003,"y":0.5425,"count":3},{"x":0.43562500000000004,"y":0,"count":1},{"x":0.43562500000000004,"y":0.0775,"count":3},{"x":0.43562500000000004,"y":0.155,"count":5},{"x":0.43562500000000004,"y":0.23249999999999998,"count":5},{"x":0.43562500000000004,"y":0.31,"count":5},{"x":0.43562500000000004,"y":0.3875,"count":2},{"x":0.43562500000000004,"y":0.46499999999999997,"count":7},{"x":0.43562500000000004,"y":0.5425,"count":2},{"x":0.43562500000000004,"y":0.62,"count":3},{"x":0.43562500000000004,"y":0.6975,"count":2},{"x":0.43562500000000004,"y":1.3175,"count":1},{"x":0.46125000000000005,"y":0,"count":1},{"x":0.46125000000000005,"y":0.0775,"count":4},{"x":0.46125000000000005,"y":0.155,"count":2},{"x":0.46125000000000005,"y":0.23249999999999998,"count":1},{"x":0.46125000000000005,"y":0.31,"count":6},{"x":0.46125000000000005,"y":0.3875,"count":6},{"x":0.46125000000000005,"y":0.46499999999999997,"count":2},{"x":0.46125000000000005,"y":0.5425,"count":3},{"x":0.46125000000000005,"y":0.62,"count":5},{"x":0.46125000000000005,"y":0.6975,"count":1},{"x":0.46125000000000005,"y":0.775,"count":3},{"x":0.46125000000000005,"y":0.9299999999999999,"count":1},{"x":0.46125000000000005,"y":1.0075,"count":1},{"x":0.46125000000000005,"y":1.1625,"count":1},{"x":0.46125000000000005,"y":1.24,"count":2},{"x":0.46125000000000005,"y":1.3175,"count":1},{"x":0.46125000000000005,"y":1.55,"count":1},{"x":0.46125000000000005,"y":1.7825,"count":1},{"x":0.48687500000000006,"y":0,"count":2},{"x":0.48687500000000006,"y":0.0775,"count":3},{"x":0.48687500000000006,"y":0.155,"count":8},{"x":0.48687500000000006,"y":0.23249999999999998,"count":3},{"x":0.48687500000000006,"y":0.31,"count":19},{"x":0.48687500000000006,"y":0.3875,"count":4},{"x":0.48687500000000006,"y":0.46499999999999997,"count":5},{"x":0.48687500000000006,"y":0.5425,"count":3},{"x":0.48687500000000006,"y":0.62,"count":5},{"x":0.48687500000000006,"y":0.6975,"count":4},{"x":0.48687500000000006,"y":0.775,"count":4},{"x":0.48687500000000006,"y":0.8525,"count":3},{"x":0.48687500000000006,"y":0.9299999999999999,"count":6},{"x":0.48687500000000006,"y":1.0075,"count":3},{"x":0.48687500000000006,"y":1.085,"count":1},{"x":0.48687500000000006,"y":1.1625,"count":4},{"x":0.48687500000000006,"y":1.24,"count":1},{"x":0.48687500000000006,"y":1.6275,"count":1},{"x":0.48687500000000006,"y":1.9375,"count":1},{"x":0.48687500000000006,"y":2.2475,"count":1},{"x":0.5125000000000001,"y":0,"count":4},{"x":0.5125000000000001,"y":0.0775,"count":3},{"x":0.5125000000000001,"y":0.155,"count":2},{"x":0.5125000000000001,"y":0.23249999999999998,"count":5},{"x":0.5125000000000001,"y":0.31,"count":6},{"x":0.5125000000000001,"y":0.3875,"count":5},{"x":0.5125000000000001,"y":0.46499999999999997,"count":11},{"x":0.5125000000000001,"y":0.5425,"count":4},{"x":0.5125000000000001,"y":0.62,"count":10},{"x":0.5125000000000001,"y":0.6975,"count":9},{"x":0.5125000000000001,"y":0.775,"count":2},{"x":0.5125000000000001,"y":0.8525,"count":6},{"x":0.5125000000000001,"y":0.9299999999999999,"count":6},{"x":0.5125000000000001,"y":1.0075,"count":6},{"x":0.5125000000000001,"y":1.085,"count":3},{"x":0.5125000000000001,"y":1.1625,"count":3},{"x":0.5125000000000001,"y":1.24,"count":2},{"x":0.5125000000000001,"y":1.395,"count":1},{"x":0.5125000000000001,"y":1.4725,"count":1},{"x":0.5125000000000001,"y":1.55,"count":1},{"x":0.5125000000000001,"y":1.6275,"count":1},{"x":0.5125000000000001,"y":1.705,"count":1},{"x":0.5125000000000001,"y":1.7825,"count":1},{"x":0.5125000000000001,"y":1.8599999999999999,"count":1},{"x":0.5381250000000001,"y":0,"count":1},{"x":0.5381250000000001,"y":0.155,"count":5},{"x":0.5381250000000001,"y":0.23249999999999998,"count":3},{"x":0.5381250000000001,"y":0.31,"count":4},{"x":0.5381250000000001,"y":0.3875,"count":5},{"x":0.5381250000000001,"y":0.46499999999999997,"count":9},{"x":0.5381250000000001,"y":0.5425,"count":8},{"x":0.5381250000000001,"y":0.62,"count":3},{"x":0.5381250000000001,"y":0.6975,"count":6},{"x":0.5381250000000001,"y":0.775,"count":6},{"x":0.5381250000000001,"y":0.8525,"count":7},{"x":0.5381250000000001,"y":0.9299999999999999,"count":5},{"x":0.5381250000000001,"y":1.0075,"count":3},{"x":0.5381250000000001,"y":1.085,"count":2},{"x":0.5381250000000001,"y":1.1625,"count":3},{"x":0.5381250000000001,"y":1.24,"count":2},{"x":0.5381250000000001,"y":1.3175,"count":3},{"x":0.5381250000000001,"y":1.4725,"count":2},{"x":0.5381250000000001,"y":1.55,"count":1},{"x":0.5381250000000001,"y":1.705,"count":1},{"x":0.5381250000000001,"y":1.7825,"count":1},{"x":0.5381250000000001,"y":1.8599999999999999,"count":2},{"x":0.5637500000000001,"y":0.0775,"count":1},{"x":0.5637500000000001,"y":0.23249999999999998,"count":5},{"x":0.5637500000000001,"y":0.31,"count":5},{"x":0.5637500000000001,"y":0.3875,"count":3},{"x":0.5637500000000001,"y":0.46499999999999997,"count":8},{"x":0.5637500000000001,"y":0.5425,"count":6},{"x":0.5637500000000001,"y":0.62,"count":5},{"x":0.5637500000000001,"y":0.6975,"count":4},{"x":0.5637500000000001,"y":0.775,"count":6},{"x":0.5637500000000001,"y":0.8525,"count":4},{"x":0.5637500000000001,"y":0.9299999999999999,"count":4},{"x":0.5637500000000001,"y":1.085,"count":2},{"x":0.5637500000000001,"y":1.1625,"count":2},{"x":0.5637500000000001,"y":1.24,"count":1},{"x":0.5637500000000001,"y":1.3175,"count":1},{"x":0.5637500000000001,"y":1.395,"count":2},{"x":0.5637500000000001,"y":1.4725,"count":3},{"x":0.5637500000000001,"y":1.55,"count":1},{"x":0.5637500000000001,"y":1.6275,"count":1},{"x":0.5637500000000001,"y":2.4025,"count":1},{"x":0.5893750000000001,"y":0,"count":2},{"x":0.5893750000000001,"y":0.0775,"count":2},{"x":0.5893750000000001,"y":0.155,"count":2},{"x":0.5893750000000001,"y":0.23249999999999998,"count":1},{"x":0.5893750000000001,"y":0.31,"count":3},{"x":0.5893750000000001,"y":0.3875,"count":2},{"x":0.5893750000000001,"y":0.46499999999999997,"count":2},{"x":0.5893750000000001,"y":0.62,"count":1},{"x":0.5893750000000001,"y":0.6975,"count":4},{"x":0.5893750000000001,"y":0.775,"count":3},{"x":0.5893750000000001,"y":0.8525,"count":1},{"x":0.5893750000000001,"y":1.0075,"count":2},{"x":0.5893750000000001,"y":1.085,"count":1},{"x":0.5893750000000001,"y":1.24,"count":1},{"x":0.5893750000000001,"y":1.3175,"count":1},{"x":0.5893750000000001,"y":1.395,"count":1},{"x":0.5893750000000001,"y":1.6275,"count":2},{"x":0.5893750000000001,"y":1.705,"count":1},{"x":0.615,"y":0,"count":1},{"x":0.615,"y":0.0775,"count":1},{"x":0.615,"y":0.155,"count":1},{"x":0.615,"y":0.31,"count":1},{"x":0.615,"y":0.46499999999999997,"count":1},{"x":0.615,"y":0.62,"count":1},{"x":0.615,"y":0.9299999999999999,"count":1},{"x":0.615,"y":1.24,"count":1},{"x":0.615,"y":1.55,"count":1},{"x":0.640625,"y":0.0775,"count":2},{"x":0.640625,"y":0.9299999999999999,"count":1},{"x":0.640625,"y":1.0075,"count":1},{"x":0.640625,"y":1.55,"count":1},{"x":0.66625,"y":0,"count":1},{"x":0.66625,"y":0.3875,"count":1},{"x":0.66625,"y":0.6975,"count":1},{"x":0.691875,"y":0,"count":1},{"x":0.7175,"y":0.0775,"count":1},{"x":0.743125,"y":0.155,"count":1},{"x":0.794375,"y":0.155,"count":1}]}}}},"dirty":true}

/***/ })
/******/ ]);